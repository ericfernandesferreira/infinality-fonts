From 52f9d79773b745e131f00c441fef927647834148 Mon Sep 17 00:00:00 2001
From: Raziel-23 <venom23@runbox.com>
Date: Sat, 15 Aug 2015 17:35:30 +0200
Subject: [PATCH] Fix an overflow when casting from double to int

---
From 3cd573fc1fb67db75cd356cad3e901d24af1ce8a Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 20 Nov 2013 18:44:59 +0900
Subject: [PATCH] Bug 71287 - size specific design selection support in OS/2
 table version 5

This feature requires the FreeType 2.5.1 or later at the build time.

Besides <range> element allows <double> elements with this changes.

This may breaks the cache but not bumping in this change sets at this moment.
please be aware if you want to try it and run fc-cache before/after to
avoid the weird thing against it.
---
 configure.ac            |   4 +
 fontconfig/fcprivate.h  |   3 +
 fontconfig/fontconfig.h |  28 ++++++-
 src/Makefile.am         |   1 +
 src/fccfg.c             |  48 +++++++----
 src/fcdbg.c             |  13 ++-
 src/fcdefault.c         |  47 ++++++-----
 src/fcfreetype.c        |  38 +++++++++
 src/fcint.h             |  85 ++++++++++++++++----
 src/fclist.c            |   2 +
 src/fcmatch.c           |  45 +++++++++++
 src/fcname.c            |  49 +++++++++++-
 src/fcobjs.h            |   2 +-
 src/fcpat.c             |  73 +++++++++++++++++
 src/fcrange.c           | 207 ++++++++++++++++++++++++++++++++++++++++++++++++
 src/fcxml.c             | 108 +++++++++++++++++++------
 16 files changed, 663 insertions(+), 90 deletions(-)
 create mode 100644 src/fcrange.c

diff --git a/configure.ac b/configure.ac
index 1086a9a..80875df 100644
--- a/configure.ac
+++ b/configure.ac
@@ -321,6 +321,10 @@ AC_CHECK_MEMBER(FT_Bitmap_Size.y_ppem,
 #include FT_FREETYPE_H])
 AC_DEFINE_UNQUOTED(HAVE_FT_BITMAP_SIZE_Y_PPEM,$HAVE_FT_BITMAP_SIZE_Y_PPEM,
 		   [FT_Bitmap_Size structure includes y_ppem field])
+AC_CHECK_MEMBERS([TT_OS2.usLowerOpticalPointSize, TT_OS2.usUpperOpticalPointSize], [], [], [[
+#include <ft2build.h>
+#include FT_FREETYPE_H
+#include FT_TRUETYPE_TABLES_H]])
 CFLAGS="$fontconfig_save_cflags"
 LIBS="$fontconfig_save_libs"
 
diff --git a/fontconfig/fcprivate.h b/fontconfig/fcprivate.h
index 210c1d8..a6ee5c2 100644
--- a/fontconfig/fcprivate.h
+++ b/fontconfig/fcprivate.h
@@ -77,6 +77,9 @@
 	case FcTypeLangSet:					    \
 	    __v__.u.l = va_arg (va, const FcLangSet *);		    \
 	    break;						    \
+	case FcTypeRange:					    \
+	    __v__.u.r = va_arg (va, const FcRange *);		    \
+	    break;						    \
 	}							    \
 	if (!FcPatternAdd (__p__, __o__, __v__, FcTrue))	    \
 	    goto _FcPatternVapBuild_bail1;			    \
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index 2258251..069cb60 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -75,7 +75,7 @@ typedef int		FcBool;
 #define FC_STYLE	    "style"		/* String */
 #define FC_SLANT	    "slant"		/* Int */
 #define FC_WEIGHT	    "weight"		/* Int */
-#define FC_SIZE		    "size"		/* Double */
+#define FC_SIZE		    "size"		/* Range (double) */
 #define FC_ASPECT	    "aspect"		/* Double */
 #define FC_PIXEL_SIZE	    "pixelsize"		/* Double */
 #define FC_SPACING	    "spacing"		/* Int */
@@ -194,7 +194,8 @@ typedef enum _FcType {
     FcTypeMatrix,
     FcTypeCharSet,
     FcTypeFTFace,
-    FcTypeLangSet
+    FcTypeLangSet,
+    FcTypeRange
 } FcType;
 
 typedef struct _FcMatrix {
@@ -231,6 +232,8 @@ typedef struct _FcPattern   FcPattern;
 
 typedef struct _FcLangSet   FcLangSet;
 
+typedef struct _FcRange	    FcRange;
+
 typedef struct _FcValue {
     FcType	type;
     union {
@@ -242,6 +245,7 @@ typedef struct _FcValue {
 	const FcCharSet	*c;
 	void		*f;
 	const FcLangSet	*l;
+	const FcRange	*r;
     } u;
 } FcValue;
 
@@ -853,6 +857,9 @@ FcPatternAddBool (FcPattern *p, const char *object, FcBool b);
 FcPublic FcBool
 FcPatternAddLangSet (FcPattern *p, const char *object, const FcLangSet *ls);
 
+FcPublic FcBool
+FcPatternAddRange (FcPattern *p, const char *object, const FcRange *r);
+
 FcPublic FcResult
 FcPatternGetInteger (const FcPattern *p, const char *object, int n, int *i);
 
@@ -874,6 +881,9 @@ FcPatternGetBool (const FcPattern *p, const char *object, int n, FcBool *b);
 FcPublic FcResult
 FcPatternGetLangSet (const FcPattern *p, const char *object, int n, FcLangSet **ls);
 
+FcPublic FcResult
+FcPatternGetRange (const FcPattern *p, const char *object, int id, FcRange **r);
+
 FcPublic FcPattern *
 FcPatternVaBuild (FcPattern *p, va_list va);
     
@@ -883,6 +893,20 @@ FcPatternBuild (FcPattern *p, ...) FC_ATTRIBUTE_SENTINEL(0);
 FcPublic FcChar8 *
 FcPatternFormat (FcPattern *pat, const FcChar8 *format);
 
+/* fcrange.c */
+FcPublic FcRange *
+FcRangeCreateDouble (double begin, double end);
+
+FcPublic FcRange *
+FcRangeCreateInteger (FcChar32 begin, FcChar32 end);
+
+FcPublic void
+FcRangeDestroy (FcRange *range);
+
+FcPublic FcRange *
+FcRangeCopy (const FcRange *r);
+
+
 /* fcstr.c */
 
 FcPublic FcChar8 *
diff --git a/src/Makefile.am b/src/Makefile.am
index 066cc03..be20eba 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -151,6 +151,7 @@ libfontconfig_la_SOURCES = \
 	fcobjs.h \
 	fcobjshash.h \
 	fcpat.c \
+	fcrange.c \
 	fcserialize.c \
 	fcstat.c \
 	fcstr.c \
diff --git a/src/fccfg.c b/src/fccfg.c
index 6377fd7..cdb8c0f 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -722,6 +722,11 @@ FcConfigPromote (FcValue v, FcValue u, FcValuePromotionBuffer *buf)
 	v.u.l = FcLangSetPromote (v.u.s, buf);
 	v.type = FcTypeLangSet;
     }
+    if (buf && v.type == FcTypeDouble && u.type == FcTypeRange)
+    {
+	v.u.r = FcRangePromote (v.u.d, buf);
+	v.type = FcTypeRange;
+    }
     return v;
 }
 
@@ -894,6 +899,9 @@ FcConfigCompareValue (const FcValue	*left_o,
 		break;
 	    }
 	    break;
+	case FcTypeRange:
+	    ret = FcRangeCompare (op, left.u.r, right.u.r);
+	    break;
 	}
     }
     else
@@ -915,10 +923,11 @@ FcConfigCompareValue (const FcValue	*left_o,
 static FcValue
 FcConfigEvaluate (FcPattern *p, FcPattern *p_pat, FcMatchKind kind, FcExpr *e)
 {
-    FcValue	v, vl, vr;
+    FcValue	v, vl, vr, vle, vre;
     FcMatrix	*m;
     FcChar8     *str;
     FcOp	op = FC_OP_GET_OP (e->op);
+    FcValuePromotionBuffer buf1, buf2;
 
     switch ((int) op) {
     case FcOpInteger:
@@ -967,6 +976,11 @@ FcConfigEvaluate (FcPattern *p, FcPattern *p_pat, FcMatchKind kind, FcExpr *e)
 	v.u.l = e->u.lval;
 	v = FcValueSave (v);
 	break;
+    case FcOpRange:
+	v.type = FcTypeRange;
+	v.u.r = e->u.rval;
+	v = FcValueSave (v);
+	break;
     case FcOpBool:
 	v.type = FcTypeBool;
 	v.u.b = e->u.bval;
@@ -1033,28 +1047,28 @@ FcConfigEvaluate (FcPattern *p, FcPattern *p_pat, FcMatchKind kind, FcExpr *e)
     case FcOpDivide:
 	vl = FcConfigEvaluate (p, p_pat, kind, e->u.tree.left);
 	vr = FcConfigEvaluate (p, p_pat, kind, e->u.tree.right);
-	vl = FcConfigPromote (vl, vr, NULL);
-	vr = FcConfigPromote (vr, vl, NULL);
-	if (vl.type == vr.type)
+	vle = FcConfigPromote (vl, vr, &buf1);
+	vre = FcConfigPromote (vr, vle, &buf2);
+	if (vle.type == vre.type)
 	{
-	    switch ((int) vl.type) {
+	    switch ((int) vle.type) {
 	    case FcTypeDouble:
 		switch ((int) op) {
 		case FcOpPlus:	
 		    v.type = FcTypeDouble;
-		    v.u.d = vl.u.d + vr.u.d;
+		    v.u.d = vle.u.d + vre.u.d;
 		    break;
 		case FcOpMinus:
 		    v.type = FcTypeDouble;
-		    v.u.d = vl.u.d - vr.u.d;
+		    v.u.d = vle.u.d - vre.u.d;
 		    break;
 		case FcOpTimes:
 		    v.type = FcTypeDouble;
-		    v.u.d = vl.u.d * vr.u.d;
+		    v.u.d = vle.u.d * vre.u.d;
 		    break;
 		case FcOpDivide:
 		    v.type = FcTypeDouble;
-		    v.u.d = vl.u.d / vr.u.d;
+		    v.u.d = vle.u.d / vre.u.d;
 		    break;
 		default:
 		    v.type = FcTypeVoid;
@@ -1071,11 +1085,11 @@ FcConfigEvaluate (FcPattern *p, FcPattern *p_pat, FcMatchKind kind, FcExpr *e)
 		switch ((int) op) {
 		case FcOpOr:
 		    v.type = FcTypeBool;
-		    v.u.b = vl.u.b || vr.u.b;
+		    v.u.b = vle.u.b || vre.u.b;
 		    break;
 		case FcOpAnd:
 		    v.type = FcTypeBool;
-		    v.u.b = vl.u.b && vr.u.b;
+		    v.u.b = vle.u.b && vre.u.b;
 		    break;
 		default:
 		    v.type = FcTypeVoid;
@@ -1086,7 +1100,7 @@ FcConfigEvaluate (FcPattern *p, FcPattern *p_pat, FcMatchKind kind, FcExpr *e)
 		switch ((int) op) {
 		case FcOpPlus:
 		    v.type = FcTypeString;
-		    str = FcStrPlus (vl.u.s, vr.u.s);
+		    str = FcStrPlus (vle.u.s, vre.u.s);
 		    v.u.s = FcStrdup (str);
 		    FcStrFree (str);
 			
@@ -1105,7 +1119,7 @@ FcConfigEvaluate (FcPattern *p, FcPattern *p_pat, FcMatchKind kind, FcExpr *e)
 		    m = malloc (sizeof (FcMatrix));
 		    if (m)
 		    {
-			FcMatrixMultiply (m, vl.u.m, vr.u.m);
+			FcMatrixMultiply (m, vle.u.m, vre.u.m);
 			v.u.m = m;
 		    }
 		    else
@@ -1122,13 +1136,13 @@ FcConfigEvaluate (FcPattern *p, FcPattern *p_pat, FcMatchKind kind, FcExpr *e)
 		switch ((int) op) {
 		case FcOpPlus:
 		    v.type = FcTypeCharSet;
-		    v.u.c = FcCharSetUnion (vl.u.c, vr.u.c);
+		    v.u.c = FcCharSetUnion (vle.u.c, vre.u.c);
 		    if (!v.u.c)
 			v.type = FcTypeVoid;
 		    break;
 		case FcOpMinus:
 		    v.type = FcTypeCharSet;
-		    v.u.c = FcCharSetSubtract (vl.u.c, vr.u.c);
+		    v.u.c = FcCharSetSubtract (vle.u.c, vre.u.c);
 		    if (!v.u.c)
 			v.type = FcTypeVoid;
 		    break;
@@ -1141,13 +1155,13 @@ FcConfigEvaluate (FcPattern *p, FcPattern *p_pat, FcMatchKind kind, FcExpr *e)
 		switch ((int) op) {
 		case FcOpPlus:
 		    v.type = FcTypeLangSet;
-		    v.u.l = FcLangSetUnion (vl.u.l, vr.u.l);
+		    v.u.l = FcLangSetUnion (vle.u.l, vre.u.l);
 		    if (!v.u.l)
 			v.type = FcTypeVoid;
 		    break;
 		case FcOpMinus:
 		    v.type = FcTypeLangSet;
-		    v.u.l = FcLangSetSubtract (vl.u.l, vr.u.l);
+		    v.u.l = FcLangSetSubtract (vle.u.l, vre.u.l);
 		    if (!v.u.l)
 			v.type = FcTypeVoid;
 		    break;
diff --git a/src/fcdbg.c b/src/fcdbg.c
index d74bc27..ef038f0 100644
--- a/src/fcdbg.c
+++ b/src/fcdbg.c
@@ -29,6 +29,8 @@
 static void
 _FcValuePrintFile (FILE *f, const FcValue v)
 {
+    FcRange r;
+
     switch (v.type) {
     case FcTypeUnknown:
 	fprintf (f, "<unknown>");
@@ -61,6 +63,10 @@ _FcValuePrintFile (FILE *f, const FcValue v)
     case FcTypeFTFace:
 	fprintf (f, "face");
 	break;
+    case FcTypeRange:
+	r = FcRangeCanonicalize (v.u.r);
+	fprintf (f, "(%g, %g)", r.u.d.begin, r.u.d.end);
+	break;
     }
 }
 
@@ -261,6 +267,8 @@ FcOpPrint (FcOp op_)
 void
 FcExprPrint (const FcExpr *expr)
 {
+    FcRange r;
+
     if (!expr) printf ("none");
     else switch (FC_OP_GET_OP (expr->op)) {
     case FcOpInteger: printf ("%d", expr->u.ival); break;
@@ -277,7 +285,10 @@ FcExprPrint (const FcExpr *expr)
 	FcExprPrint (expr->u.mexpr->yy);
 	printf ("]");
 	break;
-    case FcOpRange: break;
+    case FcOpRange:
+	r = FcRangeCanonicalize (expr->u.rval);
+	printf ("(%g, %g)", r.u.d.begin, r.u.d.end);
+	break;
     case FcOpBool: printf ("%s", expr->u.bval ? "true" : "false"); break;
     case FcOpCharSet: printf ("charset\n"); break;
     case FcOpLangSet:
diff --git a/src/fcdefault.c b/src/fcdefault.c
index 4beda7c..7c16f48 100644
--- a/src/fcdefault.c
+++ b/src/fcdefault.c
@@ -219,6 +219,7 @@ FcDefaultSubstitute (FcPattern *pattern)
 {
     FcValue v, namelang, v2;
     int	    i;
+    double	dpi, size, scale, pixelsize;
 
     if (FcPatternObjectGet (pattern, FC_WEIGHT_OBJECT, 0, &v) == FcResultNoMatch )
 	FcPatternObjectAddInteger (pattern, FC_WEIGHT_OBJECT, FC_WEIGHT_NORMAL);
@@ -233,32 +234,30 @@ FcDefaultSubstitute (FcPattern *pattern)
 	if (FcPatternObjectGet (pattern, FcBoolDefaults[i].field, 0, &v) == FcResultNoMatch)
 	    FcPatternObjectAddBool (pattern, FcBoolDefaults[i].field, FcBoolDefaults[i].value);
 
-    if (FcPatternObjectGet (pattern, FC_PIXEL_SIZE_OBJECT, 0, &v) == FcResultNoMatch)
-    {
-	double	dpi, size, scale;
+    if (FcPatternObjectGetDouble (pattern, FC_SIZE_OBJECT, 0, &size) != FcResultMatch)
+	size = 12.0L;
+    if (FcPatternObjectGetDouble (pattern, FC_SCALE_OBJECT, 0, &scale) != FcResultMatch)
+	scale = 1.0;
+    if (FcPatternObjectGetDouble (pattern, FC_DPI_OBJECT, 0, &dpi) != FcResultMatch)
+	dpi = 75.0;
 
-	if (FcPatternObjectGetDouble (pattern, FC_SIZE_OBJECT, 0, &size) != FcResultMatch)
-	{
-	    size = 12.0;
-	    (void) FcPatternObjectDel (pattern, FC_SIZE_OBJECT);
-	    FcPatternObjectAddDouble (pattern, FC_SIZE_OBJECT, size);
-	}
-	if (FcPatternObjectGetDouble (pattern, FC_SCALE_OBJECT, 0, &scale) != FcResultMatch)
-	{
-	    scale = 1.0;
-	    (void) FcPatternObjectDel (pattern, FC_SCALE_OBJECT);
-	    FcPatternObjectAddDouble (pattern, FC_SCALE_OBJECT, scale);
-	}
-	size *= scale;
-	if (FcPatternObjectGetDouble (pattern, FC_DPI_OBJECT, 0, &dpi) != FcResultMatch)
-	{
-	    dpi = 75.0;
-	    (void) FcPatternObjectDel (pattern, FC_DPI_OBJECT);
-	    FcPatternObjectAddDouble (pattern, FC_DPI_OBJECT, dpi);
-	}
-	size *= dpi / 72.0;
-	FcPatternObjectAddDouble (pattern, FC_PIXEL_SIZE_OBJECT, size);
+    if (FcPatternObjectGet (pattern, FC_PIXEL_SIZE_OBJECT, 0, &v) != FcResultMatch)
+    {
+	(void) FcPatternObjectDel (pattern, FC_SCALE_OBJECT);
+	FcPatternObjectAddDouble (pattern, FC_SCALE_OBJECT, scale);
+	pixelsize = size * scale;
+	(void) FcPatternObjectDel (pattern, FC_DPI_OBJECT);
+	FcPatternObjectAddDouble (pattern, FC_DPI_OBJECT, dpi);
+	pixelsize *= dpi / 72.0;
+	FcPatternObjectAddDouble (pattern, FC_PIXEL_SIZE_OBJECT, pixelsize);
+    }
+    else
+    {
+	size = v.u.d;
+	size = size / dpi * 72.0 / scale;
     }
+    (void) FcPatternObjectDel (pattern, FC_SIZE_OBJECT);
+    FcPatternObjectAddDouble (pattern, FC_SIZE_OBJECT, size);
 
     if (FcPatternObjectGet (pattern, FC_FONTVERSION_OBJECT, 0, &v) == FcResultNoMatch)
     {
diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index d271d69..53f0c91 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1107,6 +1107,11 @@ FcFreeTypeQueryFace (const FT_Face  face,
     FcChar8	    *hashstr = NULL;
     FT_Error	    err;
     FT_ULong	    len = 0, alen;
+    FcRange	    *r = NULL;
+#if defined (HAVE_TT_OS2_USUPPEROPTICALPOINTSIZE) && defined (HAVE_TT_OS2_USLOWEROPTICALPOINTSIZE)
+    double	    lower_size = 0.0L, upper_size = DBL_MAX;
+#endif
+
 
     pat = FcPatternCreate ();
     if (!pat)
@@ -1514,6 +1519,39 @@ FcFreeTypeQueryFace (const FT_Face  face,
 	free (complex_);
     }
 
+#if defined (HAVE_TT_OS2_USUPPEROPTICALPOINTSIZE) && defined (HAVE_TT_OS2_USLOWEROPTICALPOINTSIZE)
+    if (os2 && os2->version >= 0x0005 && os2->version != 0xffff)
+    {
+	/* usLowerPointSize and usUpperPointSize is actually twips */
+	lower_size = os2->usLowerOpticalPointSize / 20.0L;
+	upper_size = os2->usUpperOpticalPointSize / 20.0L;
+    }
+#endif
+    if (os2)
+    {
+	r = FcRangeCreateDouble (lower_size, upper_size);
+	if (!FcPatternAddRange (pat, FC_SIZE, r))
+	{
+	    FcRangeDestroy (r);
+	    goto bail1;
+	}
+	FcRangeDestroy (r);
+    }
+    else
+    {
+	for (i = 0; i < face->num_fixed_sizes; i++)
+	{
+	    double d = FcGetPixelSize (face, i);
+	    r = FcRangeCreateDouble (d, d);
+	    if (!FcPatternAddRange (pat, FC_SIZE, r))
+	    {
+		FcRangeDestroy (r);
+		goto bail1;
+	    }
+	    FcRangeDestroy (r);
+	}
+    }
+
     /*
      * Type 1: Check for FontInfo dictionary information
      * Code from g2@magestudios.net (Gerard Escalante)
diff --git a/src/fcint.h b/src/fcint.h
index cdf2dab..dd26fd8 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -38,6 +38,8 @@
 #include <assert.h>
 #include <errno.h>
 #include <limits.h>
+#include <float.h>
+#include <math.h>
 #include <unistd.h>
 #include <stddef.h>
 #include <sys/types.h>
@@ -94,6 +96,11 @@ extern pfnSHGetFolderPathA pSHGetFolderPathA;
 #define FC_MAX(a,b) ((a) > (b) ? (a) : (b))
 #define FC_ABS(a)   ((a) < 0 ? -(a) : (a))
 
+#define FcDoubleIsZero(a)	(fabs ((a)) <= DBL_EPSILON)
+#define FcDoubleCmpEQ(a,b)	(fabs ((a) - (b)) <= DBL_EPSILON)
+#define FcDoubleCmpGE(a,b)	(FcDoubleCmpEQ (a, b) || (a) > (b))
+#define FcDoubleCmpLE(a,b)	(FcDoubleCmpEQ (a, b) || (a) < (b))
+
 /* slim_internal.h */
 #if (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 3)) && defined(__ELF__) && !defined(__sun)
 #define FcPrivate		__attribute__((__visibility__("hidden")))
@@ -161,6 +168,7 @@ typedef enum _FcValueBinding {
 #define FcValueString(v)	FcPointerMember(v,u.s,FcChar8)
 #define FcValueCharSet(v)	FcPointerMember(v,u.c,const FcCharSet)
 #define FcValueLangSet(v)	FcPointerMember(v,u.l,const FcLangSet)
+#define FcValueRange(v)		FcPointerMember(v,u.r,const FcRange)
 
 typedef struct _FcValueList *FcValueListPtr;
 
@@ -244,20 +252,38 @@ typedef struct _FcExprName {
   FcMatchKind	kind;
 } FcExprName;
 
+typedef struct _FcRangeInt {
+    FcChar32 begin;
+    FcChar32 end;
+} FcRangeInt;
+typedef struct _FcRangeDouble {
+    double begin;
+    double end;
+} FcRangeDouble;
+struct _FcRange {
+    FcBool is_double;
+    FcBool is_inclusive;
+    union {
+	FcRangeInt i;
+	FcRangeDouble d;
+    } u;
+};
+
 
 typedef struct _FcExpr {
     FcOp   op;
     union {
-	int	    ival;
-	double	    dval;
-	const FcChar8	    *sval;
-	FcExprMatrix *mexpr;
-	FcBool	    bval;
-	FcCharSet   *cval;
-	FcLangSet   *lval;
-
-	FcExprName  name;
-	const FcChar8	    *constant;
+	int		ival;
+	double		dval;
+	const FcChar8	*sval;
+	FcExprMatrix	*mexpr;
+	FcBool		bval;
+	FcCharSet	*cval;
+	FcLangSet	*lval;
+	FcRange		*rval;
+
+	FcExprName	name;
+	const FcChar8	*constant;
 	struct {
 	    struct _FcExpr *left, *right;
 	} tree;
@@ -532,13 +558,6 @@ typedef struct _FcFileTime {
 
 typedef struct _FcCharMap FcCharMap;
 
-typedef struct _FcRange	    FcRange;
-
-struct _FcRange {
-    FcChar32 begin;
-    FcChar32 end;
-};
-
 typedef struct _FcStatFS    FcStatFS;
 
 struct _FcStatFS {
@@ -1008,6 +1027,9 @@ FcPatternObjectAddBool (FcPattern *p, FcObject object, FcBool b);
 FcPrivate FcBool
 FcPatternObjectAddLangSet (FcPattern *p, FcObject object, const FcLangSet *ls);
 
+FcPrivate FcBool
+FcPatternObjectAddRange (FcPattern *p, FcObject object, const FcRange *r);
+
 FcPrivate FcResult
 FcPatternObjectGetInteger (const FcPattern *p, FcObject object, int n, int *i);
 
@@ -1029,6 +1051,9 @@ FcPatternObjectGetBool (const FcPattern *p, FcObject object, int n, FcBool *b);
 FcPrivate FcResult
 FcPatternObjectGetLangSet (const FcPattern *p, FcObject object, int n, FcLangSet **ls);
 
+FcPrivate FcResult
+FcPatternObjectGetRange (const FcPattern *p, FcObject object, int id, FcRange **r);
+
 FcPrivate FcBool
 FcPatternAppend (FcPattern *p, FcPattern *s);
 
@@ -1056,6 +1081,32 @@ extern FcPrivate const FcMatrix    FcIdentityMatrix;
 FcPrivate void
 FcMatrixFree (FcMatrix *mat);
 
+/* fcrange.c */
+
+FcPrivate FcRange
+FcRangeCanonicalize (const FcRange *range);
+
+FcPrivate FcRange *
+FcRangePromote (double v, FcValuePromotionBuffer *vbuf);
+
+FcPrivate FcBool
+FcRangeIsZero (const FcRange *r);
+
+FcPrivate FcBool
+FcRangeIsInRange (const FcRange *a, const FcRange *b);
+
+FcPrivate FcBool
+FcRangeCompare (FcOp op, const FcRange *a, const FcRange *b);
+
+FcPrivate FcChar32
+FcRangeHash (const FcRange *r);
+
+FcPrivate FcBool
+FcRangeSerializeAlloc (FcSerialize *serialize, const FcRange *r);
+
+FcPrivate FcRange *
+FcRangeSerialize (FcSerialize *serialize, const FcRange *r);
+
 /* fcstat.c */
 
 FcPrivate int
diff --git a/src/fclist.c b/src/fclist.c
index a365098..6ad297c 100644
--- a/src/fclist.c
+++ b/src/fclist.c
@@ -273,6 +273,8 @@ FcListValueHash (FcValue    *value)
 	return (long) v.u.f;
     case FcTypeLangSet:
 	return FcLangSetHash (v.u.l);
+    case FcTypeRange:
+	return FcRangeHash (v.u.r);
     }
     return 0;
 }
diff --git a/src/fcmatch.c b/src/fcmatch.c
index 93e013f..0c0a067 100644
--- a/src/fcmatch.c
+++ b/src/fcmatch.c
@@ -189,6 +189,49 @@ FcCompareSize (FcValue *value1, FcValue *value2)
 }
 
 static double
+FcCompareSizeRange (FcValue *v1, FcValue *v2)
+{
+    FcValue value1 = FcValueCanonicalize (v1);
+    FcValue value2 = FcValueCanonicalize (v2);
+    FcRange *r1 = NULL, *r2 = NULL;
+    double ret = -1.0;
+
+    switch ((int) value1.type) {
+    case FcTypeDouble:
+	r1 = FcRangeCreateDouble (value1.u.d, value1.u.d);
+	break;
+    case FcTypeRange:
+	r1 = FcRangeCopy (value1.u.r);
+	break;
+    default:
+	goto bail;
+    }
+    switch ((int) value2.type) {
+    case FcTypeDouble:
+	r2 = FcRangeCreateDouble (value2.u.d, value2.u.d);
+	break;
+    case FcTypeRange:
+	r2 = FcRangeCopy (value2.u.r);
+	break;
+    default:
+	goto bail;
+    }
+
+    if (FcRangeIsInRange (r1, r2))
+	ret = 0.0;
+    else
+	ret = FC_MIN (fabs (r1->u.d.end - r2->u.d.begin), fabs (r1->u.d.begin - r2->u.d.end));
+
+bail:
+    if (r1)
+	FcRangeDestroy (r1);
+    if (r2)
+	FcRangeDestroy (r2);
+
+    return ret;
+}
+
+static double
 FcCompareFilename (FcValue *v1, FcValue *v2)
 {
     const FcChar8 *s1 = FcValueString (v1), *s2 = FcValueString (v2);
@@ -227,6 +270,7 @@ FcCompareHash (FcValue *v1, FcValue *v2)
 #define PRI_FcCompareLang(n)		PRI1(n)
 #define PRI_FcComparePostScript(n)	PRI1(n)
 #define PRI_FcCompareHash(n)		PRI1(n)
+#define PRI_FcCompareSizeRange(n)	PRI1(n)
 
 #define FC_OBJECT(NAME, Type, Cmp)	PRI_##Cmp(NAME)
 
@@ -255,6 +299,7 @@ typedef enum _FcMatcherPriority {
     PRI_FAMILY_WEAK,
     PRI_POSTSCRIPT_NAME_WEAK,
     PRI1(SPACING),
+    PRI1(SIZE),
     PRI1(PIXEL_SIZE),
     PRI1(STYLE),
     PRI1(SLANT),
diff --git a/src/fcname.c b/src/fcname.c
index f302948..4666178 100644
--- a/src/fcname.c
+++ b/src/fcname.c
@@ -87,6 +87,10 @@ FcObjectValidType (FcObject object, FcType type)
 	    if (type == FcTypeLangSet || type == FcTypeString)
 		return FcTrue;
 	    break;
+	case FcTypeRange:
+	    if (type == FcTypeRange || type == FcTypeDouble)
+		return FcTrue;
+	    break;
 	default:
 	    if (type == t->type)
 		return FcTrue;
@@ -273,6 +277,8 @@ FcNameConvert (FcType type, FcChar8 *string)
 {
     FcValue	v;
     FcMatrix	m;
+    double	b, e;
+    char	*p;
 
     v.type = type;
     switch ((int) v.type) {
@@ -307,6 +313,20 @@ FcNameConvert (FcType type, FcChar8 *string)
 	if (!v.u.l)
 	    v.type = FcTypeVoid;
 	break;
+    case FcTypeRange:
+	if (sscanf ((char *) string, "(%lg %lg)", &b, &e) != 2)
+	{
+	    v.u.d = strtod ((char *) string, &p);
+	    if (p != NULL && p[0] != 0)
+	    {
+		v.type = FcTypeVoid;
+		break;
+	    }
+	    v.type = FcTypeDouble;
+	}
+	else
+	    v.u.r = FcRangeCreateDouble (b, e);
+	break;
     default:
 	break;
     }
@@ -476,6 +496,7 @@ FcNameUnparseValue (FcStrBuf	*buf,
 {
     FcChar8	temp[1024];
     FcValue v = FcValueCanonicalize(v0);
+    FcRange r;
 
     switch (v.type) {
     case FcTypeUnknown:
@@ -501,6 +522,18 @@ FcNameUnparseValue (FcStrBuf	*buf,
 	return FcNameUnparseLangSet (buf, v.u.l);
     case FcTypeFTFace:
 	return FcTrue;
+    case FcTypeRange:
+	r = FcRangeCanonicalize (v.u.r);
+	if (!FcDoubleIsZero (r.u.d.begin) || !FcDoubleIsZero (r.u.d.end))
+	{
+	    if (FcDoubleCmpEQ (r.u.d.begin, r.u.d.end))
+		sprintf ((char *) temp, "%g", r.u.d.begin);
+	    else
+		sprintf ((char *) temp, "(%g %g)", r.u.d.begin, r.u.d.end);
+	    return FcNameUnparseString (buf, temp, 0);
+	}
+	else
+	    return FcTrue;
     }
     return FcFalse;
 }
@@ -533,12 +566,13 @@ FcNameUnparse (FcPattern *pat)
 FcChar8 *
 FcNameUnparseEscaped (FcPattern *pat, FcBool escape)
 {
-    FcStrBuf		    buf;
-    FcChar8		    buf_static[8192];
+    FcStrBuf		    buf, buf2;
+    FcChar8		    buf_static[8192], buf2_static[256];
     int			    i;
     FcPatternElt	    *e;
 
     FcStrBufInit (&buf, buf_static, sizeof (buf_static));
+    FcStrBufInit (&buf2, buf2_static, sizeof (buf2_static));
     e = FcPatternObjectFindElt (pat, FC_FAMILY_OBJECT);
     if (e)
     {
@@ -548,10 +582,17 @@ FcNameUnparseEscaped (FcPattern *pat, FcBool escape)
     e = FcPatternObjectFindElt (pat, FC_SIZE_OBJECT);
     if (e)
     {
-	if (!FcNameUnparseString (&buf, (FcChar8 *) "-", 0))
+	FcChar8 *p;
+
+	if (!FcNameUnparseString (&buf2, (FcChar8 *) "-", 0))
 	    goto bail0;
-	if (!FcNameUnparseValueList (&buf, FcPatternEltValues(e), escape ? (FcChar8 *) FC_ESCAPE_FIXED : 0))
+	if (!FcNameUnparseValueList (&buf2, FcPatternEltValues(e), escape ? (FcChar8 *) FC_ESCAPE_FIXED : 0))
 	    goto bail0;
+	p = FcStrBufDoneStatic (&buf2);
+	FcStrBufDestroy (&buf2);
+	if (strlen ((const char *)p) > 1)
+	    if (!FcStrBufString (&buf, p))
+		goto bail0;
     }
     for (i = 0; i < NUM_OBJECT_TYPES; i++)
     {
diff --git a/src/fcobjs.h b/src/fcobjs.h
index a0ee079..72e71f9 100644
--- a/src/fcobjs.h
+++ b/src/fcobjs.h
@@ -31,7 +31,7 @@ FC_OBJECT (FULLNAMELANG,	FcTypeString,	NULL)
 FC_OBJECT (SLANT,		FcTypeInteger,	FcCompareNumber)
 FC_OBJECT (WEIGHT,		FcTypeInteger,	FcCompareNumber)
 FC_OBJECT (WIDTH,		FcTypeInteger,	FcCompareNumber)
-FC_OBJECT (SIZE,		FcTypeDouble,	NULL)
+FC_OBJECT (SIZE,		FcTypeRange,	FcCompareSizeRange)
 FC_OBJECT (ASPECT,		FcTypeDouble,	NULL)
 FC_OBJECT (PIXEL_SIZE,		FcTypeDouble,	FcCompareSize)
 FC_OBJECT (SPACING,		FcTypeInteger,	FcCompareNumber)
diff --git a/src/fcpat.c b/src/fcpat.c
index 986cca3..7e7d54a 100644
--- a/src/fcpat.c
+++ b/src/fcpat.c
@@ -57,6 +57,9 @@ FcValueDestroy (FcValue v)
     case FcTypeLangSet:
 	FcLangSetDestroy ((FcLangSet *) v.u.l);
 	break;
+    case FcTypeRange:
+	FcRangeDestroy ((FcRange *) v.u.r);
+	break;
     default:
 	break;
     }
@@ -81,6 +84,10 @@ FcValueCanonicalize (const FcValue *v)
 	new.u.l = FcValueLangSet(v);
 	new.type = FcTypeLangSet;
 	break;
+    case FcTypeRange:
+	new.u.r = FcValueRange(v);
+	new.type = FcTypeRange;
+	break;
     default:
 	new = *v;
 	break;
@@ -112,6 +119,11 @@ FcValueSave (FcValue v)
 	if (!v.u.l)
 	    v.type = FcTypeVoid;
 	break;
+    case FcTypeRange:
+	v.u.r = FcRangeCopy (v.u.r);
+	if (!v.u.r)
+	    v.type = FcTypeVoid;
+	break;
     default:
 	break;
     }
@@ -145,6 +157,9 @@ FcValueListDestroy (FcValueListPtr l)
 	    FcLangSetDestroy
 		((FcLangSet *) (l->value.u.l));
 	    break;
+	case FcTypeRange:
+	    FcRangeDestroy ((FcRange *) (l->value.u.r));
+	    break;
 	default:
 	    break;
 	}
@@ -267,6 +282,8 @@ FcValueEqual (FcValue va, FcValue vb)
 	return va.u.f == vb.u.f;
     case FcTypeLangSet:
 	return FcLangSetEqual (va.u.l, vb.u.l);
+    case FcTypeRange:
+	return FcRangeIsInRange (va.u.r, vb.u.r);
     }
     return FcFalse;
 }
@@ -320,6 +337,8 @@ FcValueHash (const FcValue *v)
 	       FcStringHash ((const FcChar8 *) ((FT_Face) v->u.f)->style_name);
     case FcTypeLangSet:
 	return FcLangSetHash (FcValueLangSet(v));
+    case FcTypeRange:
+	return FcRangeHash (v->u.r);
     }
     return 0;
 }
@@ -841,6 +860,22 @@ FcPatternAddLangSet (FcPattern *p, const char *object, const FcLangSet *ls)
     return FcPatternAdd (p, object, v, FcTrue);
 }
 
+FcBool
+FcPatternObjectAddRange (FcPattern *p, FcObject object, const FcRange *r)
+{
+    FcValue v;
+
+    v.type = FcTypeRange;
+    v.u.r = (FcRange *)r;
+    return FcPatternObjectAdd (p, object, v, FcTrue);
+}
+
+FcBool
+FcPatternAddRange (FcPattern *p, const char *object, const FcRange *r)
+{
+    return FcPatternObjectAddRange (p, FcObjectFromName (object), r);
+}
+
 FcResult
 FcPatternObjectGet (const FcPattern *p, FcObject object, int id, FcValue *v)
 {
@@ -1025,6 +1060,31 @@ FcPatternGetLangSet(const FcPattern *p, const char *object, int id, FcLangSet **
     return FcResultMatch;
 }
 
+FcResult
+FcPatternObjectGetRange (const FcPattern *p, FcObject object, int id, FcRange **r)
+{
+    FcValue	v;
+    FcResult	res;
+
+    res = FcPatternObjectGet (p, object, id, &v);
+    if (res != FcResultMatch)
+	return res;
+    switch ((int)v.type) {
+    case FcTypeRange:
+	*r = (FcRange *)v.u.r;
+	break;
+    default:
+	return FcResultTypeMismatch;
+    }
+    return FcResultMatch;
+}
+
+FcResult
+FcPatternGetRange (const FcPattern *p, const char *object, int id, FcRange **r)
+{
+    return FcPatternObjectGetRange (p, FcObjectFromName (object), id, r);
+}
+
 FcPattern *
 FcPatternDuplicate (const FcPattern *orig)
 {
@@ -1230,6 +1290,10 @@ FcValueListSerializeAlloc (FcSerialize *serialize, const FcValueList *vl)
 	    if (!FcLangSetSerializeAlloc (serialize, vl->value.u.l))
 		return FcFalse;
 	    break;
+	case FcTypeRange:
+	    if (!FcRangeSerializeAlloc (serialize, vl->value.u.r))
+		return FcFalse;
+	    break;
 	default:
 	    break;
 	}
@@ -1245,6 +1309,7 @@ FcValueListSerialize (FcSerialize *serialize, const FcValueList *vl)
     FcChar8	*s_serialized;
     FcCharSet	*c_serialized;
     FcLangSet	*l_serialized;
+    FcRange	*r_serialized;
     FcValueList	*head_serialized = NULL;
     FcValueList	*prev_serialized = NULL;
 
@@ -1303,6 +1368,14 @@ FcValueListSerialize (FcSerialize *serialize, const FcValueList *vl)
 							     l_serialized,
 							     FcLangSet);
 	    break;
+	case FcTypeRange:
+	    r_serialized = FcRangeSerialize (serialize, vl->value.u.r);
+	    if (!r_serialized)
+		return NULL;
+	    vl_serialized->value.u.r = FcPtrToEncodedOffset (&vl_serialized->value,
+							     r_serialized,
+							     FcRange);
+	    break;
 	default:
 	    break;
 	}
diff --git a/src/fcrange.c b/src/fcrange.c
new file mode 100644
index 0000000..7d0c1c0
--- /dev/null
+++ b/src/fcrange.c
@@ -0,0 +1,207 @@
+/*
+ * fontconfig/src/fcrange.c
+ *
+ * Copyright © 2002 Keith Packard
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and its
+ * documentation for any purpose is hereby granted without fee, provided that
+ * the above copyright notice appear in all copies and that both that
+ * copyright notice and this permission notice appear in supporting
+ * documentation, and that the name of the author(s) not be used in
+ * advertising or publicity pertaining to distribution of the software without
+ * specific, written prior permission.  The authors make no
+ * representations about the suitability of this software for any purpose.  It
+ * is provided "as is" without express or implied warranty.
+ *
+ * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
+ * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
+ * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR
+ * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
+ * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
+ * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+ * PERFORMANCE OF THIS SOFTWARE.
+ */
+
+#include "fcint.h"
+
+
+FcRange *
+FcRangeCreateDouble (double begin, double end)
+{
+    FcRange *ret = malloc (sizeof (FcRange));
+
+    if (ret)
+    {
+	ret->is_double = FcTrue;
+	ret->is_inclusive = FcDoubleCmpEQ (begin, end);
+	ret->u.d.begin = begin;
+	ret->u.d.end = end;
+    }
+
+    return ret;
+}
+
+FcRange *
+FcRangeCreateInteger (FcChar32 begin, FcChar32 end)
+{
+    FcRange *ret = malloc (sizeof (FcRange));
+
+    if (ret)
+    {
+	ret->is_double = FcFalse;
+	ret->is_inclusive = (begin == end);
+	ret->u.i.begin = begin;
+	ret->u.i.end = end;
+    }
+
+    return ret;
+}
+
+void
+FcRangeDestroy (FcRange *range)
+{
+    free (range);
+}
+
+FcRange *
+FcRangeCopy (const FcRange *range)
+{
+    FcRange *ret;
+
+    if (range->is_double)
+	ret = FcRangeCreateDouble (range->u.d.begin, range->u.d.end);
+    else
+	ret = FcRangeCreateInteger (range->u.i.begin, range->u.i.end);
+
+    return ret;
+}
+
+FcRange
+FcRangeCanonicalize (const FcRange *range)
+{
+    FcRange new;
+
+    if (range->is_double)
+	new = *range;
+    else
+    {
+	new.is_double = FcTrue;
+	new.is_inclusive = range->is_inclusive;
+	new.u.d.begin = (double)range->u.i.begin;
+	new.u.d.end = (double)range->u.i.end;
+    }
+    return new;
+}
+
+FcRange *
+FcRangePromote (double v, FcValuePromotionBuffer *vbuf)
+{
+    typedef struct {
+	FcRange	r;
+    } FcRangePromotionBuffer;
+    FcRangePromotionBuffer *buf = (FcRangePromotionBuffer *) vbuf;
+
+    FC_ASSERT_STATIC (sizeof (FcRangePromotionBuffer) <= sizeof (FcValuePromotionBuffer));
+    buf->r.is_double = FcTrue;
+    buf->r.is_inclusive = FcTrue;
+    buf->r.u.d.begin = v;
+    buf->r.u.d.end = v;
+
+    return &buf->r;
+}
+
+FcBool
+FcRangeIsZero (const FcRange *r)
+{
+    FcRange c;
+
+    if (!r)
+	return FcFalse;
+    c = FcRangeCanonicalize (r);
+
+    return FcDoubleIsZero (c.u.d.begin) && FcDoubleIsZero (c.u.d.end);
+}
+
+FcBool
+FcRangeIsInRange (const FcRange *a, const FcRange *b)
+{
+    FcRange ca, cb;
+    FcBool f;
+
+    if (!a || !b)
+	return FcFalse;
+
+    ca = FcRangeCanonicalize (a);
+    cb = FcRangeCanonicalize (b);
+    if (ca.is_inclusive & cb.is_inclusive)
+	f = ca.u.d.end <= cb.u.d.end;
+    else
+	f = ca.u.d.end < cb.u.d.end;
+
+    return FcDoubleCmpGE (ca.u.d.begin, cb.u.d.begin) && f;
+}
+
+FcBool
+FcRangeCompare (FcOp op, const FcRange *a, const FcRange *b)
+{
+    FcRange ca, cb;
+
+    switch ((int) op) {
+    case FcOpEqual:
+    case FcOpContains:
+    case FcOpListing:
+	return FcRangeIsInRange (a, b);
+    case FcOpNotEqual:
+    case FcOpNotContains:
+	return !FcRangeIsInRange (a, b);
+    case FcOpLess:
+	ca = FcRangeCanonicalize (a);
+	cb = FcRangeCanonicalize (b);
+	return ca.u.d.begin < cb.u.d.begin;
+    case FcOpLessEqual:
+	ca = FcRangeCanonicalize (a);
+	cb = FcRangeCanonicalize (b);
+	return FcDoubleCmpLE (ca.u.d.begin, cb.u.d.begin);
+    case FcOpMore:
+	ca = FcRangeCanonicalize (a);
+	cb = FcRangeCanonicalize (b);
+	return ca.u.d.end > cb.u.d.end;
+    case FcOpMoreEqual:
+	ca = FcRangeCanonicalize (a);
+	cb = FcRangeCanonicalize (b);
+	return FcDoubleCmpGE (ca.u.d.end, cb.u.d.end);
+    default:
+	break;
+    }
+    return FcFalse;
+}
+
+FcChar32
+FcRangeHash (const FcRange *r)
+{
+    FcRange c = FcRangeCanonicalize (r);
+    int b = (int) (c.u.d.begin >= (INT_MAX / 100) ? INT_MAX : (c.u.d.begin <= (INT_MIN / 100) ? INT_MIN : (c.u.d.begin * 100)));
+    int e = (int) (c.u.d.end >= (INT_MAX / 100) ? INT_MAX : (c.u.d.end <= (INT_MIN / 100) ? INT_MIN : (c.u.d.end * 100)));
+
+    return b ^ (b << 1) ^ (e << 9);
+}
+
+FcBool
+FcRangeSerializeAlloc (FcSerialize *serialize, const FcRange *r)
+{
+    if (!FcSerializeAlloc (serialize, r, sizeof (FcRange)))
+	return FcFalse;
+    return FcTrue;
+}
+
+FcRange *
+FcRangeSerialize (FcSerialize *serialize, const FcRange *r)
+{
+    FcRange *r_serialize = FcSerializePtr (serialize, r);
+
+    if (!r_serialize)
+	return NULL;
+    memcpy (r_serialize, r, sizeof (FcRange));
+
+    return r_serialize;
+}
diff --git a/src/fcxml.c b/src/fcxml.c
index 91d166f..c68b0cf 100644
--- a/src/fcxml.c
+++ b/src/fcxml.c
@@ -169,6 +169,18 @@ FcExprCreateMatrix (FcConfig *config, const FcExprMatrix *matrix)
 }
 
 static FcExpr *
+FcExprCreateRange (FcConfig *config, FcRange *range)
+{
+    FcExpr *e = FcConfigAllocExpr (config);
+    if (e)
+    {
+	e->op = FcOpRange;
+	e->u.rval = FcRangeCopy (range);
+    }
+    return e;
+}
+
+static FcExpr *
 FcExprCreateBool (FcConfig *config, FcBool b)
 {
     FcExpr *e = FcConfigAllocExpr (config);
@@ -258,6 +270,7 @@ FcExprDestroy (FcExpr *e)
 	FcExprMatrixFree (e->u.mexpr);
 	break;
     case FcOpRange:
+	FcRangeDestroy (e->u.rval);
 	break;
     case FcOpCharSet:
 	FcCharSetDestroy (e->u.cval);
@@ -503,7 +516,7 @@ typedef struct _FcVStack {
 	int		integer;
 	double		_double;
 	FcExprMatrix	*matrix;
-	FcRange		range;
+	FcRange		*range;
 	FcBool		bool_;
 	FcCharSet	*charset;
 	FcLangSet	*langset;
@@ -593,6 +606,8 @@ FcTypeName (FcType type)
 	return "FT_Face";
     case FcTypeLangSet:
 	return "langset";
+    case FcTypeRange:
+	return "range";
     default:
 	return "unknown";
     }
@@ -608,7 +623,9 @@ FcTypecheckValue (FcConfigParse *parse, FcType value, FcType type)
     if (value != type)
     {
 	if ((value == FcTypeLangSet && type == FcTypeString) ||
-	    (value == FcTypeString && type == FcTypeLangSet))
+	    (value == FcTypeString && type == FcTypeLangSet) ||
+	    (value == FcTypeInteger && type == FcTypeRange) ||
+	    (value == FcTypeDouble && type == FcTypeRange))
 	    return;
 	if (type ==  FcTypeUnknown)
 	    return;
@@ -651,6 +668,9 @@ FcTypecheckExpr (FcConfigParse *parse, FcExpr *expr, FcType type)
     case FcOpLangSet:
 	FcTypecheckValue (parse, FcTypeLangSet, type);
 	break;
+    case FcOpRange:
+	FcTypecheckValue (parse, FcTypeRange, type);
+	break;
     case FcOpNil:
 	break;
     case FcOpField:
@@ -865,11 +885,10 @@ FcVStackPushMatrix (FcConfigParse *parse, FcExprMatrix *matrix)
 static FcBool
 FcVStackPushRange (FcConfigParse *parse, FcRange *range)
 {
-    FcVStack	*vstack = FcVStackCreateAndPush (parse);
+    FcVStack 	*vstack = FcVStackCreateAndPush (parse);
     if (!vstack)
 	return FcFalse;
-    vstack->u.range.begin = range->begin;
-    vstack->u.range.end = range->end;
+    vstack->u.range = range;
     vstack->tag = FcVStackRange;
     return FcTrue;
 }
@@ -1017,9 +1036,11 @@ FcVStackPopAndDestroy (FcConfigParse *parse)
     case FcVStackMatrix:
 	FcExprMatrixFreeShallow (vstack->u.matrix);
 	break;
-    case FcVStackRange:
     case FcVStackBool:
 	break;
+    case FcVStackRange:
+	FcRangeDestroy (vstack->u.range);
+	break;
     case FcVStackCharSet:
 	FcCharSetDestroy (vstack->u.charset);
 	break;
@@ -1232,7 +1253,9 @@ static void
 FcParseBlank (FcConfigParse *parse)
 {
     int		n = FcVStackElements (parse);
-    FcChar32	i;
+    FcChar32	i, begin, end;
+    FcRange	r;
+
     while (n-- > 0)
     {
 	FcVStack    *v = FcVStackFetch (parse, n);
@@ -1248,9 +1271,12 @@ FcParseBlank (FcConfigParse *parse)
 		goto bail;
 	    break;
 	case FcVStackRange:
-	    if (v->u.range.begin <= v->u.range.end)
+	    r = FcRangeCanonicalize (v->u.range);
+	    begin = (FcChar32)r.u.d.begin;
+	    end = (FcChar32)r.u.d.end;
+	    if (begin <= end)
 	    {
-	      for (i = v->u.range.begin; i <= v->u.range.end; i++)
+	      for (i = begin; i <= end; i++)
 	      {
 		  if (!FcBlanksAdd (parse->config->blanks, i))
 		      goto bail;
@@ -1463,9 +1489,11 @@ static void
 FcParseRange (FcConfigParse *parse)
 {
     FcVStack	*vstack;
-    FcRange	r = {0, 0};
-    FcChar32	n;
+    FcRange	*r;
+    FcChar32	n[2] = {0, 0};
     int		count = 1;
+    double	d[2] = {0.0L, 0.0L};
+    FcBool	dflag = FcFalse;
 
     while ((vstack = FcVStackPeek (parse)))
     {
@@ -1476,31 +1504,52 @@ FcParseRange (FcConfigParse *parse)
 	}
 	switch ((int) vstack->tag) {
 	case FcVStackInteger:
-	    n = vstack->u.integer;
+	    if (dflag)
+		d[count] = (double)vstack->u.integer;
+	    else
+		n[count] = vstack->u.integer;
+	    break;
+	case FcVStackDouble:
+	    if (count == 0 && !dflag)
+		d[1] = (double)n[1];
+	    d[count] = vstack->u._double;
+	    dflag = FcTrue;
 	    break;
 	default:
 	    FcConfigMessage (parse, FcSevereError, "invalid element in range");
-	    n = 0;
+	    if (dflag)
+		d[count] = 0.0L;
+	    else
+		n[count] = 0;
 	    break;
 	}
-	if (count == 1)
-	    r.end = n;
-	else
-	    r.begin = n;
 	count--;
 	FcVStackPopAndDestroy (parse);
     }
-    if (count < 0)
+    if (count >= 0)
+    {
+	FcConfigMessage (parse, FcSevereError, "invalid range");
+	return;
+    }
+    if (dflag)
     {
-	if (r.begin > r.end)
+	if (d[0] > d[1])
 	{
 	    FcConfigMessage (parse, FcSevereError, "invalid range");
 	    return;
 	}
-	FcVStackPushRange (parse, &r);
+	r = FcRangeCreateDouble (d[0], d[1]);
     }
     else
-	FcConfigMessage (parse, FcSevereError, "invalid range");
+    {
+	if (n[0] > n[1])
+	{
+	    FcConfigMessage (parse, FcSevereError, "invalid range");
+	    return;
+	}
+	r = FcRangeCreateInteger (n[0], n[1]);
+    }
+    FcVStackPushRange (parse, r);
 }
 
 static FcBool
@@ -1536,7 +1585,8 @@ FcParseCharSet (FcConfigParse *parse)
 {
     FcVStack	*vstack;
     FcCharSet	*charset = FcCharSetCreate ();
-    FcChar32	i;
+    FcChar32	i, begin, end;
+    FcRange	r;
     int n = 0;
 
     while ((vstack = FcVStackPeek (parse)))
@@ -1551,9 +1601,13 @@ FcParseCharSet (FcConfigParse *parse)
 		n++;
 	    break;
 	case FcVStackRange:
-	    if (vstack->u.range.begin <= vstack->u.range.end)
+	    r = FcRangeCanonicalize (vstack->u.range);
+	    begin = (FcChar32)r.u.d.begin;
+	    end = (FcChar32)r.u.d.end;
+
+	    if (begin <= end)
 	    {
-	      for (i = vstack->u.range.begin; i <= vstack->u.range.end; i++)
+	      for (i = begin; i <= end; i++)
 	      {
 		  if (!FcCharSetAddChar (charset, i))
 		  {
@@ -1888,6 +1942,7 @@ FcPopExpr (FcConfigParse *parse)
 	expr = FcExprCreateMatrix (parse->config, vstack->u.matrix);
 	break;
     case FcVStackRange:
+	expr = FcExprCreateRange (parse->config, vstack->u.range);
 	break;
     case FcVStackBool:
 	expr = FcExprCreateBool (parse->config, vstack->u.bool_);
@@ -2653,6 +2708,11 @@ FcPopValue (FcConfigParse *parse)
 	if (value.u.l)
 	    value.type = FcTypeLangSet;
 	break;
+    case FcVStackRange:
+	value.u.r = FcRangeCopy (vstack->u.range);
+	if (value.u.r)
+	    value.type = FcTypeRange;
+	break;
     default:
 	FcConfigMessage (parse, FcSevereWarning, "unknown pattern element %d",
 			 vstack->tag);
-- 
2.3.3

From fff91eee7df5a71ed9a63a4b6e3b02c14eaf9cb3 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 26 Mar 2014 12:22:02 +0900
Subject: [PATCH] Fix a build issue with freetype <2.5.1

---
 src/fcfreetype.c | 3 ---
 1 file changed, 3 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 53f0c91..d0932b3 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1108,10 +1108,7 @@ FcFreeTypeQueryFace (const FT_Face  face,
     FT_Error	    err;
     FT_ULong	    len = 0, alen;
     FcRange	    *r = NULL;
-#if defined (HAVE_TT_OS2_USUPPEROPTICALPOINTSIZE) && defined (HAVE_TT_OS2_USLOWEROPTICALPOINTSIZE)
     double	    lower_size = 0.0L, upper_size = DBL_MAX;
-#endif
-
 
     pat = FcPatternCreate ();
     if (!pat)
-- 
2.3.3

From fcba9ef01c978323fc71c17e455d3cd6ae35edcc Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 26 Mar 2014 16:01:49 +0900
Subject: [PATCH] Fix missing docs

---
 doc/Makefile.am           |  1 +
 doc/fcpattern.fncs        | 27 +++++++++++++++++---
 doc/fcrange.fncs          | 64 +++++++++++++++++++++++++++++++++++++++++++++++
 doc/fontconfig-devel.sgml |  7 ++++++
 4 files changed, 95 insertions(+), 4 deletions(-)
 create mode 100644 doc/fcrange.fncs

diff --git a/doc/Makefile.am b/doc/Makefile.am
index 78a7cdb..7503219 100644
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -81,6 +81,7 @@ DOC_FUNCS_FNCS =		\
 	fcobjectset.fncs	\
 	fcobjecttype.fncs	\
 	fcpattern.fncs		\
+	fcrange.fncs		\
 	fcstring.fncs		\
 	fcstrset.fncs		\
 	fcvalue.fncs		\
diff --git a/doc/fcpattern.fncs b/doc/fcpattern.fncs
index 1df1c4f..1049d77 100644
--- a/doc/fcpattern.fncs
+++ b/doc/fcpattern.fncs
@@ -181,12 +181,21 @@ values added to the list have binding <parameter>weak</parameter> instead of <pa
 @TYPE2+++++++@	const char *			@ARG2+++++++@	object
 @TYPE3+++++++@	const FcLangSet *		@ARG3+++++++@	l
 
+@PROTOTYPE++++++++@
+@RET++++++++@	FcBool
+@FUNC++++++++@	FcPatternAddRange
+@TYPE1++++++++@	FcPattern *			@ARG1++++++++@	p
+@TYPE2++++++++@	const char *			@ARG2++++++++@	object
+@TYPE3++++++++@	const FcRange *			@ARG3++++++++@	r
+
 @PURPOSE@	Add a typed value to a pattern
 @DESC@
 These are all convenience functions that insert objects of the specified
 type into the pattern.  Use these in preference to FcPatternAdd as they
 will provide compile-time typechecking.  These all append values to
 any existing list of values.
+
+<function>FcPatternAddRange</function> are available since 2.11.91.
 @@
 
 @RET@		FcResult
@@ -257,16 +266,24 @@ within the pattern directly.  Applications must not free this value.
 @FUNC++++++@	FcPatternGetFTFace
 @TYPE1++++++@ 	FcPattern * 			@ARG1++++++@ 	p
 @TYPE2++++++@	const char *			@ARG2++++++@	object
-@TYPE3+++++@ 	int%  				@ARG3+++++@ 	n
-@TYPE3++++++@	FT_Face *			@ARG3++++++@	f
+@TYPE3++++++@ 	int%  				@ARG3++++++@ 	n
+@TYPE4++++++@	FT_Face *			@ARG4++++++@	f
 
 @PROTOTYPE+++++++@
 @RET+++++++@	FcResult
 @FUNC+++++++@	FcPatternGetLangSet
 @TYPE1+++++++@ 	FcPattern * 			@ARG1+++++++@ 	p
 @TYPE2+++++++@	const char *			@ARG2+++++++@	object
-@TYPE3+++++@ 	int%  				@ARG3+++++@ 	n
-@TYPE3+++++++@	FcLangSet **			@ARG3+++++++@	l
+@TYPE3+++++++@ 	int%  				@ARG3+++++++@ 	n
+@TYPE4+++++++@	FcLangSet **			@ARG4+++++++@	l
+
+@PROTOTYPE++++++++@
+@RET++++++++@	FcResult
+@FUNC++++++++@	FcPatternGetRange
+@TYPE1++++++++@	FcPattern *			@ARG1++++++++@	p
+@TYPE2++++++++@	const char *			@ARG2++++++++@	object
+@TYPE3++++++++@	int%  	   			@ARG3++++++++@	n
+@TYPE4++++++++@	FcRange **			@ARG4++++++++@	r
 
 @PURPOSE@	Return a typed value from a pattern
 @DESC@
@@ -275,6 +292,8 @@ returned data is of the expected type. They return FcResultTypeMismatch if
 this is not the case.  Note that these (like FcPatternGet) do not make a
 copy of any data structure referenced by the return value.  Use these
 in preference to FcPatternGet to provide compile-time typechecking.
+
+<function>FcPatternGetRange</function> are available since 2.11.91.
 @@
 
 @RET@		FcPattern *
diff --git a/doc/fcrange.fncs b/doc/fcrange.fncs
new file mode 100644
index 0000000..6054595
--- /dev/null
+++ b/doc/fcrange.fncs
@@ -0,0 +1,64 @@
+/*
+ * fontconfig/doc/fcrange.fncs
+ *
+ * Copyright © 2003 Keith Packard
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and its
+ * documentation for any purpose is hereby granted without fee, provided that
+ * the above copyright notice appear in all copies and that both that
+ * copyright notice and this permission notice appear in supporting
+ * documentation, and that the name of the author(s) not be used in
+ * advertising or publicity pertaining to distribution of the software without
+ * specific, written prior permission.  The authors make no
+ * representations about the suitability of this software for any purpose.  It
+ * is provided "as is" without express or implied warranty.
+ *
+ * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
+ * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
+ * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR
+ * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
+ * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
+ * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+ * PERFORMANCE OF THIS SOFTWARE.
+ */
+@RET@		FcRange *
+@FUNC@		FcRangeCopy
+@TYPE1@		const FcRange *			@ARG1@		range
+@PURPOSE@	Copy a range object
+@DESC@
+<function>FcRangeCopy</function> creates a new FcRange object and
+populates it with the contents of <parameter>range</parameter>.
+@SINCE@		2.11.91
+@@
+
+@RET@		FcRange *
+@FUNC@		FcRangeCreateDouble
+@TYPE1@		double				@ARG1@		begin
+@TYPE2@		double				@ARG2@		end
+@PURPOSE@	create a range object for double
+@DESC@
+<function>FcRangeCreateDouble</function> creates a new FcRange object with
+double sized value.
+@SINCE@		2.11.91
+@@
+
+@RET@		FcRange *
+@FUNC@		FcRangeCreateInteger
+@TYPE1@		int				@ARG1@		begin
+@TYPE2@		int				@ARG2@		end
+@PURPOSE@	create a range object for integer
+@DESC@
+<function>FcRangeCreateInteger</function> creates a new FcRange object with
+integer sized value.
+@SINCE@		2.11.91
+@@
+
+@RET@		void
+@FUNC@		FcRangeDestroy
+@TYPE1@		FcRange *			@ARG1@		range
+@PURPOSE@	destroy a range object
+@DESC@
+<function>FcRangeDestroy</function> destroys a FcRange object, freeing
+all memory associated with it.
+@SINCE@		2.11.91
+@@
diff --git a/doc/fontconfig-devel.sgml b/doc/fontconfig-devel.sgml
index 7306d79..e2cb1c2 100644
--- a/doc/fontconfig-devel.sgml
+++ b/doc/fontconfig-devel.sgml
@@ -16,6 +16,7 @@
 <!ENTITY fcobjectset SYSTEM "fcobjectset.sgml">
 <!ENTITY fcobjecttype SYSTEM "fcobjecttype.sgml">
 <!ENTITY fcpattern SYSTEM "fcpattern.sgml">
+<!ENTITY fcrange SYSTEM "fcrange.sgml">
 <!ENTITY fcstring SYSTEM "fcstring.sgml">
 <!ENTITY fcstrset SYSTEM "fcstrset.sgml">
 <!ENTITY fcvalue SYSTEM "fcvalue.sgml">
@@ -508,6 +509,12 @@ FcMatrix structures hold an affine transformation in matrix form.
     </para>
     &fcmatrix;
   </sect2>
+  <sect2><title>FcRange</title>
+    <para>
+An FcRange holds two variables to indicate a range in between.
+    </para>
+    &fcrange;
+  </sect2>
   <sect2><title>FcConfig</title>
     <para>
 An FcConfig object holds the internal representation of a configuration.
-- 
2.3.3

From 91784eb7d0c9f9f357210f4c82555469da37334a Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Fri, 4 Apr 2014 12:18:28 +0900
Subject: [PATCH] Fix a typo

https://bugs.freedesktop.org/show_bug.cgi?id=77033
---
 configure.ac | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/configure.ac b/configure.ac
index 80875df..ce468b8 100644
--- a/configure.ac
+++ b/configure.ac
@@ -155,7 +155,7 @@ AC_CHECK_FUNCS([link mkstemp mkostemp _mktemp_s mkdtemp getopt getopt_long getpr
 dnl AC_CHECK_FUNCS doesn't check for header files.
 dnl posix_fadvise() may be not available in older libc.
 AC_CHECK_SYMBOL([posix_fadvise], [fcntl.h], [fc_func_posix_fadvise=1], [fc_func_posix_fadvise=0])
-AC_DEFINE_UNQUOTED([HAVE_POSIX_FADVISE], [$fc_func_posix_fadvise], [Define to 1 if you have the 'posix_fadivse' function.])
+AC_DEFINE_UNQUOTED([HAVE_POSIX_FADVISE], [$fc_func_posix_fadvise], [Define to 1 if you have the 'posix_fadvise' function.])
 if test "$os_win32" = "no"; then
 	AC_MSG_CHECKING([for scandir])
 	fc_saved_CFLAGS="$CFLAGS"
-- 
2.3.3

From f44157c809d280e2a0ce87fb078fc4b278d24a67 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 10 Apr 2014 19:27:55 +0900
Subject: [PATCH] Fix fc-cache fail with -r

Do not unlink the cache even if --really-force is given.
because re-scanning process expects the cache exists.

https://bugs.freedesktop.org/show_bug.cgi?id=77252
---
 fc-cache/fc-cache.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/fc-cache/fc-cache.c b/fc-cache/fc-cache.c
index 99e0e9f..90ebad3 100644
--- a/fc-cache/fc-cache.c
+++ b/fc-cache/fc-cache.c
@@ -388,7 +388,7 @@ main (int argc, char **argv)
     list = FcStrListCreate (updateDirs);
     if (list)
     {
-	ret += scanDirs (list, config, FcTrue, really_force, verbose, FcFalse, &changed, NULL);
+	ret += scanDirs (list, config, FcTrue, FcFalse, verbose, FcFalse, &changed, NULL);
 	FcStrListDone (list);
     }
     FcStrSetDestroy (updateDirs);
-- 
2.3.3

From 81664fe54f117e4781fda5a30429b51858302e91 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 22 Apr 2014 12:39:12 +0900
Subject: [PATCH] Rebase ja.orth against Joyo kanji characters

Patch from Akihiro TSUKADA
---
 fc-lang/ja.orth | 4234 +------------------------------------------------------
 1 file changed, 7 insertions(+), 4227 deletions(-)

diff --git a/fc-lang/ja.orth b/fc-lang/ja.orth
index e87269b..dbc16d4 100644
--- a/fc-lang/ja.orth
+++ b/fc-lang/ja.orth
@@ -21,13 +21,14 @@
 # TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 # PERFORMANCE OF THIS SOFTWARE.
 #
-# Coverage from JIS X 0208 (1990)
+# Coverage from JIS X 0208 (1997) for non kanji characters, and
+# Joyo Kanji List (2010, cabinet notification of regular-use chinese characters)
 #
 0x3000	# IDEOGRAPHIC SPACE
 0x3001	# IDEOGRAPHIC COMMA
 0x3002	# IDEOGRAPHIC FULL STOP
 0x3005	# IDEOGRAPHIC ITERATION MARK
-0x3006	# IDEOGRAPHIC CLOSING MARK
+#0x3006	# IDEOGRAPHIC CLOSING MARK # not in Sawarabi Gothic
 0x3007	# IDEOGRAPHIC NUMBER ZERO
 0x3041	# HIRAGANA LETTER SMALL A
 0x3042	# HIRAGANA LETTER A
@@ -216,171 +217,88 @@
 0x4E0B	# <CJK>
 0x4E0D	# <CJK>
 0x4E0E	# <CJK>
-0x4E10	# <CJK>
-0x4E11	# <CJK>
 0x4E14	# <CJK>
-0x4E15	# <CJK>
 0x4E16	# <CJK>
-0x4E17	# <CJK>
 0x4E18	# <CJK>
 0x4E19	# <CJK>
-0x4E1E	# <CJK>
 0x4E21	# <CJK>
 0x4E26	# <CJK>
-0x4E2A	# <CJK>
 0x4E2D	# <CJK>
-0x4E31	# <CJK>
 0x4E32	# <CJK>
-0x4E36	# <CJK>
 0x4E38	# <CJK>
 0x4E39	# <CJK>
 0x4E3B	# <CJK>
 0x4E3C	# <CJK>
-0x4E3F	# <CJK>
-0x4E42	# <CJK>
-0x4E43	# <CJK>
 0x4E45	# <CJK>
-0x4E4B	# <CJK>
-0x4E4D	# <CJK>
-0x4E4E	# <CJK>
 0x4E4F	# <CJK>
-0x4E55	# <CJK>
-0x4E56	# <CJK>
 0x4E57	# <CJK>
-0x4E58	# <CJK>
 0x4E59	# <CJK>
 0x4E5D	# <CJK>
 0x4E5E	# <CJK>
-0x4E5F	# <CJK>
-0x4E62	# <CJK>
 0x4E71	# <CJK>
 0x4E73	# <CJK>
 0x4E7E	# <CJK>
 0x4E80	# <CJK>
-0x4E82	# <CJK>
-0x4E85	# <CJK>
 0x4E86	# <CJK>
 0x4E88	# <CJK>
 0x4E89	# <CJK>
-0x4E8A	# <CJK>
 0x4E8B	# <CJK>
 0x4E8C	# <CJK>
-0x4E8E	# <CJK>
-0x4E91	# <CJK>
 0x4E92	# <CJK>
 0x4E94	# <CJK>
 0x4E95	# <CJK>
-0x4E98	# <CJK>
-0x4E99	# <CJK>
-0x4E9B	# <CJK>
 0x4E9C	# <CJK>
-0x4E9E	# <CJK>
-0x4E9F	# <CJK>
-0x4EA0	# <CJK>
 0x4EA1	# <CJK>
-0x4EA2	# <CJK>
 0x4EA4	# <CJK>
-0x4EA5	# <CJK>
-0x4EA6	# <CJK>
-0x4EA8	# <CJK>
 0x4EAB	# <CJK>
 0x4EAC	# <CJK>
 0x4EAD	# <CJK>
-0x4EAE	# <CJK>
-0x4EB0	# <CJK>
-0x4EB3	# <CJK>
-0x4EB6	# <CJK>
 0x4EBA	# <CJK>
-0x4EC0	# <CJK>
 0x4EC1	# <CJK>
-0x4EC2	# <CJK>
-0x4EC4	# <CJK>
-0x4EC6	# <CJK>
-0x4EC7	# <CJK>
 0x4ECA	# <CJK>
 0x4ECB	# <CJK>
-0x4ECD	# <CJK>
-0x4ECE	# <CJK>
 0x4ECF	# <CJK>
-0x4ED4	# <CJK>
 0x4ED5	# <CJK>
 0x4ED6	# <CJK>
-0x4ED7	# <CJK>
 0x4ED8	# <CJK>
 0x4ED9	# <CJK>
-0x4EDD	# <CJK>
-0x4EDE	# <CJK>
-0x4EDF	# <CJK>
 0x4EE3	# <CJK>
 0x4EE4	# <CJK>
 0x4EE5	# <CJK>
-0x4EED	# <CJK>
 0x4EEE	# <CJK>
 0x4EF0	# <CJK>
 0x4EF2	# <CJK>
 0x4EF6	# <CJK>
-0x4EF7	# <CJK>
 0x4EFB	# <CJK>
 0x4F01	# <CJK>
-0x4F09	# <CJK>
-0x4F0A	# <CJK>
-0x4F0D	# <CJK>
 0x4F0E	# <CJK>
 0x4F0F	# <CJK>
 0x4F10	# <CJK>
 0x4F11	# <CJK>
 0x4F1A	# <CJK>
-0x4F1C	# <CJK>
 0x4F1D	# <CJK>
 0x4F2F	# <CJK>
-0x4F30	# <CJK>
 0x4F34	# <CJK>
-0x4F36	# <CJK>
 0x4F38	# <CJK>
 0x4F3A	# <CJK>
 0x4F3C	# <CJK>
-0x4F3D	# <CJK>
-0x4F43	# <CJK>
 0x4F46	# <CJK>
-0x4F47	# <CJK>
 0x4F4D	# <CJK>
 0x4F4E	# <CJK>
 0x4F4F	# <CJK>
 0x4F50	# <CJK>
-0x4F51	# <CJK>
 0x4F53	# <CJK>
 0x4F55	# <CJK>
-0x4F57	# <CJK>
 0x4F59	# <CJK>
-0x4F5A	# <CJK>
-0x4F5B	# <CJK>
 0x4F5C	# <CJK>
-0x4F5D	# <CJK>
-0x4F5E	# <CJK>
-0x4F69	# <CJK>
-0x4F6F	# <CJK>
-0x4F70	# <CJK>
 0x4F73	# <CJK>
 0x4F75	# <CJK>
-0x4F76	# <CJK>
-0x4F7B	# <CJK>
-0x4F7C	# <CJK>
 0x4F7F	# <CJK>
-0x4F83	# <CJK>
-0x4F86	# <CJK>
-0x4F88	# <CJK>
 0x4F8B	# <CJK>
 0x4F8D	# <CJK>
-0x4F8F	# <CJK>
-0x4F91	# <CJK>
-0x4F96	# <CJK>
-0x4F98	# <CJK>
 0x4F9B	# <CJK>
 0x4F9D	# <CJK>
-0x4FA0	# <CJK>
 0x4FA1	# <CJK>
-0x4FAB	# <CJK>
-0x4FAD	# <CJK>
 0x4FAE	# <CJK>
 0x4FAF	# <CJK>
 0x4FB5	# <CJK>
@@ -388,364 +306,165 @@
 0x4FBF	# <CJK>
 0x4FC2	# <CJK>
 0x4FC3	# <CJK>
-0x4FC4	# <CJK>
 0x4FCA	# <CJK>
-0x4FCE	# <CJK>
-0x4FD0	# <CJK>
-0x4FD1	# <CJK>
-0x4FD4	# <CJK>
 0x4FD7	# <CJK>
-0x4FD8	# <CJK>
-0x4FDA	# <CJK>
-0x4FDB	# <CJK>
 0x4FDD	# <CJK>
-0x4FDF	# <CJK>
 0x4FE1	# <CJK>
-0x4FE3	# <CJK>
-0x4FE4	# <CJK>
-0x4FE5	# <CJK>
 0x4FEE	# <CJK>
-0x4FEF	# <CJK>
 0x4FF3	# <CJK>
 0x4FF5	# <CJK>
-0x4FF6	# <CJK>
 0x4FF8	# <CJK>
 0x4FFA	# <CJK>
-0x4FFE	# <CJK>
-0x5005	# <CJK>
-0x5006	# <CJK>
 0x5009	# <CJK>
 0x500B	# <CJK>
 0x500D	# <CJK>
-0x500F	# <CJK>
-0x5011	# <CJK>
 0x5012	# <CJK>
-0x5014	# <CJK>
-0x5016	# <CJK>
 0x5019	# <CJK>
-0x501A	# <CJK>
 0x501F	# <CJK>
-0x5021	# <CJK>
 0x5023	# <CJK>
 0x5024	# <CJK>
-0x5025	# <CJK>
-0x5026	# <CJK>
-0x5028	# <CJK>
-0x5029	# <CJK>
-0x502A	# <CJK>
 0x502B	# <CJK>
-0x502C	# <CJK>
-0x502D	# <CJK>
-0x5036	# <CJK>
 0x5039	# <CJK>
-0x5043	# <CJK>
-0x5047	# <CJK>
-0x5048	# <CJK>
 0x5049	# <CJK>
 0x504F	# <CJK>
-0x5050	# <CJK>
-0x5055	# <CJK>
-0x5056	# <CJK>
-0x505A	# <CJK>
 0x505C	# <CJK>
 0x5065	# <CJK>
-0x506C	# <CJK>
-0x5072	# <CJK>
 0x5074	# <CJK>
 0x5075	# <CJK>
 0x5076	# <CJK>
-0x5078	# <CJK>
 0x507D	# <CJK>
-0x5080	# <CJK>
-0x5085	# <CJK>
 0x508D	# <CJK>
 0x5091	# <CJK>
 0x5098	# <CJK>
 0x5099	# <CJK>
-0x509A	# <CJK>
 0x50AC	# <CJK>
-0x50AD	# <CJK>
 0x50B2	# <CJK>
-0x50B3	# <CJK>
-0x50B4	# <CJK>
 0x50B5	# <CJK>
 0x50B7	# <CJK>
 0x50BE	# <CJK>
-0x50C2	# <CJK>
 0x50C5	# <CJK>
-0x50C9	# <CJK>
-0x50CA	# <CJK>
 0x50CD	# <CJK>
 0x50CF	# <CJK>
-0x50D1	# <CJK>
 0x50D5	# <CJK>
-0x50D6	# <CJK>
 0x50DA	# <CJK>
-0x50DE	# <CJK>
-0x50E3	# <CJK>
-0x50E5	# <CJK>
 0x50E7	# <CJK>
-0x50ED	# <CJK>
-0x50EE	# <CJK>
-0x50F5	# <CJK>
-0x50F9	# <CJK>
-0x50FB	# <CJK>
 0x5100	# <CJK>
-0x5101	# <CJK>
-0x5102	# <CJK>
 0x5104	# <CJK>
-0x5109	# <CJK>
 0x5112	# <CJK>
-0x5114	# <CJK>
-0x5115	# <CJK>
-0x5116	# <CJK>
-0x5118	# <CJK>
-0x511A	# <CJK>
 0x511F	# <CJK>
-0x5121	# <CJK>
 0x512A	# <CJK>
-0x5132	# <CJK>
-0x5137	# <CJK>
-0x513A	# <CJK>
-0x513B	# <CJK>
-0x513C	# <CJK>
-0x513F	# <CJK>
-0x5140	# <CJK>
-0x5141	# <CJK>
 0x5143	# <CJK>
 0x5144	# <CJK>
 0x5145	# <CJK>
 0x5146	# <CJK>
-0x5147	# <CJK>
 0x5148	# <CJK>
 0x5149	# <CJK>
 0x514B	# <CJK>
-0x514C	# <CJK>
 0x514D	# <CJK>
-0x514E	# <CJK>
 0x5150	# <CJK>
-0x5152	# <CJK>
-0x5154	# <CJK>
 0x515A	# <CJK>
-0x515C	# <CJK>
-0x5162	# <CJK>
 0x5165	# <CJK>
 0x5168	# <CJK>
-0x5169	# <CJK>
-0x516A	# <CJK>
 0x516B	# <CJK>
 0x516C	# <CJK>
 0x516D	# <CJK>
-0x516E	# <CJK>
 0x5171	# <CJK>
 0x5175	# <CJK>
-0x5176	# <CJK>
 0x5177	# <CJK>
 0x5178	# <CJK>
 0x517C	# <CJK>
-0x5180	# <CJK>
-0x5182	# <CJK>
 0x5185	# <CJK>
 0x5186	# <CJK>
-0x5189	# <CJK>
 0x518A	# <CJK>
-0x518C	# <CJK>
 0x518D	# <CJK>
-0x518F	# <CJK>
-0x5190	# <CJK>
-0x5191	# <CJK>
 0x5192	# <CJK>
-0x5193	# <CJK>
-0x5195	# <CJK>
-0x5196	# <CJK>
 0x5197	# <CJK>
 0x5199	# <CJK>
 0x51A0	# <CJK>
-0x51A2	# <CJK>
-0x51A4	# <CJK>
 0x51A5	# <CJK>
-0x51A6	# <CJK>
-0x51A8	# <CJK>
-0x51A9	# <CJK>
-0x51AA	# <CJK>
-0x51AB	# <CJK>
 0x51AC	# <CJK>
-0x51B0	# <CJK>
-0x51B1	# <CJK>
-0x51B2	# <CJK>
-0x51B3	# <CJK>
-0x51B4	# <CJK>
-0x51B5	# <CJK>
 0x51B6	# <CJK>
 0x51B7	# <CJK>
-0x51BD	# <CJK>
 0x51C4	# <CJK>
-0x51C5	# <CJK>
 0x51C6	# <CJK>
-0x51C9	# <CJK>
-0x51CB	# <CJK>
-0x51CC	# <CJK>
 0x51CD	# <CJK>
-0x51D6	# <CJK>
-0x51DB	# <CJK>
-#0x51DC	# <CJK>	# not in kochi fonts
 0x51DD	# <CJK>
-0x51E0	# <CJK>
 0x51E1	# <CJK>
 0x51E6	# <CJK>
-0x51E7	# <CJK>
-0x51E9	# <CJK>
-0x51EA	# <CJK>
-0x51ED	# <CJK>
-0x51F0	# <CJK>
-0x51F1	# <CJK>
-0x51F5	# <CJK>
 0x51F6	# <CJK>
 0x51F8	# <CJK>
 0x51F9	# <CJK>
 0x51FA	# <CJK>
-0x51FD	# <CJK>
-0x51FE	# <CJK>
 0x5200	# <CJK>
 0x5203	# <CJK>
-0x5204	# <CJK>
 0x5206	# <CJK>
 0x5207	# <CJK>
 0x5208	# <CJK>
 0x520A	# <CJK>
-0x520B	# <CJK>
-0x520E	# <CJK>
 0x5211	# <CJK>
-0x5214	# <CJK>
 0x5217	# <CJK>
 0x521D	# <CJK>
 0x5224	# <CJK>
 0x5225	# <CJK>
-0x5227	# <CJK>
 0x5229	# <CJK>
-0x522A	# <CJK>
-0x522E	# <CJK>
 0x5230	# <CJK>
-0x5233	# <CJK>
 0x5236	# <CJK>
 0x5237	# <CJK>
 0x5238	# <CJK>
 0x5239	# <CJK>
 0x523A	# <CJK>
 0x523B	# <CJK>
-0x5243	# <CJK>
-0x5244	# <CJK>
 0x5247	# <CJK>
 0x524A	# <CJK>
-0x524B	# <CJK>
-0x524C	# <CJK>
 0x524D	# <CJK>
-0x524F	# <CJK>
-0x5254	# <CJK>
 0x5256	# <CJK>
 0x525B	# <CJK>
-0x525E	# <CJK>
+#0x525D	# <CJK> # not in sazanami gothic/mincho, DroidSansJapanese
 0x5263	# <CJK>
 0x5264	# <CJK>
-0x5265	# <CJK>
-0x5269	# <CJK>
-0x526A	# <CJK>
 0x526F	# <CJK>
 0x5270	# <CJK>
-0x5271	# <CJK>
 0x5272	# <CJK>
-0x5273	# <CJK>
-0x5274	# <CJK>
 0x5275	# <CJK>
-0x527D	# <CJK>
-0x527F	# <CJK>
-0x5283	# <CJK>
 0x5287	# <CJK>
-0x5288	# <CJK>
-0x5289	# <CJK>
-0x528D	# <CJK>
-0x5291	# <CJK>
-0x5292	# <CJK>
-0x5294	# <CJK>
 0x529B	# <CJK>
 0x529F	# <CJK>
 0x52A0	# <CJK>
 0x52A3	# <CJK>
 0x52A9	# <CJK>
 0x52AA	# <CJK>
-0x52AB	# <CJK>
-0x52AC	# <CJK>
-0x52AD	# <CJK>
 0x52B1	# <CJK>
 0x52B4	# <CJK>
-0x52B5	# <CJK>
 0x52B9	# <CJK>
-0x52BC	# <CJK>
 0x52BE	# <CJK>
-0x52C1	# <CJK>
 0x52C3	# <CJK>
 0x52C5	# <CJK>
 0x52C7	# <CJK>
 0x52C9	# <CJK>
-0x52CD	# <CJK>
-0x52D2	# <CJK>
 0x52D5	# <CJK>
-0x52D7	# <CJK>
 0x52D8	# <CJK>
 0x52D9	# <CJK>
 0x52DD	# <CJK>
-0x52DE	# <CJK>
 0x52DF	# <CJK>
-0x52E0	# <CJK>
 0x52E2	# <CJK>
-0x52E3	# <CJK>
 0x52E4	# <CJK>
-0x52E6	# <CJK>
 0x52E7	# <CJK>
 0x52F2	# <CJK>
-0x52F3	# <CJK>
-0x52F5	# <CJK>
-0x52F8	# <CJK>
-0x52F9	# <CJK>
-0x52FA	# <CJK>
 0x52FE	# <CJK>
-0x52FF	# <CJK>
-0x5301	# <CJK>
 0x5302	# <CJK>
 0x5305	# <CJK>
-0x5306	# <CJK>
-0x5308	# <CJK>
-0x530D	# <CJK>
-0x530F	# <CJK>
-0x5310	# <CJK>
-0x5315	# <CJK>
 0x5316	# <CJK>
 0x5317	# <CJK>
-0x5319	# <CJK>
-0x531A	# <CJK>
-0x531D	# <CJK>
 0x5320	# <CJK>
-0x5321	# <CJK>
-0x5323	# <CJK>
-0x532A	# <CJK>
-0x532F	# <CJK>
-0x5331	# <CJK>
-0x5333	# <CJK>
-0x5338	# <CJK>
 0x5339	# <CJK>
 0x533A	# <CJK>
 0x533B	# <CJK>
 0x533F	# <CJK>
-0x5340	# <CJK>
 0x5341	# <CJK>
 0x5343	# <CJK>
-0x5345	# <CJK>
-0x5346	# <CJK>
 0x5347	# <CJK>
 0x5348	# <CJK>
-0x5349	# <CJK>
 0x534A	# <CJK>
-0x534D	# <CJK>
 0x5351	# <CJK>
 0x5352	# <CJK>
 0x5353	# <CJK>
@@ -753,43 +472,21 @@
 0x5357	# <CJK>
 0x5358	# <CJK>
 0x535A	# <CJK>
-0x535C	# <CJK>
-0x535E	# <CJK>
 0x5360	# <CJK>
-0x5366	# <CJK>
-0x5369	# <CJK>
-0x536E	# <CJK>
-0x536F	# <CJK>
 0x5370	# <CJK>
 0x5371	# <CJK>
 0x5373	# <CJK>
 0x5374	# <CJK>
 0x5375	# <CJK>
-0x5377	# <CJK>
 0x5378	# <CJK>
-0x537B	# <CJK>
-0x537F	# <CJK>
-0x5382	# <CJK>
 0x5384	# <CJK>
-0x5396	# <CJK>
 0x5398	# <CJK>
 0x539A	# <CJK>
 0x539F	# <CJK>
-0x53A0	# <CJK>
-0x53A5	# <CJK>
-0x53A6	# <CJK>
-0x53A8	# <CJK>
-0x53A9	# <CJK>
-0x53AD	# <CJK>
-0x53AE	# <CJK>
-0x53B0	# <CJK>
 0x53B3	# <CJK>
-0x53B6	# <CJK>
 0x53BB	# <CJK>
 0x53C2	# <CJK>
-0x53C3	# <CJK>
 0x53C8	# <CJK>
-0x53C9	# <CJK>
 0x53CA	# <CJK>
 0x53CB	# <CJK>
 0x53CC	# <CJK>
@@ -799,36 +496,20 @@
 0x53D6	# <CJK>
 0x53D7	# <CJK>
 0x53D9	# <CJK>
-0x53DB	# <CJK>
-0x53DF	# <CJK>
-0x53E1	# <CJK>
-0x53E2	# <CJK>
 0x53E3	# <CJK>
 0x53E4	# <CJK>
 0x53E5	# <CJK>
-0x53E8	# <CJK>
-0x53E9	# <CJK>
-0x53EA	# <CJK>
 0x53EB	# <CJK>
 0x53EC	# <CJK>
-0x53ED	# <CJK>
-0x53EE	# <CJK>
 0x53EF	# <CJK>
 0x53F0	# <CJK>
-0x53F1	# <CJK>
 0x53F2	# <CJK>
 0x53F3	# <CJK>
-0x53F6	# <CJK>
 0x53F7	# <CJK>
 0x53F8	# <CJK>
-0x53FA	# <CJK>
-0x5401	# <CJK>
-0x5403	# <CJK>
 0x5404	# <CJK>
 0x5408	# <CJK>
 0x5409	# <CJK>
-0x540A	# <CJK>
-0x540B	# <CJK>
 0x540C	# <CJK>
 0x540D	# <CJK>
 0x540E	# <CJK>
@@ -836,273 +517,82 @@
 0x5410	# <CJK>
 0x5411	# <CJK>
 0x541B	# <CJK>
-0x541D	# <CJK>
 0x541F	# <CJK>
-0x5420	# <CJK>
 0x5426	# <CJK>
-0x5429	# <CJK>
 0x542B	# <CJK>
-0x542C	# <CJK>
-0x542D	# <CJK>
-0x542E	# <CJK>
-0x5436	# <CJK>
 0x5438	# <CJK>
 0x5439	# <CJK>
-0x543B	# <CJK>
-0x543C	# <CJK>
-0x543D	# <CJK>
-0x543E	# <CJK>
-0x5440	# <CJK>
 0x5442	# <CJK>
-0x5446	# <CJK>
 0x5448	# <CJK>
 0x5449	# <CJK>
 0x544A	# <CJK>
-0x544E	# <CJK>
-0x5451	# <CJK>
-0x545F	# <CJK>
 0x5468	# <CJK>
 0x546A	# <CJK>
-0x5470	# <CJK>
-0x5471	# <CJK>
 0x5473	# <CJK>
-0x5475	# <CJK>
-0x5476	# <CJK>
-0x5477	# <CJK>
-0x547B	# <CJK>
 0x547C	# <CJK>
 0x547D	# <CJK>
-0x5480	# <CJK>
-0x5484	# <CJK>
-0x5486	# <CJK>
-0x548B	# <CJK>
 0x548C	# <CJK>
-0x548E	# <CJK>
-0x548F	# <CJK>
-0x5490	# <CJK>
-0x5492	# <CJK>
-0x54A2	# <CJK>
-0x54A4	# <CJK>
-0x54A5	# <CJK>
-0x54A8	# <CJK>
-0x54AB	# <CJK>
-0x54AC	# <CJK>
-0x54AF	# <CJK>
 0x54B2	# <CJK>
-0x54B3	# <CJK>
-0x54B8	# <CJK>
-0x54BC	# <CJK>
 0x54BD	# <CJK>
-0x54BE	# <CJK>
 0x54C0	# <CJK>
 0x54C1	# <CJK>
-0x54C2	# <CJK>
-0x54C4	# <CJK>
-0x54C7	# <CJK>
-0x54C8	# <CJK>
-0x54C9	# <CJK>
-0x54D8	# <CJK>
 0x54E1	# <CJK>
-0x54E2	# <CJK>
-0x54E5	# <CJK>
-0x54E6	# <CJK>
-0x54E8	# <CJK>
-0x54E9	# <CJK>
-0x54ED	# <CJK>
-0x54EE	# <CJK>
 0x54F2	# <CJK>
 0x54FA	# <CJK>
-0x54FD	# <CJK>
 0x5504	# <CJK>
 0x5506	# <CJK>
 0x5507	# <CJK>
-0x550F	# <CJK>
 0x5510	# <CJK>
-0x5514	# <CJK>
-0x5516	# <CJK>
-0x552E	# <CJK>
 0x552F	# <CJK>
 0x5531	# <CJK>
-0x5533	# <CJK>
-0x5538	# <CJK>
-0x5539	# <CJK>
 0x553E	# <CJK>
-0x5540	# <CJK>
-0x5544	# <CJK>
-0x5545	# <CJK>
 0x5546	# <CJK>
-0x554C	# <CJK>
 0x554F	# <CJK>
 0x5553	# <CJK>
-0x5556	# <CJK>
-0x5557	# <CJK>
-0x555C	# <CJK>
-0x555D	# <CJK>
-0x5563	# <CJK>
-0x557B	# <CJK>
-0x557C	# <CJK>
-0x557E	# <CJK>
-0x5580	# <CJK>
-0x5583	# <CJK>
 0x5584	# <CJK>
-0x5587	# <CJK>
 0x5589	# <CJK>
-0x558A	# <CJK>
-0x558B	# <CJK>
-0x5598	# <CJK>
-0x5599	# <CJK>
 0x559A	# <CJK>
 0x559C	# <CJK>
 0x559D	# <CJK>
-0x559E	# <CJK>
-0x559F	# <CJK>
-0x55A7	# <CJK>
-0x55A8	# <CJK>
 0x55A9	# <CJK>
 0x55AA	# <CJK>
 0x55AB	# <CJK>
-0x55AC	# <CJK>
-0x55AE	# <CJK>
-0x55B0	# <CJK>
 0x55B6	# <CJK>
-0x55C4	# <CJK>
 0x55C5	# <CJK>
-0x55C7	# <CJK>
-0x55D4	# <CJK>
-0x55DA	# <CJK>
-0x55DC	# <CJK>
-0x55DF	# <CJK>
 0x55E3	# <CJK>
-0x55E4	# <CJK>
-0x55F7	# <CJK>
-0x55F9	# <CJK>
-0x55FD	# <CJK>
-0x55FE	# <CJK>
 0x5606	# <CJK>
-0x5609	# <CJK>
-0x5614	# <CJK>
-0x5616	# <CJK>
-0x5617	# <CJK>
-0x5618	# <CJK>
-0x561B	# <CJK>
-0x5629	# <CJK>
-0x562F	# <CJK>
 0x5631	# <CJK>
 0x5632	# <CJK>
-0x5634	# <CJK>
-0x5636	# <CJK>
-0x5638	# <CJK>
-0x5642	# <CJK>
-0x564C	# <CJK>
-0x564E	# <CJK>
-0x5650	# <CJK>
-0x565B	# <CJK>
-0x5664	# <CJK>
 0x5668	# <CJK>
-0x566A	# <CJK>
-0x566B	# <CJK>
-0x566C	# <CJK>
 0x5674	# <CJK>
-0x5678	# <CJK>
-0x567A	# <CJK>
-0x5680	# <CJK>
-0x5686	# <CJK>
 0x5687	# <CJK>
-0x568A	# <CJK>
-0x568F	# <CJK>
-0x5694	# <CJK>
-0x56A0	# <CJK>
-0x56A2	# <CJK>
-0x56A5	# <CJK>
-0x56AE	# <CJK>
-0x56B4	# <CJK>
-0x56B6	# <CJK>
-0x56BC	# <CJK>
-0x56C0	# <CJK>
-0x56C1	# <CJK>
-0x56C2	# <CJK>
-0x56C3	# <CJK>
-0x56C8	# <CJK>
-0x56CE	# <CJK>
-0x56D1	# <CJK>
-0x56D3	# <CJK>
-0x56D7	# <CJK>
-0x56D8	# <CJK>
 0x56DA	# <CJK>
 0x56DB	# <CJK>
 0x56DE	# <CJK>
 0x56E0	# <CJK>
 0x56E3	# <CJK>
-0x56EE	# <CJK>
 0x56F0	# <CJK>
 0x56F2	# <CJK>
 0x56F3	# <CJK>
-0x56F9	# <CJK>
 0x56FA	# <CJK>
 0x56FD	# <CJK>
-0x56FF	# <CJK>
-0x5700	# <CJK>
-0x5703	# <CJK>
-0x5704	# <CJK>
-0x5708	# <CJK>
-0x5709	# <CJK>
-0x570B	# <CJK>
-0x570D	# <CJK>
 0x570F	# <CJK>
 0x5712	# <CJK>
-0x5713	# <CJK>
-0x5716	# <CJK>
-0x5718	# <CJK>
-0x571C	# <CJK>
 0x571F	# <CJK>
-0x5726	# <CJK>
 0x5727	# <CJK>
 0x5728	# <CJK>
-0x572D	# <CJK>
 0x5730	# <CJK>
-0x5737	# <CJK>
-0x5738	# <CJK>
-0x573B	# <CJK>
-0x5740	# <CJK>
 0x5742	# <CJK>
 0x5747	# <CJK>
 0x574A	# <CJK>
-0x574E	# <CJK>
-0x574F	# <CJK>
-0x5750	# <CJK>
 0x5751	# <CJK>
-0x5761	# <CJK>
-0x5764	# <CJK>
-0x5766	# <CJK>
-0x5769	# <CJK>
 0x576A	# <CJK>
-0x577F	# <CJK>
 0x5782	# <CJK>
-0x5788	# <CJK>
-0x5789	# <CJK>
 0x578B	# <CJK>
-0x5793	# <CJK>
-0x57A0	# <CJK>
-0x57A2	# <CJK>
 0x57A3	# <CJK>
-0x57A4	# <CJK>
-0x57AA	# <CJK>
-0x57B0	# <CJK>
-0x57B3	# <CJK>
-0x57C0	# <CJK>
-0x57C3	# <CJK>
-0x57C6	# <CJK>
 0x57CB	# <CJK>
 0x57CE	# <CJK>
-0x57D2	# <CJK>
-0x57D3	# <CJK>
-0x57D4	# <CJK>
-0x57D6	# <CJK>
-0x57DC	# <CJK>
 0x57DF	# <CJK>
-0x57E0	# <CJK>
-0x57E3	# <CJK>
-0x57F4	# <CJK>
 0x57F7	# <CJK>
 0x57F9	# <CJK>
 0x57FA	# <CJK>
@@ -1111,267 +601,111 @@
 0x5802	# <CJK>
 0x5805	# <CJK>
 0x5806	# <CJK>
-0x580A	# <CJK>
-0x580B	# <CJK>
 0x5815	# <CJK>
-0x5819	# <CJK>
-0x581D	# <CJK>
-0x5821	# <CJK>
 0x5824	# <CJK>
 0x582A	# <CJK>
-0x582F	# <CJK>
-0x5830	# <CJK>
 0x5831	# <CJK>
 0x5834	# <CJK>
-0x5835	# <CJK>
-0x583A	# <CJK>
-0x583D	# <CJK>
 0x5840	# <CJK>
 0x5841	# <CJK>
 0x584A	# <CJK>
-0x584B	# <CJK>
 0x5851	# <CJK>
-0x5852	# <CJK>
 0x5854	# <CJK>
 0x5857	# <CJK>
-0x5858	# <CJK>
-0x5859	# <CJK>
 0x585A	# <CJK>
 0x585E	# <CJK>
-0x5862	# <CJK>
+#0x5861	# <CJK> # not in DroidSansJapanese
 0x5869	# <CJK>
-0x586B	# <CJK>
-0x5870	# <CJK>
-0x5872	# <CJK>
-0x5875	# <CJK>
-0x5879	# <CJK>
 0x587E	# <CJK>
 0x5883	# <CJK>
-0x5885	# <CJK>
 0x5893	# <CJK>
 0x5897	# <CJK>
 0x589C	# <CJK>
-0x589F	# <CJK>
 0x58A8	# <CJK>
-0x58AB	# <CJK>
-0x58AE	# <CJK>
 0x58B3	# <CJK>
-0x58B8	# <CJK>
-0x58B9	# <CJK>
-0x58BA	# <CJK>
-0x58BB	# <CJK>
 0x58BE	# <CJK>
 0x58C1	# <CJK>
-0x58C5	# <CJK>
 0x58C7	# <CJK>
 0x58CA	# <CJK>
 0x58CC	# <CJK>
-0x58D1	# <CJK>
-0x58D3	# <CJK>
-0x58D5	# <CJK>
-0x58D7	# <CJK>
-0x58D8	# <CJK>
-0x58D9	# <CJK>
-0x58DC	# <CJK>
-0x58DE	# <CJK>
-0x58DF	# <CJK>
-0x58E4	# <CJK>
-0x58E5	# <CJK>
 0x58EB	# <CJK>
-0x58EC	# <CJK>
 0x58EE	# <CJK>
-0x58EF	# <CJK>
 0x58F0	# <CJK>
 0x58F1	# <CJK>
 0x58F2	# <CJK>
-0x58F7	# <CJK>
-0x58F9	# <CJK>
-0x58FA	# <CJK>
-0x58FB	# <CJK>
-0x58FC	# <CJK>
-0x58FD	# <CJK>
-0x5902	# <CJK>
 0x5909	# <CJK>
-0x590A	# <CJK>
 0x590F	# <CJK>
-0x5910	# <CJK>
 0x5915	# <CJK>
 0x5916	# <CJK>
-0x5918	# <CJK>
-0x5919	# <CJK>
 0x591A	# <CJK>
-0x591B	# <CJK>
 0x591C	# <CJK>
 0x5922	# <CJK>
-0x5925	# <CJK>
 0x5927	# <CJK>
 0x5929	# <CJK>
 0x592A	# <CJK>
 0x592B	# <CJK>
-0x592C	# <CJK>
-0x592D	# <CJK>
 0x592E	# <CJK>
 0x5931	# <CJK>
-0x5932	# <CJK>
-0x5937	# <CJK>
-0x5938	# <CJK>
-0x593E	# <CJK>
-0x5944	# <CJK>
 0x5947	# <CJK>
 0x5948	# <CJK>
 0x5949	# <CJK>
-0x594E	# <CJK>
 0x594F	# <CJK>
-0x5950	# <CJK>
 0x5951	# <CJK>
 0x5954	# <CJK>
-0x5955	# <CJK>
-0x5957	# <CJK>
-0x5958	# <CJK>
-0x595A	# <CJK>
-0x5960	# <CJK>
-0x5962	# <CJK>
 0x5965	# <CJK>
-0x5967	# <CJK>
 0x5968	# <CJK>
-0x5969	# <CJK>
 0x596A	# <CJK>
-0x596C	# <CJK>
 0x596E	# <CJK>
 0x5973	# <CJK>
 0x5974	# <CJK>
-0x5978	# <CJK>
 0x597D	# <CJK>
-0x5981	# <CJK>
 0x5982	# <CJK>
 0x5983	# <CJK>
 0x5984	# <CJK>
 0x598A	# <CJK>
-0x598D	# <CJK>
-0x5993	# <CJK>
 0x5996	# <CJK>
 0x5999	# <CJK>
-0x599B	# <CJK>
-0x599D	# <CJK>
-0x59A3	# <CJK>
 0x59A5	# <CJK>
 0x59A8	# <CJK>
 0x59AC	# <CJK>
-0x59B2	# <CJK>
 0x59B9	# <CJK>
 0x59BB	# <CJK>
-0x59BE	# <CJK>
-0x59C6	# <CJK>
 0x59C9	# <CJK>
 0x59CB	# <CJK>
-0x59D0	# <CJK>
-0x59D1	# <CJK>
 0x59D3	# <CJK>
 0x59D4	# <CJK>
-0x59D9	# <CJK>
-0x59DA	# <CJK>
-0x59DC	# <CJK>
-0x59E5	# <CJK>
-0x59E6	# <CJK>
-0x59E8	# <CJK>
-0x59EA	# <CJK>
 0x59EB	# <CJK>
-0x59F6	# <CJK>
 0x59FB	# <CJK>
 0x59FF	# <CJK>
 0x5A01	# <CJK>
-0x5A03	# <CJK>
-0x5A09	# <CJK>
-0x5A11	# <CJK>
 0x5A18	# <CJK>
-0x5A1A	# <CJK>
-0x5A1C	# <CJK>
-0x5A1F	# <CJK>
 0x5A20	# <CJK>
-0x5A25	# <CJK>
-0x5A29	# <CJK>
 0x5A2F	# <CJK>
-0x5A35	# <CJK>
-0x5A36	# <CJK>
-0x5A3C	# <CJK>
-0x5A40	# <CJK>
-0x5A41	# <CJK>
 0x5A46	# <CJK>
-0x5A49	# <CJK>
 0x5A5A	# <CJK>
-0x5A62	# <CJK>
 0x5A66	# <CJK>
-0x5A6A	# <CJK>
-0x5A6C	# <CJK>
 0x5A7F	# <CJK>
 0x5A92	# <CJK>
-0x5A9A	# <CJK>
 0x5A9B	# <CJK>
-0x5ABC	# <CJK>
-0x5ABD	# <CJK>
-0x5ABE	# <CJK>
 0x5AC1	# <CJK>
-0x5AC2	# <CJK>
 0x5AC9	# <CJK>
-0x5ACB	# <CJK>
 0x5ACC	# <CJK>
-0x5AD0	# <CJK>
-0x5AD6	# <CJK>
-0x5AD7	# <CJK>
 0x5AE1	# <CJK>
-0x5AE3	# <CJK>
-0x5AE6	# <CJK>
-0x5AE9	# <CJK>
-0x5AFA	# <CJK>
-0x5AFB	# <CJK>
-0x5B09	# <CJK>
-0x5B0B	# <CJK>
-0x5B0C	# <CJK>
-0x5B16	# <CJK>
 0x5B22	# <CJK>
-0x5B2A	# <CJK>
-0x5B2C	# <CJK>
-0x5B30	# <CJK>
-0x5B32	# <CJK>
-0x5B36	# <CJK>
-0x5B3E	# <CJK>
-0x5B40	# <CJK>
-0x5B43	# <CJK>
-0x5B45	# <CJK>
 0x5B50	# <CJK>
-0x5B51	# <CJK>
 0x5B54	# <CJK>
-0x5B55	# <CJK>
 0x5B57	# <CJK>
 0x5B58	# <CJK>
-0x5B5A	# <CJK>
-0x5B5B	# <CJK>
-0x5B5C	# <CJK>
 0x5B5D	# <CJK>
-0x5B5F	# <CJK>
 0x5B63	# <CJK>
 0x5B64	# <CJK>
-0x5B65	# <CJK>
 0x5B66	# <CJK>
-0x5B69	# <CJK>
 0x5B6B	# <CJK>
-0x5B70	# <CJK>
-0x5B71	# <CJK>
-0x5B73	# <CJK>
-0x5B75	# <CJK>
-0x5B78	# <CJK>
-0x5B7A	# <CJK>
-0x5B80	# <CJK>
-0x5B83	# <CJK>
 0x5B85	# <CJK>
 0x5B87	# <CJK>
 0x5B88	# <CJK>
 0x5B89	# <CJK>
-0x5B8B	# <CJK>
 0x5B8C	# <CJK>
-0x5B8D	# <CJK>
-0x5B8F	# <CJK>
-0x5B95	# <CJK>
 0x5B97	# <CJK>
 0x5B98	# <CJK>
 0x5B99	# <CJK>
@@ -1383,47 +717,26 @@
 0x5BA2	# <CJK>
 0x5BA3	# <CJK>
 0x5BA4	# <CJK>
-0x5BA5	# <CJK>
-0x5BA6	# <CJK>
 0x5BAE	# <CJK>
 0x5BB0	# <CJK>
 0x5BB3	# <CJK>
 0x5BB4	# <CJK>
 0x5BB5	# <CJK>
 0x5BB6	# <CJK>
-0x5BB8	# <CJK>
 0x5BB9	# <CJK>
 0x5BBF	# <CJK>
 0x5BC2	# <CJK>
-0x5BC3	# <CJK>
 0x5BC4	# <CJK>
-0x5BC5	# <CJK>
 0x5BC6	# <CJK>
-0x5BC7	# <CJK>
-0x5BC9	# <CJK>
 0x5BCC	# <CJK>
-0x5BD0	# <CJK>
 0x5BD2	# <CJK>
-0x5BD3	# <CJK>
-0x5BD4	# <CJK>
 0x5BDB	# <CJK>
 0x5BDD	# <CJK>
-0x5BDE	# <CJK>
 0x5BDF	# <CJK>
 0x5BE1	# <CJK>
-0x5BE2	# <CJK>
-0x5BE4	# <CJK>
-0x5BE5	# <CJK>
-0x5BE6	# <CJK>
 0x5BE7	# <CJK>
-0x5BE8	# <CJK>
 0x5BE9	# <CJK>
-0x5BEB	# <CJK>
 0x5BEE	# <CJK>
-0x5BF0	# <CJK>
-0x5BF3	# <CJK>
-0x5BF5	# <CJK>
-0x5BF6	# <CJK>
 0x5BF8	# <CJK>
 0x5BFA	# <CJK>
 0x5BFE	# <CJK>
@@ -1431,28 +744,15 @@
 0x5C01	# <CJK>
 0x5C02	# <CJK>
 0x5C04	# <CJK>
-0x5C05	# <CJK>
 0x5C06	# <CJK>
-0x5C07	# <CJK>
-0x5C08	# <CJK>
 0x5C09	# <CJK>
 0x5C0A	# <CJK>
 0x5C0B	# <CJK>
-0x5C0D	# <CJK>
 0x5C0E	# <CJK>
 0x5C0F	# <CJK>
 0x5C11	# <CJK>
-0x5C13	# <CJK>
-0x5C16	# <CJK>
 0x5C1A	# <CJK>
-0x5C20	# <CJK>
-0x5C22	# <CJK>
-0x5C24	# <CJK>
-0x5C28	# <CJK>
-0x5C2D	# <CJK>
 0x5C31	# <CJK>
-0x5C38	# <CJK>
-0x5C39	# <CJK>
 0x5C3A	# <CJK>
 0x5C3B	# <CJK>
 0x5C3C	# <CJK>
@@ -1460,109 +760,31 @@
 0x5C3E	# <CJK>
 0x5C3F	# <CJK>
 0x5C40	# <CJK>
-0x5C41	# <CJK>
 0x5C45	# <CJK>
-0x5C46	# <CJK>
 0x5C48	# <CJK>
 0x5C4A	# <CJK>
 0x5C4B	# <CJK>
-0x5C4D	# <CJK>
-0x5C4E	# <CJK>
-0x5C4F	# <CJK>
-0x5C50	# <CJK>
-0x5C51	# <CJK>
-0x5C53	# <CJK>
 0x5C55	# <CJK>
 0x5C5E	# <CJK>
-0x5C60	# <CJK>
-0x5C61	# <CJK>
 0x5C64	# <CJK>
 0x5C65	# <CJK>
-0x5C6C	# <CJK>
-0x5C6E	# <CJK>
 0x5C6F	# <CJK>
 0x5C71	# <CJK>
-0x5C76	# <CJK>
-0x5C79	# <CJK>
-0x5C8C	# <CJK>
 0x5C90	# <CJK>
-0x5C91	# <CJK>
-0x5C94	# <CJK>
 0x5CA1	# <CJK>
-0x5CA8	# <CJK>
 0x5CA9	# <CJK>
-0x5CAB	# <CJK>
 0x5CAC	# <CJK>
-0x5CB1	# <CJK>
 0x5CB3	# <CJK>
-0x5CB6	# <CJK>
-0x5CB7	# <CJK>
 0x5CB8	# <CJK>
-0x5CBB	# <CJK>
-0x5CBC	# <CJK>
-0x5CBE	# <CJK>
-0x5CC5	# <CJK>
-0x5CC7	# <CJK>
-0x5CD9	# <CJK>
 0x5CE0	# <CJK>
 0x5CE1	# <CJK>
-0x5CE8	# <CJK>
-0x5CE9	# <CJK>
-0x5CEA	# <CJK>
-0x5CED	# <CJK>
-0x5CEF	# <CJK>
 0x5CF0	# <CJK>
 0x5CF6	# <CJK>
-0x5CFA	# <CJK>
-0x5CFB	# <CJK>
-0x5CFD	# <CJK>
 0x5D07	# <CJK>
-0x5D0B	# <CJK>
 0x5D0E	# <CJK>
-0x5D11	# <CJK>
-0x5D14	# <CJK>
-0x5D15	# <CJK>
 0x5D16	# <CJK>
-0x5D17	# <CJK>
-0x5D18	# <CJK>
-0x5D19	# <CJK>
-0x5D1A	# <CJK>
-0x5D1B	# <CJK>
-0x5D1F	# <CJK>
-0x5D22	# <CJK>
 0x5D29	# <CJK>
-0x5D4B	# <CJK>
-0x5D4C	# <CJK>
-0x5D4E	# <CJK>
 0x5D50	# <CJK>
-0x5D52	# <CJK>
-0x5D5C	# <CJK>
-0x5D69	# <CJK>
-0x5D6C	# <CJK>
-0x5D6F	# <CJK>
-0x5D73	# <CJK>
-0x5D76	# <CJK>
-0x5D82	# <CJK>
-0x5D84	# <CJK>
-0x5D87	# <CJK>
-0x5D8B	# <CJK>
-0x5D8C	# <CJK>
-0x5D90	# <CJK>
-0x5D9D	# <CJK>
-0x5DA2	# <CJK>
-0x5DAC	# <CJK>
-0x5DAE	# <CJK>
-0x5DB7	# <CJK>
-0x5DBA	# <CJK>
-0x5DBC	# <CJK>
-0x5DBD	# <CJK>
-0x5DC9	# <CJK>
-0x5DCC	# <CJK>
-0x5DCD	# <CJK>
-0x5DD2	# <CJK>
-0x5DD3	# <CJK>
-0x5DD6	# <CJK>
-0x5DDB	# <CJK>
 0x5DDD	# <CJK>
 0x5DDE	# <CJK>
 0x5DE1	# <CJK>
@@ -1571,27 +793,14 @@
 0x5DE6	# <CJK>
 0x5DE7	# <CJK>
 0x5DE8	# <CJK>
-0x5DEB	# <CJK>
 0x5DEE	# <CJK>
 0x5DF1	# <CJK>
-0x5DF2	# <CJK>
-0x5DF3	# <CJK>
-0x5DF4	# <CJK>
-0x5DF5	# <CJK>
-0x5DF7	# <CJK>
 0x5DFB	# <CJK>
-0x5DFD	# <CJK>
 0x5DFE	# <CJK>
 0x5E02	# <CJK>
 0x5E03	# <CJK>
 0x5E06	# <CJK>
-0x5E0B	# <CJK>
 0x5E0C	# <CJK>
-0x5E11	# <CJK>
-0x5E16	# <CJK>
-0x5E19	# <CJK>
-0x5E1A	# <CJK>
-0x5E1B	# <CJK>
 0x5E1D	# <CJK>
 0x5E25	# <CJK>
 0x5E2B	# <CJK>
@@ -1599,738 +808,301 @@
 0x5E2F	# <CJK>
 0x5E30	# <CJK>
 0x5E33	# <CJK>
-0x5E36	# <CJK>
-0x5E37	# <CJK>
 0x5E38	# <CJK>
 0x5E3D	# <CJK>
-0x5E40	# <CJK>
-0x5E43	# <CJK>
-0x5E44	# <CJK>
 0x5E45	# <CJK>
-0x5E47	# <CJK>
-0x5E4C	# <CJK>
-0x5E4E	# <CJK>
-0x5E54	# <CJK>
 0x5E55	# <CJK>
-0x5E57	# <CJK>
-0x5E5F	# <CJK>
-0x5E61	# <CJK>
-0x5E62	# <CJK>
 0x5E63	# <CJK>
-0x5E64	# <CJK>
 0x5E72	# <CJK>
 0x5E73	# <CJK>
 0x5E74	# <CJK>
-0x5E75	# <CJK>
-0x5E76	# <CJK>
 0x5E78	# <CJK>
 0x5E79	# <CJK>
-0x5E7A	# <CJK>
 0x5E7B	# <CJK>
 0x5E7C	# <CJK>
 0x5E7D	# <CJK>
 0x5E7E	# <CJK>
-0x5E7F	# <CJK>
 0x5E81	# <CJK>
 0x5E83	# <CJK>
-0x5E84	# <CJK>
-0x5E87	# <CJK>
 0x5E8A	# <CJK>
 0x5E8F	# <CJK>
 0x5E95	# <CJK>
-0x5E96	# <CJK>
 0x5E97	# <CJK>
-0x5E9A	# <CJK>
 0x5E9C	# <CJK>
-0x5EA0	# <CJK>
 0x5EA6	# <CJK>
 0x5EA7	# <CJK>
 0x5EAB	# <CJK>
 0x5EAD	# <CJK>
-0x5EB5	# <CJK>
 0x5EB6	# <CJK>
 0x5EB7	# <CJK>
 0x5EB8	# <CJK>
-0x5EC1	# <CJK>
-0x5EC2	# <CJK>
 0x5EC3	# <CJK>
-0x5EC8	# <CJK>
 0x5EC9	# <CJK>
 0x5ECA	# <CJK>
-0x5ECF	# <CJK>
-0x5ED0	# <CJK>
-0x5ED3	# <CJK>
-0x5ED6	# <CJK>
-0x5EDA	# <CJK>
-0x5EDB	# <CJK>
-0x5EDD	# <CJK>
-0x5EDF	# <CJK>
-0x5EE0	# <CJK>
-0x5EE1	# <CJK>
-0x5EE2	# <CJK>
-0x5EE3	# <CJK>
-0x5EE8	# <CJK>
-0x5EE9	# <CJK>
-0x5EEC	# <CJK>
-0x5EF0	# <CJK>
-0x5EF1	# <CJK>
-0x5EF3	# <CJK>
-0x5EF4	# <CJK>
 0x5EF6	# <CJK>
 0x5EF7	# <CJK>
-0x5EF8	# <CJK>
 0x5EFA	# <CJK>
-0x5EFB	# <CJK>
-0x5EFC	# <CJK>
-0x5EFE	# <CJK>
-0x5EFF	# <CJK>
 0x5F01	# <CJK>
-0x5F03	# <CJK>
 0x5F04	# <CJK>
-0x5F09	# <CJK>
 0x5F0A	# <CJK>
-0x5F0B	# <CJK>
-0x5F0C	# <CJK>
-0x5F0D	# <CJK>
 0x5F0F	# <CJK>
 0x5F10	# <CJK>
-0x5F11	# <CJK>
 0x5F13	# <CJK>
 0x5F14	# <CJK>
 0x5F15	# <CJK>
-0x5F16	# <CJK>
-0x5F17	# <CJK>
-0x5F18	# <CJK>
-0x5F1B	# <CJK>
 0x5F1F	# <CJK>
 0x5F25	# <CJK>
 0x5F26	# <CJK>
 0x5F27	# <CJK>
-0x5F29	# <CJK>
-0x5F2D	# <CJK>
-0x5F2F	# <CJK>
 0x5F31	# <CJK>
 0x5F35	# <CJK>
 0x5F37	# <CJK>
-0x5F38	# <CJK>
-0x5F3C	# <CJK>
 0x5F3E	# <CJK>
-0x5F41	# <CJK>
-0x5F48	# <CJK>
-0x5F4A	# <CJK>
-0x5F4C	# <CJK>
-0x5F4E	# <CJK>
-0x5F51	# <CJK>
 0x5F53	# <CJK>
-0x5F56	# <CJK>
-0x5F57	# <CJK>
 0x5F59	# <CJK>
-0x5F5C	# <CJK>
-0x5F5D	# <CJK>
-0x5F61	# <CJK>
 0x5F62	# <CJK>
-0x5F66	# <CJK>
 0x5F69	# <CJK>
-0x5F6A	# <CJK>
 0x5F6B	# <CJK>
-0x5F6C	# <CJK>
-0x5F6D	# <CJK>
 0x5F70	# <CJK>
 0x5F71	# <CJK>
-0x5F73	# <CJK>
-0x5F77	# <CJK>
 0x5F79	# <CJK>
 0x5F7C	# <CJK>
-0x5F7F	# <CJK>
 0x5F80	# <CJK>
 0x5F81	# <CJK>
-0x5F82	# <CJK>
-0x5F83	# <CJK>
 0x5F84	# <CJK>
 0x5F85	# <CJK>
-0x5F87	# <CJK>
-0x5F88	# <CJK>
-0x5F8A	# <CJK>
 0x5F8B	# <CJK>
 0x5F8C	# <CJK>
 0x5F90	# <CJK>
-0x5F91	# <CJK>
 0x5F92	# <CJK>
 0x5F93	# <CJK>
 0x5F97	# <CJK>
-0x5F98	# <CJK>
-0x5F99	# <CJK>
-0x5F9E	# <CJK>
-0x5FA0	# <CJK>
 0x5FA1	# <CJK>
-0x5FA8	# <CJK>
 0x5FA9	# <CJK>
 0x5FAA	# <CJK>
-0x5FAD	# <CJK>
 0x5FAE	# <CJK>
 0x5FB3	# <CJK>
 0x5FB4	# <CJK>
 0x5FB9	# <CJK>
-0x5FBC	# <CJK>
-0x5FBD	# <CJK>
 0x5FC3	# <CJK>
 0x5FC5	# <CJK>
 0x5FCC	# <CJK>
 0x5FCD	# <CJK>
-0x5FD6	# <CJK>
 0x5FD7	# <CJK>
 0x5FD8	# <CJK>
 0x5FD9	# <CJK>
 0x5FDC	# <CJK>
-0x5FDD	# <CJK>
 0x5FE0	# <CJK>
-0x5FE4	# <CJK>
 0x5FEB	# <CJK>
-0x5FF0	# <CJK>
-0x5FF1	# <CJK>
 0x5FF5	# <CJK>
-0x5FF8	# <CJK>
-0x5FFB	# <CJK>
-0x5FFD	# <CJK>
-0x5FFF	# <CJK>
-0x600E	# <CJK>
-0x600F	# <CJK>
-0x6010	# <CJK>
 0x6012	# <CJK>
-0x6015	# <CJK>
 0x6016	# <CJK>
-0x6019	# <CJK>
-0x601B	# <CJK>
-0x601C	# <CJK>
 0x601D	# <CJK>
 0x6020	# <CJK>
-0x6021	# <CJK>
 0x6025	# <CJK>
-0x6026	# <CJK>
 0x6027	# <CJK>
 0x6028	# <CJK>
-0x6029	# <CJK>
 0x602A	# <CJK>
-0x602B	# <CJK>
-0x602F	# <CJK>
-0x6031	# <CJK>
-0x603A	# <CJK>
-0x6041	# <CJK>
-0x6042	# <CJK>
-0x6043	# <CJK>
-0x6046	# <CJK>
-0x604A	# <CJK>
 0x604B	# <CJK>
-0x604D	# <CJK>
 0x6050	# <CJK>
 0x6052	# <CJK>
-0x6055	# <CJK>
-0x6059	# <CJK>
-0x605A	# <CJK>
-0x605F	# <CJK>
-0x6060	# <CJK>
-0x6062	# <CJK>
 0x6063	# <CJK>
-0x6064	# <CJK>
 0x6065	# <CJK>
 0x6068	# <CJK>
 0x6069	# <CJK>
-0x606A	# <CJK>
-0x606B	# <CJK>
-0x606C	# <CJK>
 0x606D	# <CJK>
 0x606F	# <CJK>
-0x6070	# <CJK>
 0x6075	# <CJK>
-0x6077	# <CJK>
-0x6081	# <CJK>
-0x6083	# <CJK>
-0x6084	# <CJK>
-0x6089	# <CJK>
-0x608B	# <CJK>
-0x608C	# <CJK>
-0x608D	# <CJK>
-0x6092	# <CJK>
 0x6094	# <CJK>
-0x6096	# <CJK>
-0x6097	# <CJK>
-0x609A	# <CJK>
-0x609B	# <CJK>
 0x609F	# <CJK>
 0x60A0	# <CJK>
 0x60A3	# <CJK>
 0x60A6	# <CJK>
-0x60A7	# <CJK>
 0x60A9	# <CJK>
 0x60AA	# <CJK>
 0x60B2	# <CJK>
-0x60B3	# <CJK>
-0x60B4	# <CJK>
-0x60B5	# <CJK>
-0x60B6	# <CJK>
-0x60B8	# <CJK>
 0x60BC	# <CJK>
-0x60BD	# <CJK>
 0x60C5	# <CJK>
-0x60C6	# <CJK>
-0x60C7	# <CJK>
 0x60D1	# <CJK>
-0x60D3	# <CJK>
-0x60D8	# <CJK>
-0x60DA	# <CJK>
 0x60DC	# <CJK>
-0x60DF	# <CJK>
-0x60E0	# <CJK>
-0x60E1	# <CJK>
-0x60E3	# <CJK>
 0x60E7	# <CJK>
 0x60E8	# <CJK>
 0x60F0	# <CJK>
-0x60F1	# <CJK>
 0x60F3	# <CJK>
-0x60F4	# <CJK>
-0x60F6	# <CJK>
-0x60F7	# <CJK>
-0x60F9	# <CJK>
-0x60FA	# <CJK>
-0x60FB	# <CJK>
-0x6100	# <CJK>
 0x6101	# <CJK>
-0x6103	# <CJK>
-0x6106	# <CJK>
-0x6108	# <CJK>
 0x6109	# <CJK>
-0x610D	# <CJK>
-0x610E	# <CJK>
 0x610F	# <CJK>
-0x6115	# <CJK>
 0x611A	# <CJK>
 0x611B	# <CJK>
 0x611F	# <CJK>
-0x6121	# <CJK>
-0x6127	# <CJK>
-0x6128	# <CJK>
-0x612C	# <CJK>
-0x6134	# <CJK>
-0x613C	# <CJK>
-0x613D	# <CJK>
-0x613E	# <CJK>
-0x613F	# <CJK>
-0x6142	# <CJK>
 0x6144	# <CJK>
-0x6147	# <CJK>
 0x6148	# <CJK>
-0x614A	# <CJK>
 0x614B	# <CJK>
 0x614C	# <CJK>
-0x614D	# <CJK>
 0x614E	# <CJK>
-0x6153	# <CJK>
 0x6155	# <CJK>
-0x6158	# <CJK>
-0x6159	# <CJK>
-0x615A	# <CJK>
-0x615D	# <CJK>
-0x615F	# <CJK>
 0x6162	# <CJK>
 0x6163	# <CJK>
-0x6165	# <CJK>
-0x6167	# <CJK>
 0x6168	# <CJK>
-0x616B	# <CJK>
 0x616E	# <CJK>
-0x616F	# <CJK>
 0x6170	# <CJK>
-0x6171	# <CJK>
-0x6173	# <CJK>
-0x6174	# <CJK>
-0x6175	# <CJK>
 0x6176	# <CJK>
-0x6177	# <CJK>
-0x617E	# <CJK>
 0x6182	# <CJK>
-0x6187	# <CJK>
-0x618A	# <CJK>
 0x618E	# <CJK>
-0x6190	# <CJK>
-0x6191	# <CJK>
-0x6194	# <CJK>
-0x6196	# <CJK>
-0x6199	# <CJK>
-0x619A	# <CJK>
 0x61A4	# <CJK>
 0x61A7	# <CJK>
 0x61A9	# <CJK>
-0x61AB	# <CJK>
 0x61AC	# <CJK>
-0x61AE	# <CJK>
 0x61B2	# <CJK>
 0x61B6	# <CJK>
-0x61BA	# <CJK>
 0x61BE	# <CJK>
-0x61C3	# <CJK>
-0x61C6	# <CJK>
 0x61C7	# <CJK>
-0x61C8	# <CJK>
-0x61C9	# <CJK>
-0x61CA	# <CJK>
-0x61CB	# <CJK>
-0x61CC	# <CJK>
-0x61CD	# <CJK>
 0x61D0	# <CJK>
-0x61E3	# <CJK>
-0x61E6	# <CJK>
 0x61F2	# <CJK>
-0x61F4	# <CJK>
-0x61F6	# <CJK>
-0x61F7	# <CJK>
 0x61F8	# <CJK>
-0x61FA	# <CJK>
-0x61FC	# <CJK>
-0x61FD	# <CJK>
-0x61FE	# <CJK>
-0x61FF	# <CJK>
-0x6200	# <CJK>
-0x6208	# <CJK>
-0x6209	# <CJK>
-0x620A	# <CJK>
-0x620C	# <CJK>
-0x620D	# <CJK>
-0x620E	# <CJK>
 0x6210	# <CJK>
 0x6211	# <CJK>
 0x6212	# <CJK>
-0x6214	# <CJK>
-0x6216	# <CJK>
 0x621A	# <CJK>
-0x621B	# <CJK>
-0x621D	# <CJK>
-0x621E	# <CJK>
-0x621F	# <CJK>
-0x6221	# <CJK>
 0x6226	# <CJK>
-0x622A	# <CJK>
-0x622E	# <CJK>
 0x622F	# <CJK>
-0x6230	# <CJK>
-0x6232	# <CJK>
-0x6233	# <CJK>
 0x6234	# <CJK>
 0x6238	# <CJK>
 0x623B	# <CJK>
 0x623F	# <CJK>
 0x6240	# <CJK>
-0x6241	# <CJK>
 0x6247	# <CJK>
-0x6248	# <CJK>
 0x6249	# <CJK>
 0x624B	# <CJK>
 0x624D	# <CJK>
-0x624E	# <CJK>
 0x6253	# <CJK>
 0x6255	# <CJK>
-0x6258	# <CJK>
-0x625B	# <CJK>
-0x625E	# <CJK>
-0x6260	# <CJK>
-0x6263	# <CJK>
-0x6268	# <CJK>
-0x626E	# <CJK>
 0x6271	# <CJK>
 0x6276	# <CJK>
 0x6279	# <CJK>
-0x627C	# <CJK>
-0x627E	# <CJK>
 0x627F	# <CJK>
 0x6280	# <CJK>
-0x6282	# <CJK>
-0x6283	# <CJK>
 0x6284	# <CJK>
-0x6289	# <CJK>
 0x628A	# <CJK>
 0x6291	# <CJK>
-0x6292	# <CJK>
-0x6293	# <CJK>
-0x6294	# <CJK>
 0x6295	# <CJK>
-0x6296	# <CJK>
 0x6297	# <CJK>
 0x6298	# <CJK>
-0x629B	# <CJK>
 0x629C	# <CJK>
 0x629E	# <CJK>
 0x62AB	# <CJK>
-0x62AC	# <CJK>
 0x62B1	# <CJK>
 0x62B5	# <CJK>
 0x62B9	# <CJK>
-0x62BB	# <CJK>
 0x62BC	# <CJK>
 0x62BD	# <CJK>
-0x62C2	# <CJK>
 0x62C5	# <CJK>
-0x62C6	# <CJK>
-0x62C7	# <CJK>
-0x62C8	# <CJK>
 0x62C9	# <CJK>
-0x62CA	# <CJK>
-0x62CC	# <CJK>
 0x62CD	# <CJK>
-0x62CF	# <CJK>
 0x62D0	# <CJK>
-0x62D1	# <CJK>
 0x62D2	# <CJK>
 0x62D3	# <CJK>
-0x62D4	# <CJK>
-0x62D7	# <CJK>
 0x62D8	# <CJK>
 0x62D9	# <CJK>
 0x62DB	# <CJK>
-0x62DC	# <CJK>
 0x62DD	# <CJK>
 0x62E0	# <CJK>
 0x62E1	# <CJK>
 0x62EC	# <CJK>
 0x62ED	# <CJK>
-0x62EE	# <CJK>
-0x62EF	# <CJK>
-0x62F1	# <CJK>
 0x62F3	# <CJK>
-0x62F5	# <CJK>
 0x62F6	# <CJK>
 0x62F7	# <CJK>
 0x62FE	# <CJK>
-0x62FF	# <CJK>
 0x6301	# <CJK>
-0x6302	# <CJK>
 0x6307	# <CJK>
-0x6308	# <CJK>
-0x6309	# <CJK>
-0x630C	# <CJK>
 0x6311	# <CJK>
 0x6319	# <CJK>
 0x631F	# <CJK>
-0x6327	# <CJK>
 0x6328	# <CJK>
 0x632B	# <CJK>
 0x632F	# <CJK>
-0x633A	# <CJK>
-0x633D	# <CJK>
-0x633E	# <CJK>
 0x633F	# <CJK>
 0x6349	# <CJK>
-0x634C	# <CJK>
-0x634D	# <CJK>
-0x634F	# <CJK>
-0x6350	# <CJK>
 0x6355	# <CJK>
 0x6357	# <CJK>
 0x635C	# <CJK>
-0x6367	# <CJK>
 0x6368	# <CJK>
-0x6369	# <CJK>
-0x636B	# <CJK>
 0x636E	# <CJK>
-0x6372	# <CJK>
-0x6376	# <CJK>
-0x6377	# <CJK>
-0x637A	# <CJK>
 0x637B	# <CJK>
-0x6380	# <CJK>
 0x6383	# <CJK>
 0x6388	# <CJK>
-0x6389	# <CJK>
 0x638C	# <CJK>
-0x638E	# <CJK>
-0x638F	# <CJK>
 0x6392	# <CJK>
-0x6396	# <CJK>
 0x6398	# <CJK>
 0x639B	# <CJK>
-0x639F	# <CJK>
-0x63A0	# <CJK>
 0x63A1	# <CJK>
 0x63A2	# <CJK>
-0x63A3	# <CJK>
 0x63A5	# <CJK>
 0x63A7	# <CJK>
 0x63A8	# <CJK>
-0x63A9	# <CJK>
 0x63AA	# <CJK>
-0x63AB	# <CJK>
-0x63AC	# <CJK>
 0x63B2	# <CJK>
-0x63B4	# <CJK>
-0x63B5	# <CJK>
-0x63BB	# <CJK>
-0x63BE	# <CJK>
-0x63C0	# <CJK>
-0x63C3	# <CJK>
-0x63C4	# <CJK>
-0x63C6	# <CJK>
-0x63C9	# <CJK>
 0x63CF	# <CJK>
 0x63D0	# <CJK>
-0x63D2	# <CJK>
-0x63D6	# <CJK>
 0x63DA	# <CJK>
 0x63DB	# <CJK>
 0x63E1	# <CJK>
-0x63E3	# <CJK>
-0x63E9	# <CJK>
 0x63EE	# <CJK>
 0x63F4	# <CJK>
-0x63F6	# <CJK>
 0x63FA	# <CJK>
-0x6406	# <CJK>
 0x640D	# <CJK>
-0x640F	# <CJK>
-0x6413	# <CJK>
-0x6416	# <CJK>
-0x6417	# <CJK>
-0x641C	# <CJK>
-0x6426	# <CJK>
-0x6428	# <CJK>
 0x642C	# <CJK>
 0x642D	# <CJK>
-0x6434	# <CJK>
-0x6436	# <CJK>
 0x643A	# <CJK>
 0x643E	# <CJK>
 0x6442	# <CJK>
-0x644E	# <CJK>
 0x6458	# <CJK>
-0x6467	# <CJK>
 0x6469	# <CJK>
 0x646F	# <CJK>
-0x6476	# <CJK>
-0x6478	# <CJK>
-0x647A	# <CJK>
 0x6483	# <CJK>
-0x6488	# <CJK>
-0x6492	# <CJK>
-0x6493	# <CJK>
-0x6495	# <CJK>
-0x649A	# <CJK>
-0x649E	# <CJK>
 0x64A4	# <CJK>
-0x64A5	# <CJK>
-0x64A9	# <CJK>
-0x64AB	# <CJK>
-0x64AD	# <CJK>
 0x64AE	# <CJK>
-0x64B0	# <CJK>
 0x64B2	# <CJK>
-0x64B9	# <CJK>
-0x64BB	# <CJK>
-0x64BC	# <CJK>
 0x64C1	# <CJK>
-0x64C2	# <CJK>
-0x64C5	# <CJK>
-0x64C7	# <CJK>
 0x64CD	# <CJK>
-0x64D2	# <CJK>
-0x64D4	# <CJK>
-0x64D8	# <CJK>
-0x64DA	# <CJK>
-0x64E0	# <CJK>
-0x64E1	# <CJK>
-0x64E2	# <CJK>
-0x64E3	# <CJK>
 0x64E6	# <CJK>
-0x64E7	# <CJK>
 0x64EC	# <CJK>
-0x64EF	# <CJK>
-0x64F1	# <CJK>
-0x64F2	# <CJK>
-0x64F4	# <CJK>
-0x64F6	# <CJK>
-0x64FA	# <CJK>
-0x64FD	# <CJK>
-0x64FE	# <CJK>
-0x6500	# <CJK>
-0x6505	# <CJK>
-0x6518	# <CJK>
-0x651C	# <CJK>
-0x651D	# <CJK>
-0x6523	# <CJK>
-0x6524	# <CJK>
-0x652A	# <CJK>
-0x652B	# <CJK>
-0x652C	# <CJK>
 0x652F	# <CJK>
-0x6534	# <CJK>
-0x6535	# <CJK>
-0x6536	# <CJK>
-0x6537	# <CJK>
-0x6538	# <CJK>
 0x6539	# <CJK>
 0x653B	# <CJK>
 0x653E	# <CJK>
 0x653F	# <CJK>
 0x6545	# <CJK>
-0x6548	# <CJK>
-0x654D	# <CJK>
 0x654F	# <CJK>
 0x6551	# <CJK>
-0x6555	# <CJK>
-0x6556	# <CJK>
 0x6557	# <CJK>
-0x6558	# <CJK>
 0x6559	# <CJK>
-0x655D	# <CJK>
-0x655E	# <CJK>
 0x6562	# <CJK>
 0x6563	# <CJK>
-0x6566	# <CJK>
 0x656C	# <CJK>
 0x6570	# <CJK>
-0x6572	# <CJK>
 0x6574	# <CJK>
 0x6575	# <CJK>
 0x6577	# <CJK>
-0x6578	# <CJK>
-0x6582	# <CJK>
-0x6583	# <CJK>
 0x6587	# <CJK>
-0x6588	# <CJK>
 0x6589	# <CJK>
-0x658C	# <CJK>
 0x658E	# <CJK>
-0x6590	# <CJK>
 0x6591	# <CJK>
 0x6597	# <CJK>
 0x6599	# <CJK>
-0x659B	# <CJK>
 0x659C	# <CJK>
-0x659F	# <CJK>
-0x65A1	# <CJK>
 0x65A4	# <CJK>
 0x65A5	# <CJK>
-0x65A7	# <CJK>
-0x65AB	# <CJK>
 0x65AC	# <CJK>
 0x65AD	# <CJK>
-0x65AF	# <CJK>
 0x65B0	# <CJK>
-0x65B7	# <CJK>
 0x65B9	# <CJK>
-0x65BC	# <CJK>
 0x65BD	# <CJK>
-0x65C1	# <CJK>
-0x65C3	# <CJK>
-0x65C4	# <CJK>
 0x65C5	# <CJK>
-0x65C6	# <CJK>
 0x65CB	# <CJK>
-0x65CC	# <CJK>
 0x65CF	# <CJK>
-0x65D2	# <CJK>
 0x65D7	# <CJK>
-0x65D9	# <CJK>
-0x65DB	# <CJK>
-0x65E0	# <CJK>
-0x65E1	# <CJK>
 0x65E2	# <CJK>
 0x65E5	# <CJK>
 0x65E6	# <CJK>
@@ -2338,21 +1110,12 @@
 0x65E8	# <CJK>
 0x65E9	# <CJK>
 0x65EC	# <CJK>
-0x65ED	# <CJK>
-0x65F1	# <CJK>
 0x65FA	# <CJK>
-0x65FB	# <CJK>
-0x6602	# <CJK>
-0x6603	# <CJK>
 0x6606	# <CJK>
 0x6607	# <CJK>
-0x660A	# <CJK>
-0x660C	# <CJK>
 0x660E	# <CJK>
-0x660F	# <CJK>
 0x6613	# <CJK>
 0x6614	# <CJK>
-0x661C	# <CJK>
 0x661F	# <CJK>
 0x6620	# <CJK>
 0x6625	# <CJK>
@@ -2360,146 +1123,59 @@
 0x6628	# <CJK>
 0x662D	# <CJK>
 0x662F	# <CJK>
-0x6634	# <CJK>
-0x6635	# <CJK>
-0x6636	# <CJK>
 0x663C	# <CJK>
-0x663F	# <CJK>
-0x6641	# <CJK>
 0x6642	# <CJK>
-0x6643	# <CJK>
-0x6644	# <CJK>
-0x6649	# <CJK>
-0x664B	# <CJK>
-0x664F	# <CJK>
-0x6652	# <CJK>
-0x665D	# <CJK>
-0x665E	# <CJK>
-0x665F	# <CJK>
-0x6662	# <CJK>
-0x6664	# <CJK>
-0x6666	# <CJK>
-0x6667	# <CJK>
-0x6668	# <CJK>
 0x6669	# <CJK>
 0x666E	# <CJK>
 0x666F	# <CJK>
-0x6670	# <CJK>
 0x6674	# <CJK>
 0x6676	# <CJK>
-0x667A	# <CJK>
 0x6681	# <CJK>
-0x6683	# <CJK>
-0x6684	# <CJK>
 0x6687	# <CJK>
-0x6688	# <CJK>
-0x6689	# <CJK>
-0x668E	# <CJK>
 0x6691	# <CJK>
 0x6696	# <CJK>
 0x6697	# <CJK>
-0x6698	# <CJK>
-0x669D	# <CJK>
-0x66A2	# <CJK>
 0x66A6	# <CJK>
 0x66AB	# <CJK>
 0x66AE	# <CJK>
 0x66B4	# <CJK>
-0x66B8	# <CJK>
-0x66B9	# <CJK>
-0x66BC	# <CJK>
-0x66BE	# <CJK>
-0x66C1	# <CJK>
-0x66C4	# <CJK>
 0x66C7	# <CJK>
-0x66C9	# <CJK>
 0x66D6	# <CJK>
-0x66D9	# <CJK>
-0x66DA	# <CJK>
 0x66DC	# <CJK>
-0x66DD	# <CJK>
-0x66E0	# <CJK>
-0x66E6	# <CJK>
-0x66E9	# <CJK>
-0x66F0	# <CJK>
 0x66F2	# <CJK>
-0x66F3	# <CJK>
 0x66F4	# <CJK>
-0x66F5	# <CJK>
-0x66F7	# <CJK>
 0x66F8	# <CJK>
 0x66F9	# <CJK>
-0x66FC	# <CJK>
 0x66FD	# <CJK>
-0x66FE	# <CJK>
 0x66FF	# <CJK>
 0x6700	# <CJK>
-0x6703	# <CJK>
 0x6708	# <CJK>
 0x6709	# <CJK>
-0x670B	# <CJK>
 0x670D	# <CJK>
-0x670F	# <CJK>
-0x6714	# <CJK>
 0x6715	# <CJK>
-0x6716	# <CJK>
 0x6717	# <CJK>
 0x671B	# <CJK>
 0x671D	# <CJK>
-0x671E	# <CJK>
 0x671F	# <CJK>
-0x6726	# <CJK>
-0x6727	# <CJK>
 0x6728	# <CJK>
 0x672A	# <CJK>
 0x672B	# <CJK>
 0x672C	# <CJK>
 0x672D	# <CJK>
-0x672E	# <CJK>
 0x6731	# <CJK>
 0x6734	# <CJK>
-0x6736	# <CJK>
-0x6737	# <CJK>
-0x6738	# <CJK>
 0x673A	# <CJK>
 0x673D	# <CJK>
-0x673F	# <CJK>
-0x6741	# <CJK>
-0x6746	# <CJK>
 0x6749	# <CJK>
-0x674E	# <CJK>
-0x674F	# <CJK>
 0x6750	# <CJK>
 0x6751	# <CJK>
-0x6753	# <CJK>
-0x6756	# <CJK>
-0x6759	# <CJK>
-0x675C	# <CJK>
-0x675E	# <CJK>
 0x675F	# <CJK>
-0x6760	# <CJK>
 0x6761	# <CJK>
-0x6762	# <CJK>
-0x6763	# <CJK>
-0x6764	# <CJK>
 0x6765	# <CJK>
-0x676A	# <CJK>
-0x676D	# <CJK>
 0x676F	# <CJK>
-0x6770	# <CJK>
 0x6771	# <CJK>
-0x6772	# <CJK>
-0x6773	# <CJK>
-0x6775	# <CJK>
-0x6777	# <CJK>
-0x677C	# <CJK>
 0x677E	# <CJK>
 0x677F	# <CJK>
-0x6785	# <CJK>
-0x6787	# <CJK>
-0x6789	# <CJK>
-0x678B	# <CJK>
-0x678C	# <CJK>
 0x6790	# <CJK>
 0x6795	# <CJK>
 0x6797	# <CJK>
@@ -2507,2836 +1183,820 @@
 0x679C	# <CJK>
 0x679D	# <CJK>
 0x67A0	# <CJK>
-0x67A1	# <CJK>
 0x67A2	# <CJK>
-0x67A6	# <CJK>
-0x67A9	# <CJK>
 0x67AF	# <CJK>
-0x67B3	# <CJK>
-0x67B4	# <CJK>
 0x67B6	# <CJK>
-0x67B7	# <CJK>
-0x67B8	# <CJK>
-0x67B9	# <CJK>
-0x67C1	# <CJK>
 0x67C4	# <CJK>
-0x67C6	# <CJK>
-0x67CA	# <CJK>
-0x67CE	# <CJK>
-0x67CF	# <CJK>
 0x67D0	# <CJK>
-0x67D1	# <CJK>
 0x67D3	# <CJK>
 0x67D4	# <CJK>
-0x67D8	# <CJK>
-0x67DA	# <CJK>
-0x67DD	# <CJK>
-0x67DE	# <CJK>
-0x67E2	# <CJK>
-0x67E4	# <CJK>
-0x67E7	# <CJK>
-0x67E9	# <CJK>
-0x67EC	# <CJK>
-0x67EE	# <CJK>
-0x67EF	# <CJK>
 0x67F1	# <CJK>
 0x67F3	# <CJK>
-0x67F4	# <CJK>
 0x67F5	# <CJK>
 0x67FB	# <CJK>
-0x67FE	# <CJK>
 0x67FF	# <CJK>
-0x6802	# <CJK>
 0x6803	# <CJK>
 0x6804	# <CJK>
 0x6813	# <CJK>
-0x6816	# <CJK>
-0x6817	# <CJK>
-0x681E	# <CJK>
 0x6821	# <CJK>
-0x6822	# <CJK>
-0x6829	# <CJK>
 0x682A	# <CJK>
-0x682B	# <CJK>
-0x6832	# <CJK>
-0x6834	# <CJK>
 0x6838	# <CJK>
 0x6839	# <CJK>
 0x683C	# <CJK>
 0x683D	# <CJK>
-0x6840	# <CJK>
 0x6841	# <CJK>
-0x6842	# <CJK>
 0x6843	# <CJK>
-0x6846	# <CJK>
 0x6848	# <CJK>
-0x684D	# <CJK>
-0x684E	# <CJK>
-0x6850	# <CJK>
 0x6851	# <CJK>
-0x6853	# <CJK>
-0x6854	# <CJK>
-0x6859	# <CJK>
 0x685C	# <CJK>
-0x685D	# <CJK>
 0x685F	# <CJK>
-0x6863	# <CJK>
-0x6867	# <CJK>
-0x6874	# <CJK>
-0x6876	# <CJK>
-0x6877	# <CJK>
-0x687E	# <CJK>
-0x687F	# <CJK>
-0x6881	# <CJK>
-0x6883	# <CJK>
 0x6885	# <CJK>
-0x688D	# <CJK>
-0x688F	# <CJK>
-0x6893	# <CJK>
-0x6894	# <CJK>
 0x6897	# <CJK>
-0x689B	# <CJK>
-0x689D	# <CJK>
-0x689F	# <CJK>
-0x68A0	# <CJK>
-0x68A2	# <CJK>
-0x68A6	# <CJK>
-0x68A7	# <CJK>
 0x68A8	# <CJK>
-0x68AD	# <CJK>
-0x68AF	# <CJK>
 0x68B0	# <CJK>
-0x68B1	# <CJK>
-0x68B3	# <CJK>
-0x68B5	# <CJK>
-0x68B6	# <CJK>
-0x68B9	# <CJK>
-0x68BA	# <CJK>
-0x68BC	# <CJK>
 0x68C4	# <CJK>
-0x68C6	# <CJK>
-0x68C9	# <CJK>
-0x68CA	# <CJK>
 0x68CB	# <CJK>
-0x68CD	# <CJK>
 0x68D2	# <CJK>
-0x68D4	# <CJK>
-0x68D5	# <CJK>
-0x68D7	# <CJK>
-0x68D8	# <CJK>
 0x68DA	# <CJK>
 0x68DF	# <CJK>
-0x68E0	# <CJK>
-0x68E1	# <CJK>
-0x68E3	# <CJK>
-0x68E7	# <CJK>
 0x68EE	# <CJK>
-0x68EF	# <CJK>
-0x68F2	# <CJK>
-0x68F9	# <CJK>
 0x68FA	# <CJK>
-0x6900	# <CJK>
-0x6901	# <CJK>
-0x6904	# <CJK>
 0x6905	# <CJK>
-0x6908	# <CJK>
-0x690B	# <CJK>
-0x690C	# <CJK>
 0x690D	# <CJK>
 0x690E	# <CJK>
-0x690F	# <CJK>
-0x6912	# <CJK>
-0x6919	# <CJK>
-0x691A	# <CJK>
-0x691B	# <CJK>
 0x691C	# <CJK>
-0x6921	# <CJK>
-0x6922	# <CJK>
-0x6923	# <CJK>
-0x6925	# <CJK>
-0x6926	# <CJK>
-0x6928	# <CJK>
-0x692A	# <CJK>
-0x6930	# <CJK>
-0x6934	# <CJK>
-0x6936	# <CJK>
-0x6939	# <CJK>
-0x693D	# <CJK>
-0x693F	# <CJK>
-0x694A	# <CJK>
-0x6953	# <CJK>
-0x6954	# <CJK>
-0x6955	# <CJK>
-0x6959	# <CJK>
-0x695A	# <CJK>
-0x695C	# <CJK>
-0x695D	# <CJK>
-0x695E	# <CJK>
-0x6960	# <CJK>
-0x6961	# <CJK>
-0x6962	# <CJK>
-0x696A	# <CJK>
-0x696B	# <CJK>
 0x696D	# <CJK>
-0x696E	# <CJK>
-0x696F	# <CJK>
-0x6973	# <CJK>
-0x6974	# <CJK>
 0x6975	# <CJK>
 0x6977	# <CJK>
-0x6978	# <CJK>
-0x6979	# <CJK>
 0x697C	# <CJK>
 0x697D	# <CJK>
-0x697E	# <CJK>
-0x6981	# <CJK>
 0x6982	# <CJK>
-0x698A	# <CJK>
-0x698E	# <CJK>
-0x6991	# <CJK>
-0x6994	# <CJK>
-0x6995	# <CJK>
-0x699B	# <CJK>
-0x699C	# <CJK>
-0x69A0	# <CJK>
-0x69A7	# <CJK>
-0x69AE	# <CJK>
-0x69B1	# <CJK>
-0x69B2	# <CJK>
-0x69B4	# <CJK>
-0x69BB	# <CJK>
-0x69BE	# <CJK>
-0x69BF	# <CJK>
-0x69C1	# <CJK>
-0x69C3	# <CJK>
-0x69C7	# <CJK>
-0x69CA	# <CJK>
 0x69CB	# <CJK>
-0x69CC	# <CJK>
-0x69CD	# <CJK>
-0x69CE	# <CJK>
-0x69D0	# <CJK>
-0x69D3	# <CJK>
 0x69D8	# <CJK>
-0x69D9	# <CJK>
-0x69DD	# <CJK>
-0x69DE	# <CJK>
-0x69E7	# <CJK>
-0x69E8	# <CJK>
-0x69EB	# <CJK>
-0x69ED	# <CJK>
-0x69F2	# <CJK>
-0x69F9	# <CJK>
-0x69FB	# <CJK>
 0x69FD	# <CJK>
-0x69FF	# <CJK>
-0x6A02	# <CJK>
-0x6A05	# <CJK>
-0x6A0A	# <CJK>
-0x6A0B	# <CJK>
-0x6A0C	# <CJK>
-0x6A12	# <CJK>
-0x6A13	# <CJK>
-0x6A14	# <CJK>
-0x6A17	# <CJK>
 0x6A19	# <CJK>
-0x6A1B	# <CJK>
-0x6A1E	# <CJK>
-0x6A1F	# <CJK>
 0x6A21	# <CJK>
-0x6A22	# <CJK>
-0x6A23	# <CJK>
 0x6A29	# <CJK>
 0x6A2A	# <CJK>
-0x6A2B	# <CJK>
-0x6A2E	# <CJK>
-0x6A35	# <CJK>
-0x6A36	# <CJK>
-0x6A38	# <CJK>
 0x6A39	# <CJK>
-0x6A3A	# <CJK>
-0x6A3D	# <CJK>
-0x6A44	# <CJK>
-0x6A47	# <CJK>
-0x6A48	# <CJK>
 0x6A4B	# <CJK>
-0x6A58	# <CJK>
-0x6A59	# <CJK>
 0x6A5F	# <CJK>
-0x6A61	# <CJK>
-0x6A62	# <CJK>
-0x6A66	# <CJK>
-0x6A72	# <CJK>
-0x6A78	# <CJK>
-0x6A7F	# <CJK>
-0x6A80	# <CJK>
-0x6A84	# <CJK>
-0x6A8D	# <CJK>
-0x6A8E	# <CJK>
-0x6A90	# <CJK>
-0x6A97	# <CJK>
-0x6A9C	# <CJK>
-0x6AA0	# <CJK>
-0x6AA2	# <CJK>
-0x6AA3	# <CJK>
-0x6AAA	# <CJK>
-0x6AAC	# <CJK>
-0x6AAE	# <CJK>
-0x6AB3	# <CJK>
-0x6AB8	# <CJK>
-0x6ABB	# <CJK>
-0x6AC1	# <CJK>
-0x6AC2	# <CJK>
-0x6AC3	# <CJK>
-0x6AD1	# <CJK>
-0x6AD3	# <CJK>
-0x6ADA	# <CJK>
-0x6ADB	# <CJK>
-0x6ADE	# <CJK>
-0x6ADF	# <CJK>
-0x6AE8	# <CJK>
-0x6AEA	# <CJK>
-0x6AFA	# <CJK>
-0x6AFB	# <CJK>
 0x6B04	# <CJK>
-0x6B05	# <CJK>
-0x6B0A	# <CJK>
-0x6B12	# <CJK>
-0x6B16	# <CJK>
-0x6B1D	# <CJK>
-0x6B1F	# <CJK>
 0x6B20	# <CJK>
 0x6B21	# <CJK>
-0x6B23	# <CJK>
 0x6B27	# <CJK>
 0x6B32	# <CJK>
-0x6B37	# <CJK>
-0x6B38	# <CJK>
-0x6B39	# <CJK>
 0x6B3A	# <CJK>
-0x6B3D	# <CJK>
 0x6B3E	# <CJK>
-0x6B43	# <CJK>
-0x6B47	# <CJK>
-0x6B49	# <CJK>
 0x6B4C	# <CJK>
-0x6B4E	# <CJK>
-0x6B50	# <CJK>
 0x6B53	# <CJK>
-0x6B54	# <CJK>
-0x6B59	# <CJK>
-0x6B5B	# <CJK>
-0x6B5F	# <CJK>
-0x6B61	# <CJK>
 0x6B62	# <CJK>
 0x6B63	# <CJK>
-0x6B64	# <CJK>
 0x6B66	# <CJK>
 0x6B69	# <CJK>
-0x6B6A	# <CJK>
 0x6B6F	# <CJK>
 0x6B73	# <CJK>
 0x6B74	# <CJK>
-0x6B78	# <CJK>
-0x6B79	# <CJK>
 0x6B7B	# <CJK>
-0x6B7F	# <CJK>
-0x6B80	# <CJK>
-0x6B83	# <CJK>
-0x6B84	# <CJK>
-0x6B86	# <CJK>
 0x6B89	# <CJK>
 0x6B8A	# <CJK>
 0x6B8B	# <CJK>
-0x6B8D	# <CJK>
-0x6B95	# <CJK>
 0x6B96	# <CJK>
-0x6B98	# <CJK>
-0x6B9E	# <CJK>
-0x6BA4	# <CJK>
-0x6BAA	# <CJK>
-0x6BAB	# <CJK>
-0x6BAF	# <CJK>
-0x6BB1	# <CJK>
-0x6BB2	# <CJK>
-0x6BB3	# <CJK>
 0x6BB4	# <CJK>
 0x6BB5	# <CJK>
-0x6BB7	# <CJK>
 0x6BBA	# <CJK>
 0x6BBB	# <CJK>
-0x6BBC	# <CJK>
 0x6BBF	# <CJK>
 0x6BC0	# <CJK>
-0x6BC5	# <CJK>
-0x6BC6	# <CJK>
-0x6BCB	# <CJK>
 0x6BCD	# <CJK>
 0x6BCE	# <CJK>
 0x6BD2	# <CJK>
-0x6BD3	# <CJK>
 0x6BD4	# <CJK>
-0x6BD8	# <CJK>
 0x6BDB	# <CJK>
-0x6BDF	# <CJK>
-0x6BEB	# <CJK>
-0x6BEC	# <CJK>
-0x6BEF	# <CJK>
-0x6BF3	# <CJK>
-0x6C08	# <CJK>
 0x6C0F	# <CJK>
 0x6C11	# <CJK>
-0x6C13	# <CJK>
-0x6C14	# <CJK>
 0x6C17	# <CJK>
-0x6C1B	# <CJK>
-0x6C23	# <CJK>
-0x6C24	# <CJK>
 0x6C34	# <CJK>
 0x6C37	# <CJK>
 0x6C38	# <CJK>
 0x6C3E	# <CJK>
-0x6C40	# <CJK>
 0x6C41	# <CJK>
 0x6C42	# <CJK>
 0x6C4E	# <CJK>
-0x6C50	# <CJK>
-0x6C55	# <CJK>
 0x6C57	# <CJK>
 0x6C5A	# <CJK>
-0x6C5D	# <CJK>
-0x6C5E	# <CJK>
 0x6C5F	# <CJK>
 0x6C60	# <CJK>
-0x6C62	# <CJK>
-0x6C68	# <CJK>
-0x6C6A	# <CJK>
 0x6C70	# <CJK>
-0x6C72	# <CJK>
-0x6C73	# <CJK>
 0x6C7A	# <CJK>
 0x6C7D	# <CJK>
-0x6C7E	# <CJK>
-0x6C81	# <CJK>
-0x6C82	# <CJK>
 0x6C83	# <CJK>
 0x6C88	# <CJK>
-0x6C8C	# <CJK>
-0x6C8D	# <CJK>
-0x6C90	# <CJK>
-0x6C92	# <CJK>
-0x6C93	# <CJK>
 0x6C96	# <CJK>
 0x6C99	# <CJK>
-0x6C9A	# <CJK>
-0x6C9B	# <CJK>
 0x6CA1	# <CJK>
 0x6CA2	# <CJK>
-0x6CAB	# <CJK>
-0x6CAE	# <CJK>
-0x6CB1	# <CJK>
 0x6CB3	# <CJK>
 0x6CB8	# <CJK>
 0x6CB9	# <CJK>
-0x6CBA	# <CJK>
 0x6CBB	# <CJK>
 0x6CBC	# <CJK>
-0x6CBD	# <CJK>
-0x6CBE	# <CJK>
 0x6CBF	# <CJK>
 0x6CC1	# <CJK>
-0x6CC4	# <CJK>
-0x6CC5	# <CJK>
 0x6CC9	# <CJK>
 0x6CCA	# <CJK>
 0x6CCC	# <CJK>
-0x6CD3	# <CJK>
 0x6CD5	# <CJK>
-0x6CD7	# <CJK>
-0x6CD9	# <CJK>
-0x6CDB	# <CJK>
-0x6CDD	# <CJK>
 0x6CE1	# <CJK>
 0x6CE2	# <CJK>
 0x6CE3	# <CJK>
 0x6CE5	# <CJK>
 0x6CE8	# <CJK>
-0x6CEA	# <CJK>
-0x6CEF	# <CJK>
 0x6CF0	# <CJK>
-0x6CF1	# <CJK>
 0x6CF3	# <CJK>
 0x6D0B	# <CJK>
-0x6D0C	# <CJK>
-0x6D12	# <CJK>
 0x6D17	# <CJK>
-0x6D19	# <CJK>
-0x6D1B	# <CJK>
 0x6D1E	# <CJK>
-0x6D1F	# <CJK>
 0x6D25	# <CJK>
-0x6D29	# <CJK>
 0x6D2A	# <CJK>
-0x6D2B	# <CJK>
-0x6D32	# <CJK>
-0x6D33	# <CJK>
-0x6D35	# <CJK>
-0x6D36	# <CJK>
-0x6D38	# <CJK>
 0x6D3B	# <CJK>
-0x6D3D	# <CJK>
 0x6D3E	# <CJK>
 0x6D41	# <CJK>
 0x6D44	# <CJK>
 0x6D45	# <CJK>
-0x6D59	# <CJK>
-0x6D5A	# <CJK>
 0x6D5C	# <CJK>
-0x6D63	# <CJK>
-0x6D64	# <CJK>
 0x6D66	# <CJK>
-0x6D69	# <CJK>
 0x6D6A	# <CJK>
-0x6D6C	# <CJK>
 0x6D6E	# <CJK>
 0x6D74	# <CJK>
 0x6D77	# <CJK>
 0x6D78	# <CJK>
-0x6D79	# <CJK>
-0x6D85	# <CJK>
 0x6D88	# <CJK>
-0x6D8C	# <CJK>
-0x6D8E	# <CJK>
-0x6D93	# <CJK>
-0x6D95	# <CJK>
 0x6D99	# <CJK>
-0x6D9B	# <CJK>
-0x6D9C	# <CJK>
 0x6DAF	# <CJK>
 0x6DB2	# <CJK>
-0x6DB5	# <CJK>
-0x6DB8	# <CJK>
 0x6DBC	# <CJK>
-0x6DC0	# <CJK>
-0x6DC5	# <CJK>
-0x6DC6	# <CJK>
-0x6DC7	# <CJK>
-0x6DCB	# <CJK>
-0x6DCC	# <CJK>
 0x6DD1	# <CJK>
-0x6DD2	# <CJK>
-0x6DD5	# <CJK>
-0x6DD8	# <CJK>
-0x6DD9	# <CJK>
-0x6DDE	# <CJK>
 0x6DE1	# <CJK>
-0x6DE4	# <CJK>
-0x6DE6	# <CJK>
-0x6DE8	# <CJK>
-0x6DEA	# <CJK>
 0x6DEB	# <CJK>
-0x6DEC	# <CJK>
-0x6DEE	# <CJK>
 0x6DF1	# <CJK>
-0x6DF3	# <CJK>
-0x6DF5	# <CJK>
 0x6DF7	# <CJK>
-0x6DF9	# <CJK>
-0x6DFA	# <CJK>
 0x6DFB	# <CJK>
 0x6E05	# <CJK>
 0x6E07	# <CJK>
 0x6E08	# <CJK>
 0x6E09	# <CJK>
-0x6E0A	# <CJK>
 0x6E0B	# <CJK>
 0x6E13	# <CJK>
-0x6E15	# <CJK>
-0x6E19	# <CJK>
-0x6E1A	# <CJK>
 0x6E1B	# <CJK>
-0x6E1D	# <CJK>
-0x6E1F	# <CJK>
-0x6E20	# <CJK>
 0x6E21	# <CJK>
-0x6E23	# <CJK>
-0x6E24	# <CJK>
-0x6E25	# <CJK>
 0x6E26	# <CJK>
 0x6E29	# <CJK>
-0x6E2B	# <CJK>
 0x6E2C	# <CJK>
-0x6E2D	# <CJK>
-0x6E2E	# <CJK>
 0x6E2F	# <CJK>
-0x6E38	# <CJK>
-0x6E3A	# <CJK>
-0x6E3E	# <CJK>
-0x6E43	# <CJK>
-0x6E4A	# <CJK>
-0x6E4D	# <CJK>
-0x6E4E	# <CJK>
 0x6E56	# <CJK>
-0x6E58	# <CJK>
-0x6E5B	# <CJK>
-0x6E5F	# <CJK>
 0x6E67	# <CJK>
-0x6E6B	# <CJK>
-0x6E6E	# <CJK>
 0x6E6F	# <CJK>
-0x6E72	# <CJK>
-0x6E76	# <CJK>
 0x6E7E	# <CJK>
 0x6E7F	# <CJK>
 0x6E80	# <CJK>
-0x6E82	# <CJK>
-0x6E8C	# <CJK>
-0x6E8F	# <CJK>
 0x6E90	# <CJK>
 0x6E96	# <CJK>
-0x6E98	# <CJK>
-0x6E9C	# <CJK>
 0x6E9D	# <CJK>
-0x6E9F	# <CJK>
-0x6EA2	# <CJK>
-0x6EA5	# <CJK>
-0x6EAA	# <CJK>
-0x6EAF	# <CJK>
-0x6EB2	# <CJK>
 0x6EB6	# <CJK>
-0x6EB7	# <CJK>
 0x6EBA	# <CJK>
-0x6EBD	# <CJK>
-0x6EC2	# <CJK>
-0x6EC4	# <CJK>
 0x6EC5	# <CJK>
-0x6EC9	# <CJK>
 0x6ECB	# <CJK>
-0x6ECC	# <CJK>
 0x6ED1	# <CJK>
-0x6ED3	# <CJK>
-0x6ED4	# <CJK>
-0x6ED5	# <CJK>
 0x6EDD	# <CJK>
 0x6EDE	# <CJK>
-0x6EEC	# <CJK>
-0x6EEF	# <CJK>
-0x6EF2	# <CJK>
 0x6EF4	# <CJK>
-0x6EF7	# <CJK>
-0x6EF8	# <CJK>
-0x6EFE	# <CJK>
-0x6EFF	# <CJK>
 0x6F01	# <CJK>
 0x6F02	# <CJK>
 0x6F06	# <CJK>
-0x6F09	# <CJK>
 0x6F0F	# <CJK>
-0x6F11	# <CJK>
-0x6F13	# <CJK>
 0x6F14	# <CJK>
-0x6F15	# <CJK>
 0x6F20	# <CJK>
 0x6F22	# <CJK>
-0x6F23	# <CJK>
 0x6F2B	# <CJK>
 0x6F2C	# <CJK>
-0x6F31	# <CJK>
-0x6F32	# <CJK>
 0x6F38	# <CJK>
-0x6F3E	# <CJK>
-0x6F3F	# <CJK>
-0x6F41	# <CJK>
-0x6F45	# <CJK>
 0x6F54	# <CJK>
-0x6F58	# <CJK>
-0x6F5B	# <CJK>
 0x6F5C	# <CJK>
 0x6F5F	# <CJK>
 0x6F64	# <CJK>
-0x6F66	# <CJK>
-0x6F6D	# <CJK>
 0x6F6E	# <CJK>
-0x6F6F	# <CJK>
 0x6F70	# <CJK>
-0x6F74	# <CJK>
-0x6F78	# <CJK>
-0x6F7A	# <CJK>
-0x6F7C	# <CJK>
-0x6F80	# <CJK>
-0x6F81	# <CJK>
-0x6F82	# <CJK>
 0x6F84	# <CJK>
-0x6F86	# <CJK>
-0x6F8E	# <CJK>
-0x6F91	# <CJK>
-0x6F97	# <CJK>
-0x6FA1	# <CJK>
-0x6FA3	# <CJK>
-0x6FA4	# <CJK>
-0x6FAA	# <CJK>
-0x6FB1	# <CJK>
-0x6FB3	# <CJK>
-0x6FB9	# <CJK>
 0x6FC0	# <CJK>
 0x6FC1	# <CJK>
-0x6FC2	# <CJK>
 0x6FC3	# <CJK>
-0x6FC6	# <CJK>
-0x6FD4	# <CJK>
-0x6FD5	# <CJK>
-0x6FD8	# <CJK>
-0x6FDB	# <CJK>
-0x6FDF	# <CJK>
-0x6FE0	# <CJK>
-0x6FE1	# <CJK>
-0x6FE4	# <CJK>
 0x6FEB	# <CJK>
-0x6FEC	# <CJK>
-0x6FEE	# <CJK>
 0x6FEF	# <CJK>
-0x6FF1	# <CJK>
-0x6FF3	# <CJK>
-0x6FF6	# <CJK>
-0x6FFA	# <CJK>
-0x6FFE	# <CJK>
-0x7001	# <CJK>
-0x7009	# <CJK>
-0x700B	# <CJK>
-0x700F	# <CJK>
-0x7011	# <CJK>
-0x7015	# <CJK>
-0x7018	# <CJK>
-0x701A	# <CJK>
-0x701B	# <CJK>
-0x701D	# <CJK>
-0x701E	# <CJK>
-0x701F	# <CJK>
-0x7026	# <CJK>
-0x7027	# <CJK>
 0x702C	# <CJK>
-0x7030	# <CJK>
-0x7032	# <CJK>
-0x703E	# <CJK>
-0x704C	# <CJK>
-0x7051	# <CJK>
-0x7058	# <CJK>
-0x7063	# <CJK>
 0x706B	# <CJK>
 0x706F	# <CJK>
 0x7070	# <CJK>
-0x7078	# <CJK>
-0x707C	# <CJK>
 0x707D	# <CJK>
 0x7089	# <CJK>
 0x708A	# <CJK>
 0x708E	# <CJK>
-0x7092	# <CJK>
-0x7099	# <CJK>
-0x70AC	# <CJK>
 0x70AD	# <CJK>
-0x70AE	# <CJK>
-0x70AF	# <CJK>
-0x70B3	# <CJK>
-0x70B8	# <CJK>
 0x70B9	# <CJK>
 0x70BA	# <CJK>
 0x70C8	# <CJK>
-0x70CB	# <CJK>
-0x70CF	# <CJK>
-0x70D9	# <CJK>
-0x70DD	# <CJK>
-0x70DF	# <CJK>
-0x70F1	# <CJK>
-0x70F9	# <CJK>
-0x70FD	# <CJK>
-0x7109	# <CJK>
-0x7114	# <CJK>
-0x7119	# <CJK>
-0x711A	# <CJK>
-0x711C	# <CJK>
 0x7121	# <CJK>
 0x7126	# <CJK>
 0x7136	# <CJK>
 0x713C	# <CJK>
-0x7149	# <CJK>
-0x714C	# <CJK>
 0x714E	# <CJK>
-0x7155	# <CJK>
-0x7156	# <CJK>
 0x7159	# <CJK>
-0x7162	# <CJK>
-0x7164	# <CJK>
-0x7165	# <CJK>
-0x7166	# <CJK>
 0x7167	# <CJK>
 0x7169	# <CJK>
-0x716C	# <CJK>
 0x716E	# <CJK>
-0x717D	# <CJK>
-0x7184	# <CJK>
-0x7188	# <CJK>
 0x718A	# <CJK>
-0x718F	# <CJK>
-0x7194	# <CJK>
-0x7195	# <CJK>
-#0x7199	# <CJK>	# not in kochi fonts
 0x719F	# <CJK>
-0x71A8	# <CJK>
-0x71AC	# <CJK>
 0x71B1	# <CJK>
-0x71B9	# <CJK>
-0x71BE	# <CJK>
 0x71C3	# <CJK>
-0x71C8	# <CJK>
-0x71C9	# <CJK>
-0x71CE	# <CJK>
-0x71D0	# <CJK>
-0x71D2	# <CJK>
-0x71D4	# <CJK>
-0x71D5	# <CJK>
-0x71D7	# <CJK>
-0x71DF	# <CJK>
-0x71E0	# <CJK>
 0x71E5	# <CJK>
-0x71E6	# <CJK>
-0x71E7	# <CJK>
-0x71EC	# <CJK>
-0x71ED	# <CJK>
-0x71EE	# <CJK>
-0x71F5	# <CJK>
-0x71F9	# <CJK>
-0x71FB	# <CJK>
-0x71FC	# <CJK>
-0x71FF	# <CJK>
 0x7206	# <CJK>
-0x720D	# <CJK>
-0x7210	# <CJK>
-0x721B	# <CJK>
-0x7228	# <CJK>
 0x722A	# <CJK>
-0x722C	# <CJK>
-0x722D	# <CJK>
-0x7230	# <CJK>
-0x7232	# <CJK>
 0x7235	# <CJK>
 0x7236	# <CJK>
-0x723A	# <CJK>
-0x723B	# <CJK>
-0x723C	# <CJK>
 0x723D	# <CJK>
-0x723E	# <CJK>
-0x723F	# <CJK>
-0x7240	# <CJK>
-0x7246	# <CJK>
 0x7247	# <CJK>
 0x7248	# <CJK>
-0x724B	# <CJK>
-0x724C	# <CJK>
-0x7252	# <CJK>
-0x7258	# <CJK>
 0x7259	# <CJK>
 0x725B	# <CJK>
-0x725D	# <CJK>
-0x725F	# <CJK>
-0x7261	# <CJK>
-0x7262	# <CJK>
 0x7267	# <CJK>
 0x7269	# <CJK>
 0x7272	# <CJK>
-0x7274	# <CJK>
 0x7279	# <CJK>
-0x727D	# <CJK>
-0x727E	# <CJK>
-0x7280	# <CJK>
-0x7281	# <CJK>
-0x7282	# <CJK>
-0x7287	# <CJK>
-0x7292	# <CJK>
-0x7296	# <CJK>
 0x72A0	# <CJK>
-0x72A2	# <CJK>
-0x72A7	# <CJK>
 0x72AC	# <CJK>
 0x72AF	# <CJK>
-0x72B2	# <CJK>
 0x72B6	# <CJK>
-0x72B9	# <CJK>
 0x72C2	# <CJK>
-0x72C3	# <CJK>
-0x72C4	# <CJK>
-0x72C6	# <CJK>
-0x72CE	# <CJK>
-0x72D0	# <CJK>
-0x72D2	# <CJK>
-0x72D7	# <CJK>
 0x72D9	# <CJK>
-0x72DB	# <CJK>
-0x72E0	# <CJK>
-0x72E1	# <CJK>
-0x72E2	# <CJK>
 0x72E9	# <CJK>
 0x72EC	# <CJK>
 0x72ED	# <CJK>
-0x72F7	# <CJK>
-0x72F8	# <CJK>
-0x72F9	# <CJK>
-0x72FC	# <CJK>
-0x72FD	# <CJK>
-0x730A	# <CJK>
-0x7316	# <CJK>
-0x7317	# <CJK>
 0x731B	# <CJK>
-0x731C	# <CJK>
-0x731D	# <CJK>
 0x731F	# <CJK>
-0x7325	# <CJK>
-0x7329	# <CJK>
-0x732A	# <CJK>
 0x732B	# <CJK>
 0x732E	# <CJK>
-0x732F	# <CJK>
-0x7334	# <CJK>
 0x7336	# <CJK>
-0x7337	# <CJK>
-0x733E	# <CJK>
 0x733F	# <CJK>
 0x7344	# <CJK>
-0x7345	# <CJK>
-0x734E	# <CJK>
-0x734F	# <CJK>
-0x7357	# <CJK>
 0x7363	# <CJK>
-0x7368	# <CJK>
-0x736A	# <CJK>
-0x7370	# <CJK>
 0x7372	# <CJK>
-0x7375	# <CJK>
-0x7378	# <CJK>
-0x737A	# <CJK>
-0x737B	# <CJK>
 0x7384	# <CJK>
 0x7387	# <CJK>
 0x7389	# <CJK>
 0x738B	# <CJK>
-0x7396	# <CJK>
 0x73A9	# <CJK>
-0x73B2	# <CJK>
-0x73B3	# <CJK>
-0x73BB	# <CJK>
-0x73C0	# <CJK>
-0x73C2	# <CJK>
-0x73C8	# <CJK>
-0x73CA	# <CJK>
 0x73CD	# <CJK>
-0x73CE	# <CJK>
-0x73DE	# <CJK>
 0x73E0	# <CJK>
-0x73E5	# <CJK>
-0x73EA	# <CJK>
 0x73ED	# <CJK>
-0x73EE	# <CJK>
-0x73F1	# <CJK>
-0x73F8	# <CJK>
 0x73FE	# <CJK>
 0x7403	# <CJK>
-0x7405	# <CJK>
 0x7406	# <CJK>
-0x7409	# <CJK>
-0x7422	# <CJK>
-0x7425	# <CJK>
-0x7432	# <CJK>
-0x7433	# <CJK>
 0x7434	# <CJK>
-0x7435	# <CJK>
-0x7436	# <CJK>
-0x743A	# <CJK>
-0x743F	# <CJK>
-0x7441	# <CJK>
-0x7455	# <CJK>
-0x7459	# <CJK>
-0x745A	# <CJK>
-0x745B	# <CJK>
-0x745C	# <CJK>
-0x745E	# <CJK>
-0x745F	# <CJK>
 0x7460	# <CJK>
-0x7463	# <CJK>
-0x7464	# <CJK>
-0x7469	# <CJK>
-0x746A	# <CJK>
-0x746F	# <CJK>
-0x7470	# <CJK>
-0x7473	# <CJK>
-0x7476	# <CJK>
-0x747E	# <CJK>
 0x7483	# <CJK>
-0x748B	# <CJK>
-0x749E	# <CJK>
-0x74A2	# <CJK>
 0x74A7	# <CJK>
 0x74B0	# <CJK>
 0x74BD	# <CJK>
-0x74CA	# <CJK>
-0x74CF	# <CJK>
-0x74D4	# <CJK>
-0x74DC	# <CJK>
-0x74E0	# <CJK>
-0x74E2	# <CJK>
-0x74E3	# <CJK>
 0x74E6	# <CJK>
-0x74E7	# <CJK>
-0x74E9	# <CJK>
-0x74EE	# <CJK>
-0x74F0	# <CJK>
-0x74F1	# <CJK>
-0x74F2	# <CJK>
 0x74F6	# <CJK>
-0x74F7	# <CJK>
-0x74F8	# <CJK>
-0x7503	# <CJK>
-0x7504	# <CJK>
-0x7505	# <CJK>
-0x750C	# <CJK>
-0x750D	# <CJK>
-0x750E	# <CJK>
-0x7511	# <CJK>
-0x7513	# <CJK>
-0x7515	# <CJK>
 0x7518	# <CJK>
 0x751A	# <CJK>
-0x751C	# <CJK>
-0x751E	# <CJK>
 0x751F	# <CJK>
 0x7523	# <CJK>
-0x7525	# <CJK>
-0x7526	# <CJK>
 0x7528	# <CJK>
-0x752B	# <CJK>
-0x752C	# <CJK>
 0x7530	# <CJK>
 0x7531	# <CJK>
 0x7532	# <CJK>
 0x7533	# <CJK>
 0x7537	# <CJK>
-0x7538	# <CJK>
 0x753A	# <CJK>
 0x753B	# <CJK>
-0x753C	# <CJK>
-0x7544	# <CJK>
-0x7546	# <CJK>
-0x7549	# <CJK>
-0x754A	# <CJK>
-0x754B	# <CJK>
 0x754C	# <CJK>
-0x754D	# <CJK>
 0x754F	# <CJK>
 0x7551	# <CJK>
 0x7554	# <CJK>
 0x7559	# <CJK>
-0x755A	# <CJK>
-0x755B	# <CJK>
 0x755C	# <CJK>
 0x755D	# <CJK>
-0x7560	# <CJK>
-0x7562	# <CJK>
-0x7564	# <CJK>
 0x7565	# <CJK>
-0x7566	# <CJK>
-0x7567	# <CJK>
-0x7569	# <CJK>
 0x756A	# <CJK>
-0x756B	# <CJK>
-0x756D	# <CJK>
 0x7570	# <CJK>
 0x7573	# <CJK>
-0x7574	# <CJK>
-0x7576	# <CJK>
-0x7577	# <CJK>
-0x7578	# <CJK>
 0x757F	# <CJK>
-0x7582	# <CJK>
-0x7586	# <CJK>
-0x7587	# <CJK>
-0x7589	# <CJK>
-0x758A	# <CJK>
-0x758B	# <CJK>
 0x758E	# <CJK>
-0x758F	# <CJK>
 0x7591	# <CJK>
-0x7594	# <CJK>
-0x759A	# <CJK>
-0x759D	# <CJK>
-0x75A3	# <CJK>
-0x75A5	# <CJK>
 0x75AB	# <CJK>
-0x75B1	# <CJK>
 0x75B2	# <CJK>
-0x75B3	# <CJK>
-0x75B5	# <CJK>
-0x75B8	# <CJK>
-0x75B9	# <CJK>
-0x75BC	# <CJK>
-0x75BD	# <CJK>
 0x75BE	# <CJK>
-0x75C2	# <CJK>
-0x75C3	# <CJK>
 0x75C5	# <CJK>
 0x75C7	# <CJK>
-0x75CA	# <CJK>
-0x75CD	# <CJK>
-0x75D2	# <CJK>
-0x75D4	# <CJK>
 0x75D5	# <CJK>
 0x75D8	# <CJK>
-0x75D9	# <CJK>
 0x75DB	# <CJK>
-0x75DE	# <CJK>
 0x75E2	# <CJK>
-0x75E3	# <CJK>
 0x75E9	# <CJK>
-0x75F0	# <CJK>
-0x75F2	# <CJK>
-0x75F3	# <CJK>
 0x75F4	# <CJK>
-0x75FA	# <CJK>
-0x75FC	# <CJK>
-0x75FE	# <CJK>
-0x75FF	# <CJK>
-0x7601	# <CJK>
-0x7609	# <CJK>
-0x760B	# <CJK>
 0x760D	# <CJK>
-0x761F	# <CJK>
-0x7620	# <CJK>
-0x7621	# <CJK>
-0x7622	# <CJK>
-0x7624	# <CJK>
-0x7627	# <CJK>
-0x7630	# <CJK>
-0x7634	# <CJK>
-0x763B	# <CJK>
 0x7642	# <CJK>
-0x7646	# <CJK>
-0x7647	# <CJK>
-0x7648	# <CJK>
-0x764C	# <CJK>
 0x7652	# <CJK>
 0x7656	# <CJK>
-0x7658	# <CJK>
-0x765C	# <CJK>
-0x7661	# <CJK>
-0x7662	# <CJK>
-0x7667	# <CJK>
-0x7668	# <CJK>
-0x7669	# <CJK>
-0x766A	# <CJK>
-0x766C	# <CJK>
-0x7670	# <CJK>
-0x7672	# <CJK>
-0x7676	# <CJK>
-0x7678	# <CJK>
 0x767A	# <CJK>
 0x767B	# <CJK>
-0x767C	# <CJK>
 0x767D	# <CJK>
 0x767E	# <CJK>
-0x7680	# <CJK>
-0x7683	# <CJK>
 0x7684	# <CJK>
 0x7686	# <CJK>
 0x7687	# <CJK>
-0x7688	# <CJK>
-0x768B	# <CJK>
-0x768E	# <CJK>
-0x7690	# <CJK>
-0x7693	# <CJK>
-0x7696	# <CJK>
-0x7699	# <CJK>
-0x769A	# <CJK>
 0x76AE	# <CJK>
-0x76B0	# <CJK>
-0x76B4	# <CJK>
-0x76B7	# <CJK>
-0x76B8	# <CJK>
-0x76B9	# <CJK>
-0x76BA	# <CJK>
 0x76BF	# <CJK>
-0x76C2	# <CJK>
-0x76C3	# <CJK>
 0x76C6	# <CJK>
-0x76C8	# <CJK>
 0x76CA	# <CJK>
-0x76CD	# <CJK>
-0x76D2	# <CJK>
-0x76D6	# <CJK>
 0x76D7	# <CJK>
 0x76DB	# <CJK>
-0x76DC	# <CJK>
-0x76DE	# <CJK>
 0x76DF	# <CJK>
-0x76E1	# <CJK>
 0x76E3	# <CJK>
 0x76E4	# <CJK>
-0x76E5	# <CJK>
-0x76E7	# <CJK>
-0x76EA	# <CJK>
 0x76EE	# <CJK>
 0x76F2	# <CJK>
 0x76F4	# <CJK>
 0x76F8	# <CJK>
-0x76FB	# <CJK>
 0x76FE	# <CJK>
 0x7701	# <CJK>
-0x7704	# <CJK>
-0x7707	# <CJK>
-0x7708	# <CJK>
 0x7709	# <CJK>
 0x770B	# <CJK>
 0x770C	# <CJK>
-0x771B	# <CJK>
-0x771E	# <CJK>
 0x771F	# <CJK>
 0x7720	# <CJK>
-0x7724	# <CJK>
-0x7725	# <CJK>
-0x7726	# <CJK>
-0x7729	# <CJK>
-0x7737	# <CJK>
-0x7738	# <CJK>
 0x773A	# <CJK>
 0x773C	# <CJK>
 0x7740	# <CJK>
-0x7747	# <CJK>
-0x775A	# <CJK>
-0x775B	# <CJK>
 0x7761	# <CJK>
 0x7763	# <CJK>
-0x7765	# <CJK>
 0x7766	# <CJK>
-0x7768	# <CJK>
-0x776B	# <CJK>
-0x7779	# <CJK>
-0x777E	# <CJK>
-0x777F	# <CJK>
-0x778B	# <CJK>
-0x778E	# <CJK>
-0x7791	# <CJK>
-0x779E	# <CJK>
-0x77A0	# <CJK>
-0x77A5	# <CJK>
 0x77AC	# <CJK>
 0x77AD	# <CJK>
-0x77B0	# <CJK>
 0x77B3	# <CJK>
-0x77B6	# <CJK>
-0x77B9	# <CJK>
-0x77BB	# <CJK>
-0x77BC	# <CJK>
-0x77BD	# <CJK>
-0x77BF	# <CJK>
-0x77C7	# <CJK>
-0x77CD	# <CJK>
-0x77D7	# <CJK>
-0x77DA	# <CJK>
 0x77DB	# <CJK>
-0x77DC	# <CJK>
 0x77E2	# <CJK>
-0x77E3	# <CJK>
 0x77E5	# <CJK>
-0x77E7	# <CJK>
-0x77E9	# <CJK>
 0x77ED	# <CJK>
-0x77EE	# <CJK>
 0x77EF	# <CJK>
 0x77F3	# <CJK>
-0x77FC	# <CJK>
 0x7802	# <CJK>
-0x780C	# <CJK>
-0x7812	# <CJK>
 0x7814	# <CJK>
 0x7815	# <CJK>
-0x7820	# <CJK>
-0x7825	# <CJK>
-0x7826	# <CJK>
-0x7827	# <CJK>
 0x7832	# <CJK>
 0x7834	# <CJK>
-0x783A	# <CJK>
-0x783F	# <CJK>
-0x7845	# <CJK>
 0x785D	# <CJK>
 0x786B	# <CJK>
 0x786C	# <CJK>
-0x786F	# <CJK>
-0x7872	# <CJK>
-0x7874	# <CJK>
-0x787C	# <CJK>
 0x7881	# <CJK>
-0x7886	# <CJK>
-0x7887	# <CJK>
-0x788C	# <CJK>
-0x788D	# <CJK>
-0x788E	# <CJK>
 0x7891	# <CJK>
-0x7893	# <CJK>
-0x7895	# <CJK>
-0x7897	# <CJK>
-0x789A	# <CJK>
-0x78A3	# <CJK>
-0x78A7	# <CJK>
-0x78A9	# <CJK>
-0x78AA	# <CJK>
-0x78AF	# <CJK>
-0x78B5	# <CJK>
 0x78BA	# <CJK>
-0x78BC	# <CJK>
-0x78BE	# <CJK>
 0x78C1	# <CJK>
-0x78C5	# <CJK>
-0x78C6	# <CJK>
-0x78CA	# <CJK>
-0x78CB	# <CJK>
-0x78D0	# <CJK>
-0x78D1	# <CJK>
-0x78D4	# <CJK>
-0x78DA	# <CJK>
-0x78E7	# <CJK>
 0x78E8	# <CJK>
-0x78EC	# <CJK>
-0x78EF	# <CJK>
-0x78F4	# <CJK>
-0x78FD	# <CJK>
 0x7901	# <CJK>
-0x7907	# <CJK>
 0x790E	# <CJK>
-0x7911	# <CJK>
-0x7912	# <CJK>
-0x7919	# <CJK>
-0x7926	# <CJK>
-0x792A	# <CJK>
-0x792B	# <CJK>
-0x792C	# <CJK>
 0x793A	# <CJK>
 0x793C	# <CJK>
 0x793E	# <CJK>
-0x7940	# <CJK>
-0x7941	# <CJK>
-0x7947	# <CJK>
 0x7948	# <CJK>
 0x7949	# <CJK>
-0x7950	# <CJK>
-0x7953	# <CJK>
-0x7955	# <CJK>
 0x7956	# <CJK>
-0x7957	# <CJK>
-0x795A	# <CJK>
 0x795D	# <CJK>
 0x795E	# <CJK>
-0x795F	# <CJK>
-0x7960	# <CJK>
-0x7962	# <CJK>
 0x7965	# <CJK>
 0x7968	# <CJK>
 0x796D	# <CJK>
-0x7977	# <CJK>
-0x797A	# <CJK>
-0x797F	# <CJK>
-0x7980	# <CJK>
 0x7981	# <CJK>
-0x7984	# <CJK>
 0x7985	# <CJK>
-0x798A	# <CJK>
 0x798D	# <CJK>
-0x798E	# <CJK>
 0x798F	# <CJK>
-0x799D	# <CJK>
-0x79A6	# <CJK>
-0x79A7	# <CJK>
-0x79AA	# <CJK>
-0x79AE	# <CJK>
-0x79B0	# <CJK>
-0x79B3	# <CJK>
-0x79B9	# <CJK>
-0x79BA	# <CJK>
-0x79BD	# <CJK>
-0x79BE	# <CJK>
-0x79BF	# <CJK>
 0x79C0	# <CJK>
 0x79C1	# <CJK>
-0x79C9	# <CJK>
 0x79CB	# <CJK>
 0x79D1	# <CJK>
 0x79D2	# <CJK>
-0x79D5	# <CJK>
 0x79D8	# <CJK>
 0x79DF	# <CJK>
-0x79E1	# <CJK>
-0x79E3	# <CJK>
-0x79E4	# <CJK>
-0x79E6	# <CJK>
-0x79E7	# <CJK>
 0x79E9	# <CJK>
-0x79EC	# <CJK>
 0x79F0	# <CJK>
 0x79FB	# <CJK>
-0x7A00	# <CJK>
-0x7A08	# <CJK>
 0x7A0B	# <CJK>
-0x7A0D	# <CJK>
 0x7A0E	# <CJK>
-0x7A14	# <CJK>
-0x7A17	# <CJK>
-0x7A18	# <CJK>
-0x7A19	# <CJK>
 0x7A1A	# <CJK>
-0x7A1C	# <CJK>
-0x7A1F	# <CJK>
-0x7A20	# <CJK>
 0x7A2E	# <CJK>
-0x7A31	# <CJK>
 0x7A32	# <CJK>
-0x7A37	# <CJK>
-0x7A3B	# <CJK>
 0x7A3C	# <CJK>
 0x7A3D	# <CJK>
-0x7A3E	# <CJK>
 0x7A3F	# <CJK>
 0x7A40	# <CJK>
 0x7A42	# <CJK>
-0x7A43	# <CJK>
-0x7A46	# <CJK>
-0x7A49	# <CJK>
 0x7A4D	# <CJK>
-0x7A4E	# <CJK>
 0x7A4F	# <CJK>
-0x7A50	# <CJK>
-0x7A57	# <CJK>
-0x7A61	# <CJK>
-0x7A62	# <CJK>
-0x7A63	# <CJK>
-0x7A69	# <CJK>
 0x7A6B	# <CJK>
-0x7A70	# <CJK>
 0x7A74	# <CJK>
 0x7A76	# <CJK>
-0x7A79	# <CJK>
 0x7A7A	# <CJK>
-0x7A7D	# <CJK>
-0x7A7F	# <CJK>
 0x7A81	# <CJK>
 0x7A83	# <CJK>
-0x7A84	# <CJK>
-0x7A88	# <CJK>
 0x7A92	# <CJK>
 0x7A93	# <CJK>
-0x7A95	# <CJK>
-0x7A96	# <CJK>
-0x7A97	# <CJK>
-0x7A98	# <CJK>
 0x7A9F	# <CJK>
-0x7AA9	# <CJK>
-0x7AAA	# <CJK>
 0x7AAE	# <CJK>
 0x7AAF	# <CJK>
-0x7AB0	# <CJK>
-0x7AB6	# <CJK>
-0x7ABA	# <CJK>
-0x7ABF	# <CJK>
-0x7AC3	# <CJK>
-0x7AC4	# <CJK>
-0x7AC5	# <CJK>
-0x7AC7	# <CJK>
-0x7AC8	# <CJK>
-0x7ACA	# <CJK>
 0x7ACB	# <CJK>
-0x7ACD	# <CJK>
-0x7ACF	# <CJK>
-0x7AD2	# <CJK>
-0x7AD3	# <CJK>
-0x7AD5	# <CJK>
-0x7AD9	# <CJK>
-0x7ADA	# <CJK>
 0x7ADC	# <CJK>
-0x7ADD	# <CJK>
-0x7ADF	# <CJK>
 0x7AE0	# <CJK>
-0x7AE1	# <CJK>
-0x7AE2	# <CJK>
-0x7AE3	# <CJK>
 0x7AE5	# <CJK>
-0x7AE6	# <CJK>
-0x7AEA	# <CJK>
-0x7AED	# <CJK>
 0x7AEF	# <CJK>
-0x7AF0	# <CJK>
 0x7AF6	# <CJK>
-0x7AF8	# <CJK>
 0x7AF9	# <CJK>
-0x7AFA	# <CJK>
-0x7AFF	# <CJK>
-0x7B02	# <CJK>
-0x7B04	# <CJK>
-0x7B06	# <CJK>
-0x7B08	# <CJK>
-0x7B0A	# <CJK>
-0x7B0B	# <CJK>
-0x7B0F	# <CJK>
 0x7B11	# <CJK>
-0x7B18	# <CJK>
-0x7B19	# <CJK>
 0x7B1B	# <CJK>
-0x7B1E	# <CJK>
-0x7B20	# <CJK>
-0x7B25	# <CJK>
 0x7B26	# <CJK>
-0x7B28	# <CJK>
 0x7B2C	# <CJK>
-0x7B33	# <CJK>
-0x7B35	# <CJK>
-0x7B36	# <CJK>
-0x7B39	# <CJK>
-0x7B45	# <CJK>
 0x7B46	# <CJK>
-0x7B48	# <CJK>
 0x7B49	# <CJK>
 0x7B4B	# <CJK>
-0x7B4C	# <CJK>
-0x7B4D	# <CJK>
-0x7B4F	# <CJK>
-0x7B50	# <CJK>
-0x7B51	# <CJK>
 0x7B52	# <CJK>
 0x7B54	# <CJK>
 0x7B56	# <CJK>
-0x7B5D	# <CJK>
-0x7B65	# <CJK>
-0x7B67	# <CJK>
-0x7B6C	# <CJK>
-0x7B6E	# <CJK>
-0x7B70	# <CJK>
-0x7B71	# <CJK>
-0x7B74	# <CJK>
-0x7B75	# <CJK>
-0x7B7A	# <CJK>
-0x7B86	# <CJK>
 0x7B87	# <CJK>
 0x7B8B	# <CJK>
-0x7B8D	# <CJK>
-0x7B8F	# <CJK>
-0x7B92	# <CJK>
-0x7B94	# <CJK>
-0x7B95	# <CJK>
 0x7B97	# <CJK>
-0x7B98	# <CJK>
-0x7B99	# <CJK>
-0x7B9A	# <CJK>
-0x7B9C	# <CJK>
-0x7B9D	# <CJK>
-0x7B9F	# <CJK>
 0x7BA1	# <CJK>
-0x7BAA	# <CJK>
-0x7BAD	# <CJK>
 0x7BB1	# <CJK>
-0x7BB4	# <CJK>
 0x7BB8	# <CJK>
 0x7BC0	# <CJK>
-0x7BC1	# <CJK>
 0x7BC4	# <CJK>
-0x7BC6	# <CJK>
-0x7BC7	# <CJK>
 0x7BC9	# <CJK>
-0x7BCB	# <CJK>
-0x7BCC	# <CJK>
-0x7BCF	# <CJK>
-0x7BDD	# <CJK>
-0x7BE0	# <CJK>
 0x7BE4	# <CJK>
-0x7BE5	# <CJK>
-0x7BE6	# <CJK>
-0x7BE9	# <CJK>
-0x7BED	# <CJK>
-0x7BF3	# <CJK>
-0x7BF6	# <CJK>
-0x7BF7	# <CJK>
-0x7C00	# <CJK>
-0x7C07	# <CJK>
-0x7C0D	# <CJK>
-0x7C11	# <CJK>
-0x7C12	# <CJK>
-0x7C13	# <CJK>
-0x7C14	# <CJK>
-0x7C17	# <CJK>
-0x7C1F	# <CJK>
 0x7C21	# <CJK>
-0x7C23	# <CJK>
-0x7C27	# <CJK>
-0x7C2A	# <CJK>
-0x7C2B	# <CJK>
-0x7C37	# <CJK>
-0x7C38	# <CJK>
-0x7C3D	# <CJK>
-0x7C3E	# <CJK>
 0x7C3F	# <CJK>
-0x7C40	# <CJK>
-0x7C43	# <CJK>
-0x7C4C	# <CJK>
 0x7C4D	# <CJK>
-0x7C4F	# <CJK>
-0x7C50	# <CJK>
-0x7C54	# <CJK>
-0x7C56	# <CJK>
-0x7C58	# <CJK>
-0x7C5F	# <CJK>
 0x7C60	# <CJK>
-0x7C64	# <CJK>
-0x7C65	# <CJK>
-0x7C6C	# <CJK>
 0x7C73	# <CJK>
-0x7C75	# <CJK>
-0x7C7E	# <CJK>
-0x7C81	# <CJK>
-0x7C82	# <CJK>
-0x7C83	# <CJK>
 0x7C89	# <CJK>
 0x7C8B	# <CJK>
-0x7C8D	# <CJK>
-0x7C90	# <CJK>
 0x7C92	# <CJK>
-0x7C95	# <CJK>
 0x7C97	# <CJK>
 0x7C98	# <CJK>
 0x7C9B	# <CJK>
-0x7C9F	# <CJK>
-0x7CA1	# <CJK>
-0x7CA2	# <CJK>
-0x7CA4	# <CJK>
-0x7CA5	# <CJK>
 0x7CA7	# <CJK>
-0x7CA8	# <CJK>
-0x7CAB	# <CJK>
-0x7CAD	# <CJK>
-0x7CAE	# <CJK>
-0x7CB1	# <CJK>
-0x7CB2	# <CJK>
-0x7CB3	# <CJK>
-0x7CB9	# <CJK>
-0x7CBD	# <CJK>
 0x7CBE	# <CJK>
-0x7CC0	# <CJK>
-0x7CC2	# <CJK>
-0x7CC5	# <CJK>
-0x7CCA	# <CJK>
-0x7CCE	# <CJK>
-0x7CD2	# <CJK>
 0x7CD6	# <CJK>
-0x7CD8	# <CJK>
-0x7CDC	# <CJK>
-0x7CDE	# <CJK>
-0x7CDF	# <CJK>
-0x7CE0	# <CJK>
-0x7CE2	# <CJK>
 0x7CE7	# <CJK>
-0x7CEF	# <CJK>
-0x7CF2	# <CJK>
-0x7CF4	# <CJK>
-0x7CF6	# <CJK>
 0x7CF8	# <CJK>
-0x7CFA	# <CJK>
 0x7CFB	# <CJK>
 0x7CFE	# <CJK>
 0x7D00	# <CJK>
-0x7D02	# <CJK>
 0x7D04	# <CJK>
 0x7D05	# <CJK>
-0x7D06	# <CJK>
-0x7D0A	# <CJK>
 0x7D0B	# <CJK>
 0x7D0D	# <CJK>
-0x7D10	# <CJK>
 0x7D14	# <CJK>
-0x7D15	# <CJK>
-0x7D17	# <CJK>
-0x7D18	# <CJK>
 0x7D19	# <CJK>
 0x7D1A	# <CJK>
 0x7D1B	# <CJK>
-0x7D1C	# <CJK>
 0x7D20	# <CJK>
 0x7D21	# <CJK>
 0x7D22	# <CJK>
 0x7D2B	# <CJK>
-0x7D2C	# <CJK>
-0x7D2E	# <CJK>
 0x7D2F	# <CJK>
 0x7D30	# <CJK>
-0x7D32	# <CJK>
 0x7D33	# <CJK>
-0x7D35	# <CJK>
 0x7D39	# <CJK>
 0x7D3A	# <CJK>
-0x7D3F	# <CJK>
 0x7D42	# <CJK>
-0x7D43	# <CJK>
 0x7D44	# <CJK>
-0x7D45	# <CJK>
-0x7D46	# <CJK>
-0x7D4B	# <CJK>
 0x7D4C	# <CJK>
-0x7D4E	# <CJK>
-0x7D4F	# <CJK>
 0x7D50	# <CJK>
-0x7D56	# <CJK>
-0x7D5B	# <CJK>
 0x7D5E	# <CJK>
 0x7D61	# <CJK>
-0x7D62	# <CJK>
-0x7D63	# <CJK>
 0x7D66	# <CJK>
-0x7D68	# <CJK>
-0x7D6E	# <CJK>
 0x7D71	# <CJK>
-0x7D72	# <CJK>
-0x7D73	# <CJK>
 0x7D75	# <CJK>
 0x7D76	# <CJK>
 0x7D79	# <CJK>
-0x7D7D	# <CJK>
-0x7D89	# <CJK>
-0x7D8F	# <CJK>
-0x7D93	# <CJK>
 0x7D99	# <CJK>
 0x7D9A	# <CJK>
-0x7D9B	# <CJK>
-0x7D9C	# <CJK>
-0x7D9F	# <CJK>
-0x7DA2	# <CJK>
-0x7DA3	# <CJK>
-0x7DAB	# <CJK>
-0x7DAC	# <CJK>
 0x7DAD	# <CJK>
-0x7DAE	# <CJK>
-0x7DAF	# <CJK>
-0x7DB0	# <CJK>
 0x7DB1	# <CJK>
 0x7DB2	# <CJK>
-0x7DB4	# <CJK>
-0x7DB5	# <CJK>
-0x7DB8	# <CJK>
-0x7DBA	# <CJK>
 0x7DBB	# <CJK>
-0x7DBD	# <CJK>
-0x7DBE	# <CJK>
 0x7DBF	# <CJK>
-0x7DC7	# <CJK>
 0x7DCA	# <CJK>
-0x7DCB	# <CJK>
 0x7DCF	# <CJK>
 0x7DD1	# <CJK>
 0x7DD2	# <CJK>
-0x7DD5	# <CJK>
-0x7DD8	# <CJK>
 0x7DDA	# <CJK>
-0x7DDC	# <CJK>
-0x7DDD	# <CJK>
-0x7DDE	# <CJK>
 0x7DE0	# <CJK>
-0x7DE1	# <CJK>
-0x7DE4	# <CJK>
 0x7DE8	# <CJK>
 0x7DE9	# <CJK>
-0x7DEC	# <CJK>
 0x7DEF	# <CJK>
-0x7DF2	# <CJK>
 0x7DF4	# <CJK>
 0x7DFB	# <CJK>
 0x7E01	# <CJK>
 0x7E04	# <CJK>
-0x7E05	# <CJK>
-0x7E09	# <CJK>
-0x7E0A	# <CJK>
-0x7E0B	# <CJK>
-0x7E12	# <CJK>
 0x7E1B	# <CJK>
-0x7E1E	# <CJK>
-0x7E1F	# <CJK>
-0x7E21	# <CJK>
-0x7E22	# <CJK>
-0x7E23	# <CJK>
 0x7E26	# <CJK>
 0x7E2B	# <CJK>
 0x7E2E	# <CJK>
-0x7E31	# <CJK>
-0x7E32	# <CJK>
-0x7E35	# <CJK>
-0x7E37	# <CJK>
-0x7E39	# <CJK>
-0x7E3A	# <CJK>
-0x7E3B	# <CJK>
-0x7E3D	# <CJK>
 0x7E3E	# <CJK>
 0x7E41	# <CJK>
-0x7E43	# <CJK>
-0x7E46	# <CJK>
 0x7E4A	# <CJK>
-0x7E4B	# <CJK>
-0x7E4D	# <CJK>
 0x7E54	# <CJK>
 0x7E55	# <CJK>
-0x7E56	# <CJK>
-0x7E59	# <CJK>
-0x7E5A	# <CJK>
-0x7E5D	# <CJK>
-0x7E5E	# <CJK>
-0x7E66	# <CJK>
-0x7E67	# <CJK>
-0x7E69	# <CJK>
-0x7E6A	# <CJK>
 0x7E6D	# <CJK>
 0x7E70	# <CJK>
-0x7E79	# <CJK>
-0x7E7B	# <CJK>
-0x7E7C	# <CJK>
-0x7E7D	# <CJK>
-0x7E7F	# <CJK>
-0x7E82	# <CJK>
-0x7E83	# <CJK>
-0x7E88	# <CJK>
-0x7E89	# <CJK>
-0x7E8C	# <CJK>
-0x7E8E	# <CJK>
-0x7E8F	# <CJK>
-0x7E90	# <CJK>
-0x7E92	# <CJK>
-0x7E93	# <CJK>
-0x7E94	# <CJK>
-0x7E96	# <CJK>
-0x7E9B	# <CJK>
-0x7E9C	# <CJK>
 0x7F36	# <CJK>
-0x7F38	# <CJK>
-0x7F3A	# <CJK>
-0x7F45	# <CJK>
-0x7F4C	# <CJK>
-0x7F4D	# <CJK>
-0x7F4E	# <CJK>
-0x7F50	# <CJK>
-0x7F51	# <CJK>
-0x7F54	# <CJK>
-0x7F55	# <CJK>
-0x7F58	# <CJK>
-0x7F5F	# <CJK>
-0x7F60	# <CJK>
-0x7F67	# <CJK>
-0x7F68	# <CJK>
-0x7F69	# <CJK>
 0x7F6A	# <CJK>
-0x7F6B	# <CJK>
 0x7F6E	# <CJK>
 0x7F70	# <CJK>
 0x7F72	# <CJK>
 0x7F75	# <CJK>
 0x7F77	# <CJK>
-0x7F78	# <CJK>
-0x7F79	# <CJK>
-0x7F82	# <CJK>
-0x7F83	# <CJK>
 0x7F85	# <CJK>
-0x7F86	# <CJK>
-0x7F87	# <CJK>
-0x7F88	# <CJK>
 0x7F8A	# <CJK>
-0x7F8C	# <CJK>
 0x7F8E	# <CJK>
-0x7F94	# <CJK>
-0x7F9A	# <CJK>
-0x7F9D	# <CJK>
 0x7F9E	# <CJK>
-0x7FA3	# <CJK>
 0x7FA4	# <CJK>
 0x7FA8	# <CJK>
 0x7FA9	# <CJK>
-0x7FAE	# <CJK>
-0x7FAF	# <CJK>
-0x7FB2	# <CJK>
-0x7FB6	# <CJK>
-0x7FB8	# <CJK>
-0x7FB9	# <CJK>
 0x7FBD	# <CJK>
 0x7FC1	# <CJK>
-0x7FC5	# <CJK>
-0x7FC6	# <CJK>
-0x7FCA	# <CJK>
 0x7FCC	# <CJK>
 0x7FD2	# <CJK>
-0x7FD4	# <CJK>
-0x7FD5	# <CJK>
-0x7FE0	# <CJK>
-0x7FE1	# <CJK>
-0x7FE6	# <CJK>
-0x7FE9	# <CJK>
-0x7FEB	# <CJK>
-0x7FF0	# <CJK>
-0x7FF3	# <CJK>
-0x7FF9	# <CJK>
 0x7FFB	# <CJK>
 0x7FFC	# <CJK>
-0x8000	# <CJK>
 0x8001	# <CJK>
 0x8003	# <CJK>
-0x8004	# <CJK>
 0x8005	# <CJK>
-0x8006	# <CJK>
-0x800B	# <CJK>
-0x800C	# <CJK>
 0x8010	# <CJK>
-0x8012	# <CJK>
 0x8015	# <CJK>
 0x8017	# <CJK>
-0x8018	# <CJK>
-0x8019	# <CJK>
-0x801C	# <CJK>
-0x8021	# <CJK>
-0x8028	# <CJK>
 0x8033	# <CJK>
-0x8036	# <CJK>
-0x803B	# <CJK>
-0x803D	# <CJK>
-0x803F	# <CJK>
-0x8046	# <CJK>
-0x804A	# <CJK>
-0x8052	# <CJK>
 0x8056	# <CJK>
-0x8058	# <CJK>
-0x805A	# <CJK>
 0x805E	# <CJK>
-0x805F	# <CJK>
-0x8061	# <CJK>
-0x8062	# <CJK>
-0x8068	# <CJK>
-0x806F	# <CJK>
-0x8070	# <CJK>
-0x8072	# <CJK>
-0x8073	# <CJK>
 0x8074	# <CJK>
-0x8076	# <CJK>
 0x8077	# <CJK>
-0x8079	# <CJK>
-0x807D	# <CJK>
-0x807E	# <CJK>
-0x807F	# <CJK>
-0x8084	# <CJK>
-0x8085	# <CJK>
-0x8086	# <CJK>
-0x8087	# <CJK>
 0x8089	# <CJK>
-0x808B	# <CJK>
 0x808C	# <CJK>
-0x8093	# <CJK>
 0x8096	# <CJK>
 0x8098	# <CJK>
-0x809A	# <CJK>
-0x809B	# <CJK>
 0x809D	# <CJK>
 0x80A1	# <CJK>
 0x80A2	# <CJK>
 0x80A5	# <CJK>
 0x80A9	# <CJK>
 0x80AA	# <CJK>
-0x80AC	# <CJK>
-0x80AD	# <CJK>
 0x80AF	# <CJK>
-0x80B1	# <CJK>
 0x80B2	# <CJK>
-0x80B4	# <CJK>
 0x80BA	# <CJK>
 0x80C3	# <CJK>
-0x80C4	# <CJK>
 0x80C6	# <CJK>
 0x80CC	# <CJK>
 0x80CE	# <CJK>
-0x80D6	# <CJK>
-0x80D9	# <CJK>
-0x80DA	# <CJK>
-0x80DB	# <CJK>
-0x80DD	# <CJK>
 0x80DE	# <CJK>
-0x80E1	# <CJK>
-0x80E4	# <CJK>
-0x80E5	# <CJK>
-0x80EF	# <CJK>
-0x80F1	# <CJK>
 0x80F4	# <CJK>
 0x80F8	# <CJK>
-0x80FC	# <CJK>
 0x80FD	# <CJK>
 0x8102	# <CJK>
 0x8105	# <CJK>
-0x8106	# <CJK>
 0x8107	# <CJK>
 0x8108	# <CJK>
-0x8109	# <CJK>
 0x810A	# <CJK>
 0x811A	# <CJK>
-0x811B	# <CJK>
-0x8123	# <CJK>
-0x8129	# <CJK>
-0x812F	# <CJK>
 0x8131	# <CJK>
 0x8133	# <CJK>
-0x8139	# <CJK>
-0x813E	# <CJK>
-0x8146	# <CJK>
-0x814B	# <CJK>
 0x814E	# <CJK>
 0x8150	# <CJK>
-0x8151	# <CJK>
-0x8153	# <CJK>
-0x8154	# <CJK>
 0x8155	# <CJK>
-0x815F	# <CJK>
-0x8165	# <CJK>
-0x8166	# <CJK>
 0x816B	# <CJK>
-0x816E	# <CJK>
 0x8170	# <CJK>
-0x8171	# <CJK>
-0x8174	# <CJK>
 0x8178	# <CJK>
 0x8179	# <CJK>
 0x817A	# <CJK>
-0x817F	# <CJK>
-0x8180	# <CJK>
-0x8182	# <CJK>
-0x8183	# <CJK>
-0x8188	# <CJK>
-0x818A	# <CJK>
-0x818F	# <CJK>
-0x8193	# <CJK>
-0x8195	# <CJK>
 0x819A	# <CJK>
 0x819C	# <CJK>
 0x819D	# <CJK>
-0x81A0	# <CJK>
-0x81A3	# <CJK>
-0x81A4	# <CJK>
 0x81A8	# <CJK>
-0x81A9	# <CJK>
-0x81B0	# <CJK>
 0x81B3	# <CJK>
-0x81B5	# <CJK>
-0x81B8	# <CJK>
-0x81BA	# <CJK>
-0x81BD	# <CJK>
-0x81BE	# <CJK>
-0x81BF	# <CJK>
-0x81C0	# <CJK>
-0x81C2	# <CJK>
 0x81C6	# <CJK>
-0x81C8	# <CJK>
-0x81C9	# <CJK>
-0x81CD	# <CJK>
-0x81D1	# <CJK>
 0x81D3	# <CJK>
-0x81D8	# <CJK>
-0x81D9	# <CJK>
-0x81DA	# <CJK>
-0x81DF	# <CJK>
-0x81E0	# <CJK>
 0x81E3	# <CJK>
-0x81E5	# <CJK>
-0x81E7	# <CJK>
 0x81E8	# <CJK>
 0x81EA	# <CJK>
 0x81ED	# <CJK>
 0x81F3	# <CJK>
 0x81F4	# <CJK>
-0x81FA	# <CJK>
-0x81FB	# <CJK>
 0x81FC	# <CJK>
-0x81FE	# <CJK>
-0x8201	# <CJK>
-0x8202	# <CJK>
-0x8205	# <CJK>
-0x8207	# <CJK>
 0x8208	# <CJK>
-0x8209	# <CJK>
-0x820A	# <CJK>
 0x820C	# <CJK>
-0x820D	# <CJK>
 0x820E	# <CJK>
-0x8210	# <CJK>
-0x8212	# <CJK>
-0x8216	# <CJK>
 0x8217	# <CJK>
-0x8218	# <CJK>
-0x821B	# <CJK>
-0x821C	# <CJK>
 0x821E	# <CJK>
 0x821F	# <CJK>
-0x8229	# <CJK>
 0x822A	# <CJK>
-0x822B	# <CJK>
 0x822C	# <CJK>
-0x822E	# <CJK>
-0x8233	# <CJK>
-0x8235	# <CJK>
 0x8236	# <CJK>
 0x8237	# <CJK>
-0x8238	# <CJK>
 0x8239	# <CJK>
-0x8240	# <CJK>
 0x8247	# <CJK>
-0x8258	# <CJK>
-0x8259	# <CJK>
-0x825A	# <CJK>
-0x825D	# <CJK>
-0x825F	# <CJK>
-0x8262	# <CJK>
-0x8264	# <CJK>
 0x8266	# <CJK>
-0x8268	# <CJK>
-0x826A	# <CJK>
-0x826B	# <CJK>
-0x826E	# <CJK>
 0x826F	# <CJK>
-0x8271	# <CJK>
 0x8272	# <CJK>
 0x8276	# <CJK>
-0x8277	# <CJK>
-0x8278	# <CJK>
-0x827E	# <CJK>
 0x828B	# <CJK>
-0x828D	# <CJK>
-0x8292	# <CJK>
-0x8299	# <CJK>
 0x829D	# <CJK>
-0x829F	# <CJK>
-0x82A5	# <CJK>
-0x82A6	# <CJK>
-0x82AB	# <CJK>
-0x82AC	# <CJK>
-0x82AD	# <CJK>
 0x82AF	# <CJK>
 0x82B1	# <CJK>
 0x82B3	# <CJK>
 0x82B8	# <CJK>
-0x82B9	# <CJK>
-0x82BB	# <CJK>
 0x82BD	# <CJK>
-0x82C5	# <CJK>
-0x82D1	# <CJK>
-0x82D2	# <CJK>
-0x82D3	# <CJK>
-0x82D4	# <CJK>
 0x82D7	# <CJK>
-0x82D9	# <CJK>
 0x82DB	# <CJK>
-0x82DC	# <CJK>
-0x82DE	# <CJK>
-0x82DF	# <CJK>
-0x82E1	# <CJK>
-0x82E3	# <CJK>
 0x82E5	# <CJK>
 0x82E6	# <CJK>
-0x82E7	# <CJK>
-0x82EB	# <CJK>
 0x82F1	# <CJK>
-0x82F3	# <CJK>
-0x82F4	# <CJK>
-0x82F9	# <CJK>
-0x82FA	# <CJK>
-0x82FB	# <CJK>
 0x8302	# <CJK>
-0x8303	# <CJK>
-0x8304	# <CJK>
-0x8305	# <CJK>
-0x8306	# <CJK>
-0x8309	# <CJK>
 0x830E	# <CJK>
-0x8316	# <CJK>
-0x8317	# <CJK>
-0x8318	# <CJK>
-0x831C	# <CJK>
-0x8323	# <CJK>
 0x8328	# <CJK>
-0x832B	# <CJK>
-0x832F	# <CJK>
-0x8331	# <CJK>
-0x8332	# <CJK>
-0x8334	# <CJK>
-0x8335	# <CJK>
 0x8336	# <CJK>
-0x8338	# <CJK>
-0x8339	# <CJK>
-0x8340	# <CJK>
-0x8345	# <CJK>
 0x8349	# <CJK>
-0x834A	# <CJK>
-0x834F	# <CJK>
-0x8350	# <CJK>
 0x8352	# <CJK>
 0x8358	# <CJK>
-0x8373	# <CJK>
-0x8375	# <CJK>
 0x8377	# <CJK>
-0x837B	# <CJK>
-0x837C	# <CJK>
-0x8385	# <CJK>
-0x8387	# <CJK>
-0x8389	# <CJK>
-0x838A	# <CJK>
-0x838E	# <CJK>
-0x8393	# <CJK>
-0x8396	# <CJK>
-0x839A	# <CJK>
-0x839E	# <CJK>
-0x839F	# <CJK>
-0x83A0	# <CJK>
-0x83A2	# <CJK>
-0x83A8	# <CJK>
-0x83AA	# <CJK>
-0x83AB	# <CJK>
-0x83B1	# <CJK>
-0x83B5	# <CJK>
-0x83BD	# <CJK>
-0x83C1	# <CJK>
-0x83C5	# <CJK>
 0x83CA	# <CJK>
 0x83CC	# <CJK>
-0x83CE	# <CJK>
 0x83D3	# <CJK>
-0x83D6	# <CJK>
-0x83D8	# <CJK>
 0x83DC	# <CJK>
-0x83DF	# <CJK>
-0x83E0	# <CJK>
-0x83E9	# <CJK>
-0x83EB	# <CJK>
 0x83EF	# <CJK>
-0x83F0	# <CJK>
-0x83F1	# <CJK>
-0x83F2	# <CJK>
-0x83F4	# <CJK>
-0x83F7	# <CJK>
-0x83FB	# <CJK>
-0x83FD	# <CJK>
-0x8403	# <CJK>
-0x8404	# <CJK>
-0x8407	# <CJK>
-0x840B	# <CJK>
-0x840C	# <CJK>
-0x840D	# <CJK>
 0x840E	# <CJK>
-0x8413	# <CJK>
-0x8420	# <CJK>
-0x8422	# <CJK>
-0x8429	# <CJK>
-0x842A	# <CJK>
-0x842C	# <CJK>
-0x8431	# <CJK>
-0x8435	# <CJK>
-0x8438	# <CJK>
-0x843C	# <CJK>
 0x843D	# <CJK>
-0x8446	# <CJK>
 0x8449	# <CJK>
-0x844E	# <CJK>
 0x8457	# <CJK>
 0x845B	# <CJK>
-0x8461	# <CJK>
-0x8462	# <CJK>
-0x8463	# <CJK>
-0x8466	# <CJK>
-0x8469	# <CJK>
-0x846B	# <CJK>
 0x846C	# <CJK>
-0x846D	# <CJK>
-0x846E	# <CJK>
-0x846F	# <CJK>
-0x8471	# <CJK>
-0x8475	# <CJK>
-0x8477	# <CJK>
-0x8479	# <CJK>
-0x847A	# <CJK>
-0x8482	# <CJK>
-0x8484	# <CJK>
-0x848B	# <CJK>
-0x8490	# <CJK>
-0x8494	# <CJK>
-0x8499	# <CJK>
-0x849C	# <CJK>
-0x849F	# <CJK>
-0x84A1	# <CJK>
-0x84AD	# <CJK>
-0x84B2	# <CJK>
 0x84B8	# <CJK>
-0x84B9	# <CJK>
-0x84BB	# <CJK>
-0x84BC	# <CJK>
-0x84BF	# <CJK>
-0x84C1	# <CJK>
 0x84C4	# <CJK>
-0x84C6	# <CJK>
-0x84C9	# <CJK>
-0x84CA	# <CJK>
 0x84CB	# <CJK>
-0x84CD	# <CJK>
-0x84D0	# <CJK>
-0x84D1	# <CJK>
-0x84D6	# <CJK>
-0x84D9	# <CJK>
-0x84DA	# <CJK>
-0x84EC	# <CJK>
-0x84EE	# <CJK>
-0x84F4	# <CJK>
-0x84FC	# <CJK>
-0x84FF	# <CJK>
-0x8500	# <CJK>
-0x8506	# <CJK>
 0x8511	# <CJK>
-0x8513	# <CJK>
-0x8514	# <CJK>
-0x8515	# <CJK>
-0x8517	# <CJK>
-0x8518	# <CJK>
-0x851A	# <CJK>
-0x851F	# <CJK>
-0x8521	# <CJK>
-0x8526	# <CJK>
-0x852C	# <CJK>
-0x852D	# <CJK>
 0x8535	# <CJK>
 0x853D	# <CJK>
-0x8540	# <CJK>
-0x8541	# <CJK>
-0x8543	# <CJK>
-0x8548	# <CJK>
-0x8549	# <CJK>
-0x854A	# <CJK>
-0x854B	# <CJK>
-0x854E	# <CJK>
-0x8555	# <CJK>
-0x8557	# <CJK>
-0x8558	# <CJK>
-0x855A	# <CJK>
-0x8563	# <CJK>
-0x8568	# <CJK>
-0x8569	# <CJK>
-0x856A	# <CJK>
-0x856D	# <CJK>
-0x8577	# <CJK>
-0x857E	# <CJK>
-0x8580	# <CJK>
 0x8584	# <CJK>
-0x8587	# <CJK>
-0x8588	# <CJK>
-0x858A	# <CJK>
-0x8590	# <CJK>
-0x8591	# <CJK>
-0x8594	# <CJK>
-0x8597	# <CJK>
-0x8599	# <CJK>
-0x859B	# <CJK>
-0x859C	# <CJK>
-0x85A4	# <CJK>
 0x85A6	# <CJK>
-0x85A8	# <CJK>
-0x85A9	# <CJK>
 0x85AA	# <CJK>
 0x85AB	# <CJK>
 0x85AC	# <CJK>
-0x85AE	# <CJK>
-0x85AF	# <CJK>
-0x85B9	# <CJK>
-0x85BA	# <CJK>
-0x85C1	# <CJK>
-0x85C9	# <CJK>
 0x85CD	# <CJK>
-0x85CF	# <CJK>
-0x85D0	# <CJK>
-0x85D5	# <CJK>
-0x85DC	# <CJK>
-0x85DD	# <CJK>
 0x85E4	# <CJK>
-0x85E5	# <CJK>
 0x85E9	# <CJK>
-0x85EA	# <CJK>
-0x85F7	# <CJK>
-0x85F9	# <CJK>
-0x85FA	# <CJK>
 0x85FB	# <CJK>
-0x85FE	# <CJK>
-0x8602	# <CJK>
-0x8606	# <CJK>
-0x8607	# <CJK>
-0x860A	# <CJK>
-0x860B	# <CJK>
-0x8613	# <CJK>
-0x8616	# <CJK>
-0x8617	# <CJK>
-0x861A	# <CJK>
-0x8622	# <CJK>
-0x862D	# <CJK>
-0x862F	# <CJK>
-0x8630	# <CJK>
-0x863F	# <CJK>
-0x864D	# <CJK>
 0x864E	# <CJK>
 0x8650	# <CJK>
-0x8654	# <CJK>
-0x8655	# <CJK>
 0x865A	# <CJK>
 0x865C	# <CJK>
 0x865E	# <CJK>
-0x865F	# <CJK>
-0x8667	# <CJK>
 0x866B	# <CJK>
-0x8671	# <CJK>
 0x8679	# <CJK>
-0x867B	# <CJK>
 0x868A	# <CJK>
-0x868B	# <CJK>
-0x868C	# <CJK>
-0x8693	# <CJK>
 0x8695	# <CJK>
-0x86A3	# <CJK>
-0x86A4	# <CJK>
-0x86A9	# <CJK>
-0x86AA	# <CJK>
-0x86AB	# <CJK>
-0x86AF	# <CJK>
-0x86B0	# <CJK>
-0x86B6	# <CJK>
-0x86C4	# <CJK>
-0x86C6	# <CJK>
 0x86C7	# <CJK>
-0x86C9	# <CJK>
-0x86CB	# <CJK>
 0x86CD	# <CJK>
-0x86CE	# <CJK>
-0x86D4	# <CJK>
-0x86D9	# <CJK>
-0x86DB	# <CJK>
-0x86DE	# <CJK>
-0x86DF	# <CJK>
-0x86E4	# <CJK>
-0x86E9	# <CJK>
-0x86EC	# <CJK>
-0x86ED	# <CJK>
 0x86EE	# <CJK>
-0x86EF	# <CJK>
-0x86F8	# <CJK>
-0x86F9	# <CJK>
-0x86FB	# <CJK>
-0x86FE	# <CJK>
-0x8700	# <CJK>
 0x8702	# <CJK>
-0x8703	# <CJK>
-0x8706	# <CJK>
-0x8708	# <CJK>
-0x8709	# <CJK>
-0x870A	# <CJK>
-0x870D	# <CJK>
-0x8711	# <CJK>
-0x8712	# <CJK>
-0x8718	# <CJK>
-0x871A	# <CJK>
 0x871C	# <CJK>
-0x8725	# <CJK>
-0x8729	# <CJK>
-0x8734	# <CJK>
-0x8737	# <CJK>
-0x873B	# <CJK>
-0x873F	# <CJK>
-0x8749	# <CJK>
-0x874B	# <CJK>
-0x874C	# <CJK>
-0x874E	# <CJK>
-0x8753	# <CJK>
-0x8755	# <CJK>
-0x8757	# <CJK>
-0x8759	# <CJK>
-0x875F	# <CJK>
-0x8760	# <CJK>
-0x8763	# <CJK>
-0x8766	# <CJK>
-0x8768	# <CJK>
-0x876A	# <CJK>
-0x876E	# <CJK>
-0x8774	# <CJK>
-0x8776	# <CJK>
-0x8778	# <CJK>
-0x877F	# <CJK>
-0x8782	# <CJK>
 0x878D	# <CJK>
-0x879F	# <CJK>
-0x87A2	# <CJK>
-0x87AB	# <CJK>
-0x87AF	# <CJK>
-0x87B3	# <CJK>
-0x87BA	# <CJK>
-0x87BB	# <CJK>
-0x87BD	# <CJK>
-0x87C0	# <CJK>
-0x87C4	# <CJK>
-0x87C6	# <CJK>
-0x87C7	# <CJK>
-0x87CB	# <CJK>
-0x87D0	# <CJK>
-0x87D2	# <CJK>
-0x87E0	# <CJK>
-0x87EF	# <CJK>
-0x87F2	# <CJK>
-0x87F6	# <CJK>
-0x87F7	# <CJK>
-0x87F9	# <CJK>
-0x87FB	# <CJK>
-0x87FE	# <CJK>
-0x8805	# <CJK>
-0x880D	# <CJK>
-0x880E	# <CJK>
-0x880F	# <CJK>
-0x8811	# <CJK>
-0x8815	# <CJK>
-0x8816	# <CJK>
-0x8821	# <CJK>
-0x8822	# <CJK>
-0x8823	# <CJK>
-0x8827	# <CJK>
-0x8831	# <CJK>
-0x8836	# <CJK>
-0x8839	# <CJK>
-0x883B	# <CJK>
 0x8840	# <CJK>
-0x8842	# <CJK>
-0x8844	# <CJK>
 0x8846	# <CJK>
 0x884C	# <CJK>
-0x884D	# <CJK>
-0x8852	# <CJK>
 0x8853	# <CJK>
 0x8857	# <CJK>
-0x8859	# <CJK>
 0x885B	# <CJK>
 0x885D	# <CJK>
-0x885E	# <CJK>
 0x8861	# <CJK>
-0x8862	# <CJK>
 0x8863	# <CJK>
 0x8868	# <CJK>
-0x886B	# <CJK>
 0x8870	# <CJK>
-0x8872	# <CJK>
-0x8875	# <CJK>
 0x8877	# <CJK>
-0x887D	# <CJK>
-0x887E	# <CJK>
-0x887F	# <CJK>
-0x8881	# <CJK>
-0x8882	# <CJK>
-0x8888	# <CJK>
 0x888B	# <CJK>
-0x888D	# <CJK>
-0x8892	# <CJK>
 0x8896	# <CJK>
-0x8897	# <CJK>
-0x8899	# <CJK>
-0x889E	# <CJK>
-0x88A2	# <CJK>
-0x88A4	# <CJK>
 0x88AB	# <CJK>
-0x88AE	# <CJK>
-0x88B0	# <CJK>
-0x88B1	# <CJK>
-0x88B4	# <CJK>
-0x88B5	# <CJK>
-0x88B7	# <CJK>
-0x88BF	# <CJK>
 0x88C1	# <CJK>
 0x88C2	# <CJK>
-0x88C3	# <CJK>
-0x88C4	# <CJK>
 0x88C5	# <CJK>
 0x88CF	# <CJK>
-0x88D4	# <CJK>
 0x88D5	# <CJK>
-0x88D8	# <CJK>
-0x88D9	# <CJK>
 0x88DC	# <CJK>
-0x88DD	# <CJK>
-0x88DF	# <CJK>
-0x88E1	# <CJK>
-0x88E8	# <CJK>
-0x88F2	# <CJK>
-0x88F3	# <CJK>
-0x88F4	# <CJK>
 0x88F8	# <CJK>
-0x88F9	# <CJK>
-0x88FC	# <CJK>
 0x88FD	# <CJK>
 0x88FE	# <CJK>
-0x8902	# <CJK>
-0x8904	# <CJK>
 0x8907	# <CJK>
-0x890A	# <CJK>
-0x890C	# <CJK>
 0x8910	# <CJK>
 0x8912	# <CJK>
-0x8913	# <CJK>
-0x891D	# <CJK>
-0x891E	# <CJK>
-0x8925	# <CJK>
-0x892A	# <CJK>
-0x892B	# <CJK>
-0x8936	# <CJK>
-0x8938	# <CJK>
-0x893B	# <CJK>
-0x8941	# <CJK>
-0x8943	# <CJK>
-0x8944	# <CJK>
-0x894C	# <CJK>
-0x894D	# <CJK>
-0x8956	# <CJK>
-0x895E	# <CJK>
 0x895F	# <CJK>
-0x8960	# <CJK>
-0x8964	# <CJK>
-0x8966	# <CJK>
-0x896A	# <CJK>
-0x896D	# <CJK>
-0x896F	# <CJK>
 0x8972	# <CJK>
-0x8974	# <CJK>
-0x8977	# <CJK>
-0x897E	# <CJK>
 0x897F	# <CJK>
 0x8981	# <CJK>
-0x8983	# <CJK>
 0x8986	# <CJK>
 0x8987	# <CJK>
-0x8988	# <CJK>
-0x898A	# <CJK>
 0x898B	# <CJK>
 0x898F	# <CJK>
-0x8993	# <CJK>
 0x8996	# <CJK>
-0x8997	# <CJK>
-0x8998	# <CJK>
 0x899A	# <CJK>
-0x89A1	# <CJK>
-0x89A6	# <CJK>
 0x89A7	# <CJK>
-0x89A9	# <CJK>
 0x89AA	# <CJK>
-0x89AC	# <CJK>
-0x89AF	# <CJK>
-0x89B2	# <CJK>
 0x89B3	# <CJK>
-0x89BA	# <CJK>
-0x89BD	# <CJK>
-0x89BF	# <CJK>
-0x89C0	# <CJK>
 0x89D2	# <CJK>
-0x89DA	# <CJK>
-0x89DC	# <CJK>
-0x89DD	# <CJK>
 0x89E3	# <CJK>
 0x89E6	# <CJK>
-0x89E7	# <CJK>
-0x89F4	# <CJK>
-0x89F8	# <CJK>
 0x8A00	# <CJK>
 0x8A02	# <CJK>
 0x8A03	# <CJK>
 0x8A08	# <CJK>
-0x8A0A	# <CJK>
-0x8A0C	# <CJK>
 0x8A0E	# <CJK>
-0x8A10	# <CJK>
 0x8A13	# <CJK>
-0x8A16	# <CJK>
 0x8A17	# <CJK>
 0x8A18	# <CJK>
-0x8A1B	# <CJK>
-0x8A1D	# <CJK>
 0x8A1F	# <CJK>
-0x8A23	# <CJK>
-0x8A25	# <CJK>
 0x8A2A	# <CJK>
 0x8A2D	# <CJK>
 0x8A31	# <CJK>
 0x8A33	# <CJK>
 0x8A34	# <CJK>
-0x8A36	# <CJK>
 0x8A3A	# <CJK>
-0x8A3B	# <CJK>
 0x8A3C	# <CJK>
-0x8A41	# <CJK>
-0x8A46	# <CJK>
-0x8A48	# <CJK>
 0x8A50	# <CJK>
-0x8A51	# <CJK>
-0x8A52	# <CJK>
 0x8A54	# <CJK>
 0x8A55	# <CJK>
-0x8A5B	# <CJK>
 0x8A5E	# <CJK>
 0x8A60	# <CJK>
-0x8A62	# <CJK>
 0x8A63	# <CJK>
 0x8A66	# <CJK>
 0x8A69	# <CJK>
-0x8A6B	# <CJK>
-0x8A6C	# <CJK>
-0x8A6D	# <CJK>
 0x8A6E	# <CJK>
 0x8A70	# <CJK>
 0x8A71	# <CJK>
 0x8A72	# <CJK>
 0x8A73	# <CJK>
-0x8A7C	# <CJK>
-0x8A82	# <CJK>
-0x8A84	# <CJK>
-0x8A85	# <CJK>
 0x8A87	# <CJK>
 0x8A89	# <CJK>
 0x8A8C	# <CJK>
 0x8A8D	# <CJK>
-0x8A91	# <CJK>
 0x8A93	# <CJK>
 0x8A95	# <CJK>
 0x8A98	# <CJK>
-0x8A9A	# <CJK>
 0x8A9E	# <CJK>
 0x8AA0	# <CJK>
-0x8AA1	# <CJK>
-0x8AA3	# <CJK>
 0x8AA4	# <CJK>
-0x8AA5	# <CJK>
-0x8AA6	# <CJK>
-0x8AA8	# <CJK>
 0x8AAC	# <CJK>
 0x8AAD	# <CJK>
 0x8AB0	# <CJK>
 0x8AB2	# <CJK>
-0x8AB9	# <CJK>
-0x8ABC	# <CJK>
 0x8ABF	# <CJK>
-0x8AC2	# <CJK>
-0x8AC4	# <CJK>
 0x8AC7	# <CJK>
 0x8ACB	# <CJK>
-0x8ACC	# <CJK>
-0x8ACD	# <CJK>
-0x8ACF	# <CJK>
-0x8AD2	# <CJK>
 0x8AD6	# <CJK>
-0x8ADA	# <CJK>
-0x8ADB	# <CJK>
-0x8ADC	# <CJK>
-0x8ADE	# <CJK>
-0x8AE0	# <CJK>
-0x8AE1	# <CJK>
-0x8AE2	# <CJK>
-0x8AE4	# <CJK>
 0x8AE6	# <CJK>
 0x8AE7	# <CJK>
-0x8AEB	# <CJK>
 0x8AED	# <CJK>
 0x8AEE	# <CJK>
-0x8AF1	# <CJK>
-0x8AF3	# <CJK>
-0x8AF7	# <CJK>
 0x8AF8	# <CJK>
-0x8AFA	# <CJK>
 0x8AFE	# <CJK>
 0x8B00	# <CJK>
 0x8B01	# <CJK>
-0x8B02	# <CJK>
 0x8B04	# <CJK>
-0x8B07	# <CJK>
-0x8B0C	# <CJK>
 0x8B0E	# <CJK>
-0x8B10	# <CJK>
-0x8B14	# <CJK>
-0x8B16	# <CJK>
-0x8B17	# <CJK>
 0x8B19	# <CJK>
-0x8B1A	# <CJK>
 0x8B1B	# <CJK>
 0x8B1D	# <CJK>
-0x8B20	# <CJK>
 0x8B21	# <CJK>
-0x8B26	# <CJK>
-0x8B28	# <CJK>
-0x8B2B	# <CJK>
-0x8B2C	# <CJK>
-0x8B33	# <CJK>
 0x8B39	# <CJK>
-0x8B3E	# <CJK>
-0x8B41	# <CJK>
-0x8B49	# <CJK>
-0x8B4C	# <CJK>
-0x8B4E	# <CJK>
-0x8B4F	# <CJK>
-0x8B56	# <CJK>
 0x8B58	# <CJK>
-0x8B5A	# <CJK>
-0x8B5B	# <CJK>
 0x8B5C	# <CJK>
-0x8B5F	# <CJK>
 0x8B66	# <CJK>
-0x8B6B	# <CJK>
-0x8B6C	# <CJK>
-0x8B6F	# <CJK>
 0x8B70	# <CJK>
-0x8B71	# <CJK>
 0x8B72	# <CJK>
-0x8B74	# <CJK>
 0x8B77	# <CJK>
-0x8B7D	# <CJK>
-0x8B80	# <CJK>
-0x8B83	# <CJK>
-0x8B8A	# <CJK>
-0x8B8C	# <CJK>
-0x8B8E	# <CJK>
-0x8B90	# <CJK>
-0x8B92	# <CJK>
-0x8B93	# <CJK>
-0x8B96	# <CJK>
-0x8B99	# <CJK>
-0x8B9A	# <CJK>
 0x8C37	# <CJK>
-0x8C3A	# <CJK>
-0x8C3F	# <CJK>
-0x8C41	# <CJK>
 0x8C46	# <CJK>
-0x8C48	# <CJK>
 0x8C4A	# <CJK>
-0x8C4C	# <CJK>
-0x8C4E	# <CJK>
-0x8C50	# <CJK>
-0x8C55	# <CJK>
 0x8C5A	# <CJK>
 0x8C61	# <CJK>
-0x8C62	# <CJK>
 0x8C6A	# <CJK>
-0x8C6B	# <CJK>
-0x8C6C	# <CJK>
-0x8C78	# <CJK>
-0x8C79	# <CJK>
-0x8C7A	# <CJK>
-0x8C7C	# <CJK>
-0x8C82	# <CJK>
-0x8C85	# <CJK>
-0x8C89	# <CJK>
-0x8C8A	# <CJK>
 0x8C8C	# <CJK>
-0x8C8D	# <CJK>
-0x8C8E	# <CJK>
-0x8C94	# <CJK>
-0x8C98	# <CJK>
 0x8C9D	# <CJK>
 0x8C9E	# <CJK>
 0x8CA0	# <CJK>
@@ -5348,1218 +2008,338 @@
 0x8CAA	# <CJK>
 0x8CAB	# <CJK>
 0x8CAC	# <CJK>
-0x8CAD	# <CJK>
-0x8CAE	# <CJK>
 0x8CAF	# <CJK>
-0x8CB0	# <CJK>
-0x8CB2	# <CJK>
-0x8CB3	# <CJK>
 0x8CB4	# <CJK>
-0x8CB6	# <CJK>
 0x8CB7	# <CJK>
 0x8CB8	# <CJK>
 0x8CBB	# <CJK>
 0x8CBC	# <CJK>
-0x8CBD	# <CJK>
 0x8CBF	# <CJK>
 0x8CC0	# <CJK>
-0x8CC1	# <CJK>
 0x8CC2	# <CJK>
 0x8CC3	# <CJK>
 0x8CC4	# <CJK>
 0x8CC7	# <CJK>
-0x8CC8	# <CJK>
 0x8CCA	# <CJK>
-0x8CCD	# <CJK>
-0x8CCE	# <CJK>
-0x8CD1	# <CJK>
 0x8CD3	# <CJK>
-0x8CDA	# <CJK>
 0x8CDB	# <CJK>
 0x8CDC	# <CJK>
 0x8CDE	# <CJK>
 0x8CE0	# <CJK>
 0x8CE2	# <CJK>
-0x8CE3	# <CJK>
-0x8CE4	# <CJK>
 0x8CE6	# <CJK>
 0x8CEA	# <CJK>
 0x8CED	# <CJK>
-0x8CFA	# <CJK>
-0x8CFB	# <CJK>
 0x8CFC	# <CJK>
-0x8CFD	# <CJK>
-0x8D04	# <CJK>
-0x8D05	# <CJK>
-0x8D07	# <CJK>
 0x8D08	# <CJK>
-0x8D0A	# <CJK>
-0x8D0B	# <CJK>
-0x8D0D	# <CJK>
-0x8D0F	# <CJK>
-0x8D10	# <CJK>
-0x8D13	# <CJK>
-0x8D14	# <CJK>
-0x8D16	# <CJK>
 0x8D64	# <CJK>
 0x8D66	# <CJK>
-0x8D67	# <CJK>
-0x8D6B	# <CJK>
-0x8D6D	# <CJK>
 0x8D70	# <CJK>
-0x8D71	# <CJK>
-0x8D73	# <CJK>
 0x8D74	# <CJK>
 0x8D77	# <CJK>
-0x8D81	# <CJK>
 0x8D85	# <CJK>
 0x8D8A	# <CJK>
-0x8D99	# <CJK>
 0x8DA3	# <CJK>
-0x8DA8	# <CJK>
 0x8DB3	# <CJK>
-0x8DBA	# <CJK>
-0x8DBE	# <CJK>
-0x8DC2	# <CJK>
-0x8DCB	# <CJK>
-0x8DCC	# <CJK>
-0x8DCF	# <CJK>
-0x8DD6	# <CJK>
-0x8DDA	# <CJK>
-0x8DDB	# <CJK>
 0x8DDD	# <CJK>
-0x8DDF	# <CJK>
 0x8DE1	# <CJK>
-0x8DE3	# <CJK>
-0x8DE8	# <CJK>
-0x8DEA	# <CJK>
-0x8DEB	# <CJK>
 0x8DEF	# <CJK>
 0x8DF3	# <CJK>
 0x8DF5	# <CJK>
-0x8DFC	# <CJK>
-0x8DFF	# <CJK>
-0x8E08	# <CJK>
-0x8E09	# <CJK>
 0x8E0A	# <CJK>
 0x8E0F	# <CJK>
-0x8E10	# <CJK>
-0x8E1D	# <CJK>
-0x8E1E	# <CJK>
-0x8E1F	# <CJK>
 0x8E2A	# <CJK>
-0x8E30	# <CJK>
-0x8E34	# <CJK>
-0x8E35	# <CJK>
-0x8E42	# <CJK>
-0x8E44	# <CJK>
-0x8E47	# <CJK>
-0x8E48	# <CJK>
-0x8E49	# <CJK>
-0x8E4A	# <CJK>
-0x8E4C	# <CJK>
-0x8E50	# <CJK>
-0x8E55	# <CJK>
-0x8E59	# <CJK>
-0x8E5F	# <CJK>
-0x8E60	# <CJK>
-0x8E63	# <CJK>
-0x8E64	# <CJK>
-0x8E72	# <CJK>
 0x8E74	# <CJK>
-0x8E76	# <CJK>
-0x8E7C	# <CJK>
-0x8E81	# <CJK>
-0x8E84	# <CJK>
-0x8E85	# <CJK>
-0x8E87	# <CJK>
-0x8E8A	# <CJK>
-0x8E8B	# <CJK>
 0x8E8D	# <CJK>
-0x8E91	# <CJK>
-0x8E93	# <CJK>
-0x8E94	# <CJK>
-0x8E99	# <CJK>
-0x8EA1	# <CJK>
-0x8EAA	# <CJK>
 0x8EAB	# <CJK>
-0x8EAC	# <CJK>
-0x8EAF	# <CJK>
-0x8EB0	# <CJK>
-0x8EB1	# <CJK>
-0x8EBE	# <CJK>
-0x8EC5	# <CJK>
-0x8EC6	# <CJK>
-0x8EC8	# <CJK>
 0x8ECA	# <CJK>
-0x8ECB	# <CJK>
 0x8ECC	# <CJK>
 0x8ECD	# <CJK>
 0x8ED2	# <CJK>
-0x8EDB	# <CJK>
 0x8EDF	# <CJK>
 0x8EE2	# <CJK>
-0x8EE3	# <CJK>
-0x8EEB	# <CJK>
 0x8EF8	# <CJK>
-0x8EFB	# <CJK>
-0x8EFC	# <CJK>
 0x8EFD	# <CJK>
-0x8EFE	# <CJK>
 0x8F03	# <CJK>
-0x8F05	# <CJK>
 0x8F09	# <CJK>
-0x8F0A	# <CJK>
-0x8F0C	# <CJK>
-0x8F12	# <CJK>
-0x8F13	# <CJK>
-0x8F14	# <CJK>
-0x8F15	# <CJK>
-0x8F19	# <CJK>
-0x8F1B	# <CJK>
-0x8F1C	# <CJK>
 0x8F1D	# <CJK>
-0x8F1F	# <CJK>
-0x8F26	# <CJK>
 0x8F29	# <CJK>
 0x8F2A	# <CJK>
-0x8F2F	# <CJK>
-0x8F33	# <CJK>
 0x8F38	# <CJK>
-0x8F39	# <CJK>
-0x8F3B	# <CJK>
-0x8F3E	# <CJK>
-0x8F3F	# <CJK>
-0x8F42	# <CJK>
 0x8F44	# <CJK>
-0x8F45	# <CJK>
-0x8F46	# <CJK>
-0x8F49	# <CJK>
-0x8F4C	# <CJK>
-0x8F4D	# <CJK>
-0x8F4E	# <CJK>
-0x8F57	# <CJK>
-0x8F5C	# <CJK>
-0x8F5F	# <CJK>
-0x8F61	# <CJK>
-0x8F62	# <CJK>
-0x8F63	# <CJK>
-0x8F64	# <CJK>
 0x8F9B	# <CJK>
-0x8F9C	# <CJK>
 0x8F9E	# <CJK>
-0x8F9F	# <CJK>
 0x8FA3	# <CJK>
-0x8FA7	# <CJK>
-0x8FA8	# <CJK>
-0x8FAD	# <CJK>
-0x8FAE	# <CJK>
-0x8FAF	# <CJK>
-0x8FB0	# <CJK>
 0x8FB1	# <CJK>
 0x8FB2	# <CJK>
-0x8FB7	# <CJK>
 0x8FBA	# <CJK>
-0x8FBB	# <CJK>
 0x8FBC	# <CJK>
-0x8FBF	# <CJK>
-0x8FC2	# <CJK>
-0x8FC4	# <CJK>
 0x8FC5	# <CJK>
 0x8FCE	# <CJK>
 0x8FD1	# <CJK>
 0x8FD4	# <CJK>
-0x8FDA	# <CJK>
-0x8FE2	# <CJK>
-0x8FE5	# <CJK>
-0x8FE6	# <CJK>
-0x8FE9	# <CJK>
-0x8FEA	# <CJK>
 0x8FEB	# <CJK>
 0x8FED	# <CJK>
-0x8FEF	# <CJK>
 0x8FF0	# <CJK>
-0x8FF4	# <CJK>
 0x8FF7	# <CJK>
-0x8FF8	# <CJK>
-0x8FF9	# <CJK>
-0x8FFA	# <CJK>
 0x8FFD	# <CJK>
 0x9000	# <CJK>
 0x9001	# <CJK>
 0x9003	# <CJK>
-0x9005	# <CJK>
 0x9006	# <CJK>
-0x900B	# <CJK>
-0x900D	# <CJK>
-0x900E	# <CJK>
 0x900F	# <CJK>
 0x9010	# <CJK>
-0x9011	# <CJK>
 0x9013	# <CJK>
 0x9014	# <CJK>
-0x9015	# <CJK>
-0x9016	# <CJK>
-0x9017	# <CJK>
-0x9019	# <CJK>
 0x901A	# <CJK>
 0x901D	# <CJK>
-0x901E	# <CJK>
 0x901F	# <CJK>
 0x9020	# <CJK>
-0x9021	# <CJK>
-0x9022	# <CJK>
 0x9023	# <CJK>
-0x9027	# <CJK>
 0x902E	# <CJK>
 0x9031	# <CJK>
 0x9032	# <CJK>
-0x9035	# <CJK>
-0x9036	# <CJK>
 0x9038	# <CJK>
-0x9039	# <CJK>
-0x903C	# <CJK>
-0x903E	# <CJK>
-0x9041	# <CJK>
 0x9042	# <CJK>
 0x9045	# <CJK>
 0x9047	# <CJK>
-0x9049	# <CJK>
 0x904A	# <CJK>
 0x904B	# <CJK>
 0x904D	# <CJK>
 0x904E	# <CJK>
-0x904F	# <CJK>
-0x9050	# <CJK>
-0x9051	# <CJK>
-0x9052	# <CJK>
 0x9053	# <CJK>
 0x9054	# <CJK>
 0x9055	# <CJK>
-0x9056	# <CJK>
-0x9058	# <CJK>
-0x9059	# <CJK>
 0x905C	# <CJK>
-0x905E	# <CJK>
 0x9060	# <CJK>
 0x9061	# <CJK>
 0x9063	# <CJK>
-0x9065	# <CJK>
-0x9068	# <CJK>
 0x9069	# <CJK>
 0x906D	# <CJK>
 0x906E	# <CJK>
-0x906F	# <CJK>
-0x9072	# <CJK>
 0x9075	# <CJK>
-0x9076	# <CJK>
 0x9077	# <CJK>
 0x9078	# <CJK>
 0x907A	# <CJK>
-0x907C	# <CJK>
-0x907D	# <CJK>
 0x907F	# <CJK>
-0x9080	# <CJK>
-0x9081	# <CJK>
-0x9082	# <CJK>
-0x9083	# <CJK>
 0x9084	# <CJK>
-0x9087	# <CJK>
-0x9089	# <CJK>
-0x908A	# <CJK>
-0x908F	# <CJK>
-0x9091	# <CJK>
 0x90A3	# <CJK>
 0x90A6	# <CJK>
-0x90A8	# <CJK>
 0x90AA	# <CJK>
-0x90AF	# <CJK>
-0x90B1	# <CJK>
-0x90B5	# <CJK>
 0x90B8	# <CJK>
-0x90C1	# <CJK>
 0x90CA	# <CJK>
 0x90CE	# <CJK>
-0x90DB	# <CJK>
 0x90E1	# <CJK>
-0x90E2	# <CJK>
-0x90E4	# <CJK>
 0x90E8	# <CJK>
 0x90ED	# <CJK>
 0x90F5	# <CJK>
 0x90F7	# <CJK>
 0x90FD	# <CJK>
-0x9102	# <CJK>
-0x9112	# <CJK>
-0x9119	# <CJK>
-0x912D	# <CJK>
-0x9130	# <CJK>
-0x9132	# <CJK>
-0x9149	# <CJK>
-0x914A	# <CJK>
-0x914B	# <CJK>
 0x914C	# <CJK>
 0x914D	# <CJK>
 0x914E	# <CJK>
 0x9152	# <CJK>
 0x9154	# <CJK>
-0x9156	# <CJK>
-0x9158	# <CJK>
 0x9162	# <CJK>
-0x9163	# <CJK>
-0x9165	# <CJK>
-0x9169	# <CJK>
 0x916A	# <CJK>
 0x916C	# <CJK>
-0x9172	# <CJK>
-0x9173	# <CJK>
 0x9175	# <CJK>
 0x9177	# <CJK>
 0x9178	# <CJK>
-0x9182	# <CJK>
-0x9187	# <CJK>
-0x9189	# <CJK>
-0x918B	# <CJK>
-0x918D	# <CJK>
-0x9190	# <CJK>
 0x9192	# <CJK>
-0x9197	# <CJK>
 0x919C	# <CJK>
-0x91A2	# <CJK>
-0x91A4	# <CJK>
-0x91AA	# <CJK>
-0x91AB	# <CJK>
-0x91AF	# <CJK>
-0x91B4	# <CJK>
-0x91B5	# <CJK>
 0x91B8	# <CJK>
-0x91BA	# <CJK>
-0x91C0	# <CJK>
-0x91C1	# <CJK>
-0x91C6	# <CJK>
 0x91C7	# <CJK>
 0x91C8	# <CJK>
-0x91C9	# <CJK>
-0x91CB	# <CJK>
 0x91CC	# <CJK>
 0x91CD	# <CJK>
 0x91CE	# <CJK>
 0x91CF	# <CJK>
-0x91D0	# <CJK>
 0x91D1	# <CJK>
-0x91D6	# <CJK>
-0x91D8	# <CJK>
-0x91DB	# <CJK>
 0x91DC	# <CJK>
 0x91DD	# <CJK>
-0x91DF	# <CJK>
-0x91E1	# <CJK>
 0x91E3	# <CJK>
-0x91E6	# <CJK>
-0x91E7	# <CJK>
-0x91F5	# <CJK>
-0x91F6	# <CJK>
-0x91FC	# <CJK>
-0x91FF	# <CJK>
 0x920D	# <CJK>
-0x920E	# <CJK>
-0x9211	# <CJK>
-0x9214	# <CJK>
-0x9215	# <CJK>
-0x921E	# <CJK>
-0x9229	# <CJK>
-0x922C	# <CJK>
 0x9234	# <CJK>
-0x9237	# <CJK>
-0x923F	# <CJK>
 0x9244	# <CJK>
-0x9245	# <CJK>
-0x9248	# <CJK>
-0x9249	# <CJK>
-0x924B	# <CJK>
-0x9250	# <CJK>
-0x9257	# <CJK>
-0x925A	# <CJK>
 0x925B	# <CJK>
-0x925E	# <CJK>
 0x9262	# <CJK>
-0x9264	# <CJK>
-0x9266	# <CJK>
 0x9271	# <CJK>
-0x927E	# <CJK>
 0x9280	# <CJK>
 0x9283	# <CJK>
 0x9285	# <CJK>
-0x9291	# <CJK>
-0x9293	# <CJK>
-0x9295	# <CJK>
-0x9296	# <CJK>
 0x9298	# <CJK>
-0x929A	# <CJK>
-0x929B	# <CJK>
-0x929C	# <CJK>
 0x92AD	# <CJK>
-0x92B7	# <CJK>
-0x92B9	# <CJK>
-0x92CF	# <CJK>
-0x92D2	# <CJK>
-0x92E4	# <CJK>
-0x92E9	# <CJK>
-0x92EA	# <CJK>
 0x92ED	# <CJK>
-0x92F2	# <CJK>
 0x92F3	# <CJK>
-0x92F8	# <CJK>
-0x92FA	# <CJK>
 0x92FC	# <CJK>
-0x9306	# <CJK>
-0x930F	# <CJK>
-0x9310	# <CJK>
-0x9318	# <CJK>
-0x9319	# <CJK>
-0x931A	# <CJK>
 0x9320	# <CJK>
-0x9322	# <CJK>
-0x9323	# <CJK>
 0x9326	# <CJK>
-0x9328	# <CJK>
-0x932B	# <CJK>
 0x932C	# <CJK>
 0x932E	# <CJK>
 0x932F	# <CJK>
 0x9332	# <CJK>
-0x9335	# <CJK>
-0x933A	# <CJK>
-0x933B	# <CJK>
-0x9344	# <CJK>
 0x934B	# <CJK>
-0x934D	# <CJK>
-0x9354	# <CJK>
-0x9356	# <CJK>
 0x935B	# <CJK>
-0x935C	# <CJK>
-0x9360	# <CJK>
-0x936C	# <CJK>
-0x936E	# <CJK>
 0x9375	# <CJK>
-0x937C	# <CJK>
-0x937E	# <CJK>
 0x938C	# <CJK>
-0x9394	# <CJK>
 0x9396	# <CJK>
-0x9397	# <CJK>
-0x939A	# <CJK>
-0x93A7	# <CJK>
-0x93AC	# <CJK>
-0x93AD	# <CJK>
 0x93AE	# <CJK>
-0x93B0	# <CJK>
-0x93B9	# <CJK>
-0x93C3	# <CJK>
-0x93C8	# <CJK>
-0x93D0	# <CJK>
-0x93D1	# <CJK>
-0x93D6	# <CJK>
-0x93D7	# <CJK>
-0x93D8	# <CJK>
-0x93DD	# <CJK>
 0x93E1	# <CJK>
-0x93E4	# <CJK>
-0x93E5	# <CJK>
-0x93E8	# <CJK>
-0x9403	# <CJK>
-0x9407	# <CJK>
-0x9410	# <CJK>
-0x9413	# <CJK>
-0x9414	# <CJK>
 0x9418	# <CJK>
-0x9419	# <CJK>
-0x941A	# <CJK>
-0x9421	# <CJK>
-0x942B	# <CJK>
-0x9435	# <CJK>
-0x9436	# <CJK>
-0x9438	# <CJK>
-0x943A	# <CJK>
-0x9441	# <CJK>
-0x9444	# <CJK>
 0x9451	# <CJK>
-0x9452	# <CJK>
-0x9453	# <CJK>
-0x945A	# <CJK>
-0x945B	# <CJK>
-0x945E	# <CJK>
-0x9460	# <CJK>
-0x9462	# <CJK>
-0x946A	# <CJK>
-0x9470	# <CJK>
-0x9475	# <CJK>
-0x9477	# <CJK>
-0x947C	# <CJK>
-0x947D	# <CJK>
-0x947E	# <CJK>
-0x947F	# <CJK>
-0x9481	# <CJK>
 0x9577	# <CJK>
 0x9580	# <CJK>
-0x9582	# <CJK>
-0x9583	# <CJK>
-0x9587	# <CJK>
 0x9589	# <CJK>
-0x958A	# <CJK>
 0x958B	# <CJK>
-0x958F	# <CJK>
 0x9591	# <CJK>
 0x9593	# <CJK>
-0x9594	# <CJK>
-0x9596	# <CJK>
-0x9598	# <CJK>
-0x9599	# <CJK>
-0x95A0	# <CJK>
 0x95A2	# <CJK>
 0x95A3	# <CJK>
-0x95A4	# <CJK>
 0x95A5	# <CJK>
-0x95A7	# <CJK>
-0x95A8	# <CJK>
-0x95AD	# <CJK>
 0x95B2	# <CJK>
-0x95B9	# <CJK>
-0x95BB	# <CJK>
-0x95BC	# <CJK>
-0x95BE	# <CJK>
-0x95C3	# <CJK>
 0x95C7	# <CJK>
-0x95CA	# <CJK>
-0x95CC	# <CJK>
-0x95CD	# <CJK>
-0x95D4	# <CJK>
-0x95D5	# <CJK>
-0x95D6	# <CJK>
 0x95D8	# <CJK>
-0x95DC	# <CJK>
-0x95E1	# <CJK>
-0x95E2	# <CJK>
-0x95E5	# <CJK>
 0x961C	# <CJK>
-0x9621	# <CJK>
-0x9628	# <CJK>
 0x962A	# <CJK>
-0x962E	# <CJK>
-0x962F	# <CJK>
 0x9632	# <CJK>
 0x963B	# <CJK>
-0x963F	# <CJK>
-0x9640	# <CJK>
-0x9642	# <CJK>
 0x9644	# <CJK>
-0x964B	# <CJK>
-0x964C	# <CJK>
 0x964D	# <CJK>
-0x964F	# <CJK>
 0x9650	# <CJK>
 0x965B	# <CJK>
-0x965C	# <CJK>
-0x965D	# <CJK>
-0x965E	# <CJK>
-0x965F	# <CJK>
 0x9662	# <CJK>
 0x9663	# <CJK>
 0x9664	# <CJK>
 0x9665	# <CJK>
-0x9666	# <CJK>
 0x966A	# <CJK>
-0x966C	# <CJK>
 0x9670	# <CJK>
-0x9672	# <CJK>
 0x9673	# <CJK>
 0x9675	# <CJK>
 0x9676	# <CJK>
-0x9677	# <CJK>
 0x9678	# <CJK>
 0x967A	# <CJK>
 0x967D	# <CJK>
 0x9685	# <CJK>
 0x9686	# <CJK>
-0x9688	# <CJK>
 0x968A	# <CJK>
-0x968B	# <CJK>
-0x968D	# <CJK>
 0x968E	# <CJK>
 0x968F	# <CJK>
 0x9694	# <CJK>
-0x9695	# <CJK>
-0x9697	# <CJK>
-0x9698	# <CJK>
 0x9699	# <CJK>
 0x969B	# <CJK>
 0x969C	# <CJK>
 0x96A0	# <CJK>
 0x96A3	# <CJK>
-0x96A7	# <CJK>
-0x96A8	# <CJK>
-0x96AA	# <CJK>
-0x96B0	# <CJK>
-0x96B1	# <CJK>
-0x96B2	# <CJK>
-0x96B4	# <CJK>
-0x96B6	# <CJK>
 0x96B7	# <CJK>
-0x96B8	# <CJK>
-0x96B9	# <CJK>
 0x96BB	# <CJK>
-0x96BC	# <CJK>
-0x96C0	# <CJK>
-0x96C1	# <CJK>
 0x96C4	# <CJK>
 0x96C5	# <CJK>
 0x96C6	# <CJK>
 0x96C7	# <CJK>
-0x96C9	# <CJK>
-0x96CB	# <CJK>
 0x96CC	# <CJK>
-0x96CD	# <CJK>
-0x96CE	# <CJK>
 0x96D1	# <CJK>
-0x96D5	# <CJK>
-0x96D6	# <CJK>
-0x96D9	# <CJK>
-0x96DB	# <CJK>
-0x96DC	# <CJK>
 0x96E2	# <CJK>
 0x96E3	# <CJK>
 0x96E8	# <CJK>
 0x96EA	# <CJK>
-0x96EB	# <CJK>
 0x96F0	# <CJK>
 0x96F2	# <CJK>
 0x96F6	# <CJK>
 0x96F7	# <CJK>
-0x96F9	# <CJK>
 0x96FB	# <CJK>
 0x9700	# <CJK>
-0x9704	# <CJK>
-0x9706	# <CJK>
 0x9707	# <CJK>
-0x9708	# <CJK>
 0x970A	# <CJK>
-0x970D	# <CJK>
-0x970E	# <CJK>
-0x970F	# <CJK>
-0x9711	# <CJK>
-0x9713	# <CJK>
-0x9716	# <CJK>
-0x9719	# <CJK>
 0x971C	# <CJK>
-0x971E	# <CJK>
-0x9724	# <CJK>
 0x9727	# <CJK>
-0x972A	# <CJK>
-0x9730	# <CJK>
 0x9732	# <CJK>
-0x9738	# <CJK>
-0x9739	# <CJK>
-0x973D	# <CJK>
-0x973E	# <CJK>
-0x9742	# <CJK>
-0x9744	# <CJK>
-0x9746	# <CJK>
-0x9748	# <CJK>
-0x9749	# <CJK>
 0x9752	# <CJK>
-0x9756	# <CJK>
 0x9759	# <CJK>
-0x975C	# <CJK>
 0x975E	# <CJK>
-0x9760	# <CJK>
-0x9761	# <CJK>
 0x9762	# <CJK>
-0x9764	# <CJK>
-0x9766	# <CJK>
-0x9768	# <CJK>
 0x9769	# <CJK>
-0x976B	# <CJK>
-0x976D	# <CJK>
-0x9771	# <CJK>
 0x9774	# <CJK>
-0x9779	# <CJK>
-0x977A	# <CJK>
-0x977C	# <CJK>
-0x9781	# <CJK>
-0x9784	# <CJK>
-0x9785	# <CJK>
-0x9786	# <CJK>
-0x978B	# <CJK>
-0x978D	# <CJK>
-0x978F	# <CJK>
-0x9790	# <CJK>
-0x9798	# <CJK>
-0x979C	# <CJK>
-0x97A0	# <CJK>
-0x97A3	# <CJK>
-0x97A6	# <CJK>
-0x97A8	# <CJK>
-0x97AB	# <CJK>
-0x97AD	# <CJK>
-0x97B3	# <CJK>
-0x97B4	# <CJK>
-0x97C3	# <CJK>
-0x97C6	# <CJK>
-0x97C8	# <CJK>
-0x97CB	# <CJK>
 0x97D3	# <CJK>
-0x97DC	# <CJK>
-0x97ED	# <CJK>
-0x97EE	# <CJK>
-0x97F2	# <CJK>
 0x97F3	# <CJK>
-0x97F5	# <CJK>
-0x97F6	# <CJK>
 0x97FB	# <CJK>
 0x97FF	# <CJK>
-0x9801	# <CJK>
 0x9802	# <CJK>
 0x9803	# <CJK>
 0x9805	# <CJK>
 0x9806	# <CJK>
 0x9808	# <CJK>
-0x980C	# <CJK>
-0x980F	# <CJK>
 0x9810	# <CJK>
 0x9811	# <CJK>
 0x9812	# <CJK>
 0x9813	# <CJK>
-0x9817	# <CJK>
 0x9818	# <CJK>
-0x981A	# <CJK>
-0x9821	# <CJK>
-0x9824	# <CJK>
-0x982C	# <CJK>
 0x982D	# <CJK>
-0x9834	# <CJK>
-0x9837	# <CJK>
-0x9838	# <CJK>
+#0x9830	# <CJK> # not in DroidSansJapanese
 0x983B	# <CJK>
 0x983C	# <CJK>
-0x983D	# <CJK>
-0x9846	# <CJK>
-0x984B	# <CJK>
 0x984C	# <CJK>
 0x984D	# <CJK>
 0x984E	# <CJK>
-0x984F	# <CJK>
 0x9854	# <CJK>
 0x9855	# <CJK>
 0x9858	# <CJK>
-0x985B	# <CJK>
 0x985E	# <CJK>
 0x9867	# <CJK>
-0x986B	# <CJK>
-0x986F	# <CJK>
-0x9870	# <CJK>
-0x9871	# <CJK>
-0x9873	# <CJK>
-0x9874	# <CJK>
 0x98A8	# <CJK>
-0x98AA	# <CJK>
-0x98AF	# <CJK>
-0x98B1	# <CJK>
-0x98B6	# <CJK>
-0x98C3	# <CJK>
-0x98C4	# <CJK>
-0x98C6	# <CJK>
 0x98DB	# <CJK>
-0x98DC	# <CJK>
 0x98DF	# <CJK>
 0x98E2	# <CJK>
-0x98E9	# <CJK>
-0x98EB	# <CJK>
-0x98ED	# <CJK>
-0x98EE	# <CJK>
 0x98EF	# <CJK>
 0x98F2	# <CJK>
-0x98F4	# <CJK>
 0x98FC	# <CJK>
 0x98FD	# <CJK>
 0x98FE	# <CJK>
-0x9903	# <CJK>
 0x9905	# <CJK>
-0x9909	# <CJK>
 0x990A	# <CJK>
 0x990C	# <CJK>
-0x9910	# <CJK>
-0x9912	# <CJK>
 0x9913	# <CJK>
-0x9914	# <CJK>
-0x9918	# <CJK>
-0x991D	# <CJK>
-0x991E	# <CJK>
-0x9920	# <CJK>
-0x9921	# <CJK>
-0x9924	# <CJK>
 0x9928	# <CJK>
-0x992C	# <CJK>
-0x992E	# <CJK>
-0x993D	# <CJK>
-0x993E	# <CJK>
-0x9942	# <CJK>
-0x9945	# <CJK>
-0x9949	# <CJK>
-0x994B	# <CJK>
-0x994C	# <CJK>
-0x9950	# <CJK>
-0x9951	# <CJK>
-0x9952	# <CJK>
-0x9955	# <CJK>
-0x9957	# <CJK>
 0x9996	# <CJK>
-0x9997	# <CJK>
-0x9998	# <CJK>
 0x9999	# <CJK>
-0x99A5	# <CJK>
-0x99A8	# <CJK>
 0x99AC	# <CJK>
-0x99AD	# <CJK>
-0x99AE	# <CJK>
-0x99B3	# <CJK>
-0x99B4	# <CJK>
-0x99BC	# <CJK>
-0x99C1	# <CJK>
 0x99C4	# <CJK>
 0x99C5	# <CJK>
 0x99C6	# <CJK>
-0x99C8	# <CJK>
 0x99D0	# <CJK>
-0x99D1	# <CJK>
 0x99D2	# <CJK>
-0x99D5	# <CJK>
-0x99D8	# <CJK>
-0x99DB	# <CJK>
-0x99DD	# <CJK>
-0x99DF	# <CJK>
-0x99E2	# <CJK>
-0x99ED	# <CJK>
-0x99EE	# <CJK>
-0x99F1	# <CJK>
-0x99F2	# <CJK>
-0x99F8	# <CJK>
-0x99FB	# <CJK>
-0x99FF	# <CJK>
-0x9A01	# <CJK>
-0x9A05	# <CJK>
 0x9A0E	# <CJK>
-0x9A0F	# <CJK>
 0x9A12	# <CJK>
 0x9A13	# <CJK>
-0x9A19	# <CJK>
-0x9A28	# <CJK>
-0x9A2B	# <CJK>
 0x9A30	# <CJK>
-0x9A37	# <CJK>
-0x9A3E	# <CJK>
-0x9A40	# <CJK>
-0x9A42	# <CJK>
-0x9A43	# <CJK>
-0x9A45	# <CJK>
-0x9A4D	# <CJK>
-0x9A55	# <CJK>
-0x9A57	# <CJK>
 0x9A5A	# <CJK>
-0x9A5B	# <CJK>
-0x9A5F	# <CJK>
-0x9A62	# <CJK>
-0x9A64	# <CJK>
-0x9A65	# <CJK>
-0x9A69	# <CJK>
-0x9A6A	# <CJK>
-0x9A6B	# <CJK>
 0x9AA8	# <CJK>
-0x9AAD	# <CJK>
-0x9AB0	# <CJK>
 0x9AB8	# <CJK>
-0x9ABC	# <CJK>
-0x9AC0	# <CJK>
 0x9AC4	# <CJK>
-0x9ACF	# <CJK>
-0x9AD1	# <CJK>
-0x9AD3	# <CJK>
-0x9AD4	# <CJK>
 0x9AD8	# <CJK>
-0x9ADE	# <CJK>
-0x9ADF	# <CJK>
-0x9AE2	# <CJK>
-0x9AE3	# <CJK>
-0x9AE6	# <CJK>
 0x9AEA	# <CJK>
-0x9AEB	# <CJK>
-0x9AED	# <CJK>
-0x9AEE	# <CJK>
-0x9AEF	# <CJK>
-0x9AF1	# <CJK>
-0x9AF4	# <CJK>
-0x9AF7	# <CJK>
-0x9AFB	# <CJK>
-0x9B06	# <CJK>
-0x9B18	# <CJK>
-0x9B1A	# <CJK>
-0x9B1F	# <CJK>
-0x9B22	# <CJK>
-0x9B23	# <CJK>
-0x9B25	# <CJK>
-0x9B27	# <CJK>
-0x9B28	# <CJK>
-0x9B29	# <CJK>
-0x9B2A	# <CJK>
-0x9B2E	# <CJK>
-0x9B2F	# <CJK>
 0x9B31	# <CJK>
-0x9B32	# <CJK>
-0x9B3B	# <CJK>
 0x9B3C	# <CJK>
-0x9B41	# <CJK>
 0x9B42	# <CJK>
-0x9B43	# <CJK>
-0x9B44	# <CJK>
 0x9B45	# <CJK>
-0x9B4D	# <CJK>
-0x9B4E	# <CJK>
-0x9B4F	# <CJK>
-0x9B51	# <CJK>
 0x9B54	# <CJK>
-0x9B58	# <CJK>
 0x9B5A	# <CJK>
-0x9B6F	# <CJK>
-0x9B74	# <CJK>
-0x9B83	# <CJK>
-0x9B8E	# <CJK>
-0x9B91	# <CJK>
-0x9B92	# <CJK>
-0x9B93	# <CJK>
-0x9B96	# <CJK>
-0x9B97	# <CJK>
-0x9B9F	# <CJK>
-0x9BA0	# <CJK>
-0x9BA8	# <CJK>
-0x9BAA	# <CJK>
-0x9BAB	# <CJK>
-0x9BAD	# <CJK>
 0x9BAE	# <CJK>
-0x9BB4	# <CJK>
-0x9BB9	# <CJK>
-0x9BC0	# <CJK>
-0x9BC6	# <CJK>
-0x9BC9	# <CJK>
-0x9BCA	# <CJK>
-0x9BCF	# <CJK>
-0x9BD1	# <CJK>
-0x9BD2	# <CJK>
-0x9BD4	# <CJK>
-0x9BD6	# <CJK>
-0x9BDB	# <CJK>
-0x9BE1	# <CJK>
-0x9BE2	# <CJK>
-0x9BE3	# <CJK>
-0x9BE4	# <CJK>
 0x9BE8	# <CJK>
-0x9BF0	# <CJK>
-0x9BF1	# <CJK>
-0x9BF2	# <CJK>
-0x9BF5	# <CJK>
-0x9C04	# <CJK>
-0x9C06	# <CJK>
-0x9C08	# <CJK>
-0x9C09	# <CJK>
-0x9C0A	# <CJK>
-0x9C0C	# <CJK>
-0x9C0D	# <CJK>
-0x9C10	# <CJK>
-0x9C12	# <CJK>
-0x9C13	# <CJK>
-0x9C14	# <CJK>
-0x9C15	# <CJK>
-0x9C1B	# <CJK>
-0x9C21	# <CJK>
-0x9C24	# <CJK>
-0x9C25	# <CJK>
-0x9C2D	# <CJK>
-0x9C2E	# <CJK>
-0x9C2F	# <CJK>
-0x9C30	# <CJK>
-0x9C32	# <CJK>
-0x9C39	# <CJK>
-0x9C3A	# <CJK>
-0x9C3B	# <CJK>
-0x9C3E	# <CJK>
-0x9C46	# <CJK>
-0x9C47	# <CJK>
-0x9C48	# <CJK>
-0x9C52	# <CJK>
-0x9C57	# <CJK>
-0x9C5A	# <CJK>
-0x9C60	# <CJK>
-0x9C67	# <CJK>
-0x9C76	# <CJK>
-0x9C78	# <CJK>
 0x9CE5	# <CJK>
-0x9CE7	# <CJK>
-0x9CE9	# <CJK>
-0x9CEB	# <CJK>
-0x9CEC	# <CJK>
-0x9CF0	# <CJK>
-0x9CF3	# <CJK>
 0x9CF4	# <CJK>
-0x9CF6	# <CJK>
-0x9D03	# <CJK>
-0x9D06	# <CJK>
-0x9D07	# <CJK>
-0x9D08	# <CJK>
-0x9D09	# <CJK>
-0x9D0E	# <CJK>
-0x9D12	# <CJK>
-0x9D15	# <CJK>
-0x9D1B	# <CJK>
-0x9D1F	# <CJK>
-0x9D23	# <CJK>
-0x9D26	# <CJK>
-0x9D28	# <CJK>
-0x9D2A	# <CJK>
-0x9D2B	# <CJK>
-0x9D2C	# <CJK>
-0x9D3B	# <CJK>
-0x9D3E	# <CJK>
-0x9D3F	# <CJK>
-0x9D41	# <CJK>
-0x9D44	# <CJK>
-0x9D46	# <CJK>
-0x9D48	# <CJK>
-0x9D50	# <CJK>
-0x9D51	# <CJK>
-0x9D59	# <CJK>
-0x9D5C	# <CJK>
-0x9D5D	# <CJK>
-0x9D5E	# <CJK>
-0x9D60	# <CJK>
-0x9D61	# <CJK>
-0x9D64	# <CJK>
-0x9D6C	# <CJK>
-0x9D6F	# <CJK>
-0x9D72	# <CJK>
-0x9D7A	# <CJK>
-0x9D87	# <CJK>
-0x9D89	# <CJK>
 0x9D8F	# <CJK>
-0x9D9A	# <CJK>
-0x9DA4	# <CJK>
-0x9DA9	# <CJK>
-0x9DAB	# <CJK>
-0x9DAF	# <CJK>
-0x9DB2	# <CJK>
 0x9DB4	# <CJK>
-0x9DB8	# <CJK>
-0x9DBA	# <CJK>
-0x9DBB	# <CJK>
-0x9DC1	# <CJK>
-0x9DC2	# <CJK>
-0x9DC4	# <CJK>
-0x9DC6	# <CJK>
-0x9DCF	# <CJK>
-0x9DD3	# <CJK>
-0x9DD9	# <CJK>
-0x9DE6	# <CJK>
-0x9DED	# <CJK>
-0x9DEF	# <CJK>
-0x9DF2	# <CJK>
-0x9DF8	# <CJK>
-0x9DF9	# <CJK>
-0x9DFA	# <CJK>
-0x9DFD	# <CJK>
-0x9E1A	# <CJK>
-0x9E1B	# <CJK>
-0x9E1E	# <CJK>
-0x9E75	# <CJK>
-0x9E78	# <CJK>
-0x9E79	# <CJK>
-0x9E7D	# <CJK>
 0x9E7F	# <CJK>
-0x9E81	# <CJK>
-0x9E88	# <CJK>
-0x9E8B	# <CJK>
-0x9E8C	# <CJK>
-0x9E91	# <CJK>
-0x9E92	# <CJK>
 0x9E93	# <CJK>
-0x9E95	# <CJK>
 0x9E97	# <CJK>
-0x9E9D	# <CJK>
-0x9E9F	# <CJK>
-0x9EA5	# <CJK>
 0x9EA6	# <CJK>
-0x9EA9	# <CJK>
-0x9EAA	# <CJK>
-0x9EAD	# <CJK>
-0x9EB8	# <CJK>
-0x9EB9	# <CJK>
 0x9EBA	# <CJK>
 0x9EBB	# <CJK>
-0x9EBC	# <CJK>
-0x9EBE	# <CJK>
-0x9EBF	# <CJK>
 0x9EC4	# <CJK>
-0x9ECC	# <CJK>
-0x9ECD	# <CJK>
-0x9ECE	# <CJK>
-0x9ECF	# <CJK>
-0x9ED0	# <CJK>
 0x9ED2	# <CJK>
-0x9ED4	# <CJK>
-0x9ED8	# <CJK>
 0x9ED9	# <CJK>
-0x9EDB	# <CJK>
-0x9EDC	# <CJK>
-0x9EDD	# <CJK>
-0x9EDE	# <CJK>
-0x9EE0	# <CJK>
-0x9EE5	# <CJK>
-0x9EE8	# <CJK>
-0x9EEF	# <CJK>
-0x9EF4	# <CJK>
-0x9EF6	# <CJK>
-0x9EF7	# <CJK>
-0x9EF9	# <CJK>
-0x9EFB	# <CJK>
-0x9EFC	# <CJK>
-0x9EFD	# <CJK>
-0x9F07	# <CJK>
-0x9F08	# <CJK>
-0x9F0E	# <CJK>
 0x9F13	# <CJK>
-0x9F15	# <CJK>
-0x9F20	# <CJK>
-0x9F21	# <CJK>
-0x9F2C	# <CJK>
 0x9F3B	# <CJK>
-0x9F3E	# <CJK>
-0x9F4A	# <CJK>
-0x9F4B	# <CJK>
-0x9F4E	# <CJK>
-0x9F4F	# <CJK>
-0x9F52	# <CJK>
-0x9F54	# <CJK>
-0x9F5F	# <CJK>
-0x9F60	# <CJK>
-0x9F61	# <CJK>
 0x9F62	# <CJK>
-0x9F63	# <CJK>
-0x9F66	# <CJK>
-0x9F67	# <CJK>
-0x9F6A	# <CJK>
-0x9F6C	# <CJK>
-0x9F72	# <CJK>
-0x9F76	# <CJK>
-0x9F77	# <CJK>
-0x9F8D	# <CJK>
-0x9F95	# <CJK>
-0x9F9C	# <CJK>
-0x9F9D	# <CJK>
-0x9FA0	# <CJK>
-#0xFFE5	# FULLWIDTH YEN SIGN
+#0x20B9F	# <CJK>
-- 
2.3.3

From 48c8b7938a0f1412d31dbe2f4e332e460f624068 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 13 May 2014 21:21:43 +0900
Subject: [PATCH] Allow the modification on FcTypeVoid with FcTypeLangSet and
 FcTypeCharSet

FcTypeVoid is likely to happen when 'lang' and 'charset'
is deleted by 'delete' or 'delete_all' mode in edit.
Without this change, any modification on them are simply
ignored.

This is useful to make a lot of changes, particularly
when one wants to add a few and delete a lot say.
---
 src/fccfg.c     | 10 ++++++++++
 src/fccharset.c | 15 +++++++++++++++
 src/fcint.h     |  3 +++
 src/fclang.c    | 27 +++++++++++++++------------
 4 files changed, 43 insertions(+), 12 deletions(-)

diff --git a/src/fccfg.c b/src/fccfg.c
index cdb8c0f..fe69eec 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -722,6 +722,16 @@ FcConfigPromote (FcValue v, FcValue u, FcValuePromotionBuffer *buf)
 	v.u.l = FcLangSetPromote (v.u.s, buf);
 	v.type = FcTypeLangSet;
     }
+    else if (v.type == FcTypeVoid && u.type == FcTypeLangSet)
+    {
+	v.u.l = FcLangSetPromote (NULL, buf);
+	v.type = FcTypeLangSet;
+    }
+    else if (v.type == FcTypeVoid && u.type == FcTypeCharSet)
+    {
+	v.u.c = FcCharSetPromote (buf);
+	v.type = FcTypeCharSet;
+    }
     if (buf && v.type == FcTypeDouble && u.type == FcTypeRange)
     {
 	v.u.r = FcRangePromote (v.u.d, buf);
diff --git a/src/fccharset.c b/src/fccharset.c
index c9f928c..43a3cc0 100644
--- a/src/fccharset.c
+++ b/src/fccharset.c
@@ -43,6 +43,21 @@ FcCharSetCreate (void)
 }
 
 FcCharSet *
+FcCharSetPromote (FcValuePromotionBuffer *vbuf)
+{
+    FcCharSet *fcs = (FcCharSet *) vbuf;
+
+    FC_ASSERT_STATIC (sizeof (FcCharSet) <= sizeof (FcValuePromotionBuffer));
+
+    FcRefSetConst (&fcs->ref);
+    fcs->num = 0;
+    fcs->leaves_offset = 0;
+    fcs->numbers_offset = 0;
+
+    return fcs;
+}
+
+FcCharSet *
 FcCharSetNew (void)
 {
     return FcCharSetCreate ();
diff --git a/src/fcint.h b/src/fcint.h
index dd26fd8..3950e01 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -720,6 +720,9 @@ FcPrivate FcLangSet *
 FcLangSetSerialize(FcSerialize *serialize, const FcLangSet *l);
 
 /* fccharset.c */
+FcPrivate FcCharSet *
+FcCharSetPromote (FcValuePromotionBuffer *vbuf);
+
 FcPrivate void
 FcLangCharSetPopulate (void);
 
diff --git a/src/fclang.c b/src/fclang.c
index 9f685f6..b1fd1bc 100644
--- a/src/fclang.c
+++ b/src/fclang.c
@@ -720,19 +720,22 @@ FcLangSetPromote (const FcChar8 *lang, FcValuePromotionBuffer *vbuf)
     memset (buf->ls.map, '\0', sizeof (buf->ls.map));
     buf->ls.map_size = NUM_LANG_SET_MAP;
     buf->ls.extra = 0;
-    id = FcLangSetIndex (lang);
-    if (id > 0)
+    if (lang)
     {
-	FcLangSetBitSet (&buf->ls, id);
-    }
-    else
-    {
-	buf->ls.extra = &buf->strs;
-	buf->strs.num = 1;
-	buf->strs.size = 1;
-	buf->strs.strs = &buf->str;
-	FcRefInit (&buf->strs.ref, 1);
-	buf->str = (FcChar8 *) lang;
+	id = FcLangSetIndex (lang);
+	if (id > 0)
+	{
+	    FcLangSetBitSet (&buf->ls, id);
+	}
+	else
+	{
+	    buf->ls.extra = &buf->strs;
+	    buf->strs.num = 1;
+	    buf->strs.size = 1;
+	    buf->strs.strs = &buf->str;
+	    FcRefInit (&buf->strs.ref, 1);
+	    buf->str = (FcChar8 *) lang;
+	}
     }
     return &buf->ls;
 }
-- 
2.3.3

From e4d8847eee14ddfa9632057bca36cb60dfa1b35f Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 16 May 2014 13:45:44 -0600
Subject: [PATCH] Remove unused code

---
 src/fchash.c | 41 -----------------------------------------
 src/fcint.h  |  4 ----
 2 files changed, 45 deletions(-)

diff --git a/src/fchash.c b/src/fchash.c
index 3830002..ede41d2 100644
--- a/src/fchash.c
+++ b/src/fchash.c
@@ -160,47 +160,6 @@ FcHashSHA256ToString (FcChar32 *hash)
 }
 
 FcChar8 *
-FcHashGetSHA256Digest (const FcChar8 *input_strings,
-		       size_t         len)
-{
-    size_t i, round_len = len / 64;
-    char block[64];
-    FcChar32 *ret = FcHashInitSHA256Digest ();
-
-    if (!ret)
-	return NULL;
-
-    for (i = 0; i < round_len; i++)
-    {
-	FcHashComputeSHA256Digest (ret, (const char *)&input_strings[i * 64]);
-    }
-    /* padding */
-    if ((len % 64) != 0)
-	memcpy (block, &input_strings[len / 64], len % 64);
-    memset (&block[len % 64], 0, 64 - (len % 64));
-    block[len % 64] = 0x80;
-    if ((64 - (len % 64)) < 9)
-    {
-	/* process a block once */
-	FcHashComputeSHA256Digest (ret, block);
-	memset (block, 0, 64);
-    }
-    /* set input size at the end */
-    len *= 8;
-    block[63 - 0] =  (uint64_t)len        & 0xff;
-    block[63 - 1] = ((uint64_t)len >>  8) & 0xff;
-    block[63 - 2] = ((uint64_t)len >> 16) & 0xff;
-    block[63 - 3] = ((uint64_t)len >> 24) & 0xff;
-    block[63 - 4] = ((uint64_t)len >> 32) & 0xff;
-    block[63 - 5] = ((uint64_t)len >> 40) & 0xff;
-    block[63 - 6] = ((uint64_t)len >> 48) & 0xff;
-    block[63 - 7] = ((uint64_t)len >> 56) & 0xff;
-    FcHashComputeSHA256Digest (ret, block);
-
-    return FcHashSHA256ToString (ret);
-}
-
-FcChar8 *
 FcHashGetSHA256DigestFromFile (const FcChar8 *filename)
 {
     FILE *fp = fopen ((const char *)filename, "rb");
diff --git a/src/fcint.h b/src/fcint.h
index 3950e01..094e6e0 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -868,10 +868,6 @@ FcFontSetDeserialize (const FcFontSet *set);
 
 /* fchash.c */
 FcPrivate FcChar8 *
-FcHashGetSHA256Digest (const FcChar8 *input_strings,
-		       size_t         len);
-
-FcPrivate FcChar8 *
 FcHashGetSHA256DigestFromFile (const FcChar8 *filename);
 
 FcPrivate FcChar8 *
-- 
2.3.3

From 748e77e89f8f6ba297ce9d206ac3834ae087201d Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 16 May 2014 14:03:19 -0600
Subject: [PATCH] Simplify hash code

---
 src/fcfreetype.c |  4 +--
 src/fchash.c     | 94 ++++++++++++++++++++++++++------------------------------
 src/fcint.h      |  6 ++--
 3 files changed, 48 insertions(+), 56 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index d0932b3..cd354d5 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1715,7 +1715,7 @@ FcFreeTypeQueryFace (const FT_Face  face,
 	    goto bail3;
 	}
 	memset (&fontdata[len], 0, alen - len);
-	hashstr = FcHashGetSHA256DigestFromMemory (fontdata, len);
+	hashstr = FcHashGetDigestFromMemory (fontdata, len);
 	free (fontdata);
     }
     else if (err == FT_Err_Invalid_Face_Handle)
@@ -1723,7 +1723,7 @@ FcFreeTypeQueryFace (const FT_Face  face,
 	/* font may not support SFNT. falling back to
 	 * read the font data from file directly
 	 */
-	hashstr = FcHashGetSHA256DigestFromFile (file);
+	hashstr = FcHashGetDigestFromFile (file);
     }
     else
     {
diff --git a/src/fchash.c b/src/fchash.c
index ede41d2..66e73f0 100644
--- a/src/fchash.c
+++ b/src/fchash.c
@@ -3,7 +3,9 @@
  *
  * Copyright © 2003 Keith Packard
  * Copyright © 2013 Red Hat, Inc.
+ * Copyright © 2014 Google, Inc.
  * Red Hat Author(s): Akira TAGOH
+ * Google Author(s): Behdad Esfahbod
  *
  * Permission to use, copy, modify, distribute, and sell this software and its
  * documentation for any purpose is hereby granted without fee, provided that
@@ -27,6 +29,9 @@
 #include <stdio.h>
 #include <string.h>
 
+/* SHA256 */
+
+
 #define ROTRN(w, v, n)	((((FcChar32)v) >> n) | (((FcChar32)v) << (w - n)))
 #define ROTR32(v, n)	ROTRN(32, v, n)
 #define SHR(v, n)	(v >> n)
@@ -38,28 +43,22 @@
 #define ss1(x)		(ROTR32(x, 17) ^ ROTR32(x, 19) ^ SHR(x, 10))
 
 
-static FcChar32 *
-FcHashInitSHA256Digest (void)
+typedef FcChar32 FcHashDigest[8];
+
+static void
+FcHashInitDigest (FcHashDigest digest)
 {
-    int i;
-    static const FcChar32 h[] = {
+    static const FcHashDigest init = {
 	0x6a09e667UL, 0xbb67ae85UL, 0x3c6ef372UL, 0xa54ff53aUL,
 	0x510e527fUL, 0x9b05688cUL, 0x1f83d9abUL, 0x5be0cd19UL
     };
-    FcChar32 *ret = malloc (sizeof (FcChar32) * 8);
-
-    if (!ret)
-	return NULL;
-
-    for (i = 0; i < 8; i++)
-	ret[i] = h[i];
 
-    return ret;
+    memcpy (digest, init, sizeof (FcHashDigest));
 }
 
 static void
-FcHashComputeSHA256Digest (FcChar32   *hash,
-			   const char *block)
+FcHashDigestAddBlock (FcHashDigest digest,
+		      const char   block[64])
 {
     static const FcChar32 k[] = {
 	0x428a2f98UL, 0x71374491UL, 0xb5c0fbcfUL, 0xe9b5dba5UL,
@@ -82,7 +81,7 @@ FcHashComputeSHA256Digest (FcChar32   *hash,
     FcChar32 w[64], i, j, t1, t2;
     FcChar32 a, b, c, d, e, f, g, h;
 
-#define H(n)	(hash[n])
+#define H(n)	(digest[n])
 
     a = H(0);
     b = H(1);
@@ -131,51 +130,46 @@ FcHashComputeSHA256Digest (FcChar32   *hash,
 }
 
 static FcChar8 *
-FcHashSHA256ToString (FcChar32 *hash)
+FcHashToString (const FcHashDigest digest)
 {
     FcChar8 *ret = NULL;
     static const char hex[] = "0123456789abcdef";
     int i, j;
 
-    if (hash)
+    ret = malloc (sizeof (FcChar8) * (8 * 8 + 7 + 1));
+    if (!ret)
+	return NULL;
+    memcpy (ret, "sha256:", 7);
+#define H(n)	digest[n]
+    for (i = 0; i < 8; i++)
     {
-	ret = malloc (sizeof (FcChar8) * (8 * 8 + 7 + 1));
-	if (!ret)
-	    return NULL;
-	memcpy (ret, "sha256:", 7);
-#define H(n)	hash[n]
-	for (i = 0; i < 8; i++)
-	{
-	    FcChar32 v = H(i);
+	FcChar32 v = H(i);
 
-	    for (j = 0; j < 8; j++)
-		ret[7 + (i * 8) + j] = hex[(v >> (28 - j * 4)) & 0xf];
-	}
-	ret[7 + i * 8] = 0;
-#undef H
-	free (hash);
+	for (j = 0; j < 8; j++)
+	    ret[7 + (i * 8) + j] = hex[(v >> (28 - j * 4)) & 0xf];
     }
+    ret[7 + i * 8] = 0;
+#undef H
 
     return ret;
 }
 
 FcChar8 *
-FcHashGetSHA256DigestFromFile (const FcChar8 *filename)
+FcHashGetDigestFromFile (const FcChar8 *filename)
 {
-    FILE *fp = fopen ((const char *)filename, "rb");
+    FcHashDigest digest;
+    FILE *fp;
     char ibuf[64];
-    FcChar32 *ret;
     size_t len;
     struct stat st;
 
+    fp = fopen ((const char *)filename, "rb");
     if (!fp)
 	return NULL;
 
-    if (FcStat (filename, &st))
-	goto bail0;
+    FcHashInitDigest (digest);
 
-    ret = FcHashInitSHA256Digest ();
-    if (!ret)
+    if (FcStat (filename, &st))
 	goto bail0;
 
     while (!feof (fp))
@@ -190,7 +184,7 @@ FcHashGetSHA256DigestFromFile (const FcChar8 *filename)
 	    if ((64 - len) < 9)
 	    {
 		/* process a block once */
-		FcHashComputeSHA256Digest (ret, ibuf);
+		FcHashDigestAddBlock (digest, ibuf);
 		memset (ibuf, 0, 64);
 	    }
 	    /* set input size at the end */
@@ -203,17 +197,17 @@ FcHashGetSHA256DigestFromFile (const FcChar8 *filename)
 	    ibuf[63 - 5] = (v >> 40) & 0xff;
 	    ibuf[63 - 6] = (v >> 48) & 0xff;
 	    ibuf[63 - 7] = (v >> 56) & 0xff;
-	    FcHashComputeSHA256Digest (ret, ibuf);
+	    FcHashDigestAddBlock (digest, ibuf);
 	    break;
 	}
 	else
 	{
-	    FcHashComputeSHA256Digest (ret, ibuf);
+	    FcHashDigestAddBlock (digest, ibuf);
 	}
     }
     fclose (fp);
 
-    return FcHashSHA256ToString (ret);
+    return FcHashToString (digest);
 
 bail0:
     fclose (fp);
@@ -222,16 +216,14 @@ bail0:
 }
 
 FcChar8 *
-FcHashGetSHA256DigestFromMemory (const char *fontdata,
+FcHashGetDigestFromMemory (const char *fontdata,
 				 size_t      length)
 {
+    FcHashDigest digest;
     char ibuf[64];
-    FcChar32 *ret;
     size_t i = 0;
 
-    ret = FcHashInitSHA256Digest ();
-    if (!ret)
-	return NULL;
+    FcHashInitDigest (digest);
 
     while (i <= length)
     {
@@ -249,7 +241,7 @@ FcHashGetSHA256DigestFromMemory (const char *fontdata,
 	    if ((64 - n) < 9)
 	    {
 		/* process a block once */
-		FcHashComputeSHA256Digest (ret, ibuf);
+		FcHashDigestAddBlock (digest, ibuf);
 		memset (ibuf, 0, 64);
 	    }
 	    /* set input size at the end */
@@ -262,15 +254,15 @@ FcHashGetSHA256DigestFromMemory (const char *fontdata,
 	    ibuf[63 - 5] = (v >> 40) & 0xff;
 	    ibuf[63 - 6] = (v >> 48) & 0xff;
 	    ibuf[63 - 7] = (v >> 56) & 0xff;
-	    FcHashComputeSHA256Digest (ret, ibuf);
+	    FcHashDigestAddBlock (digest, ibuf);
 	    break;
 	}
 	else
 	{
-	    FcHashComputeSHA256Digest (ret, &fontdata[i]);
+	    FcHashDigestAddBlock (digest, &fontdata[i]);
 	}
 	i += 64;
     }
 
-    return FcHashSHA256ToString (ret);
+    return FcHashToString (digest);
 }
diff --git a/src/fcint.h b/src/fcint.h
index 094e6e0..b15123b 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -868,11 +868,11 @@ FcFontSetDeserialize (const FcFontSet *set);
 
 /* fchash.c */
 FcPrivate FcChar8 *
-FcHashGetSHA256DigestFromFile (const FcChar8 *filename);
+FcHashGetDigestFromFile (const FcChar8 *filename);
 
 FcPrivate FcChar8 *
-FcHashGetSHA256DigestFromMemory (const char *fontdata,
-				 size_t      length);
+FcHashGetDigestFromMemory (const char *fontdata,
+			   size_t      length);
 
 /* fcinit.c */
 FcPrivate FcConfig *
-- 
2.3.3

From 8284df49ef45678781fc6e05d18cc04acf04cf3c Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 16 May 2014 14:17:45 -0600
Subject: [PATCH] Further simplify hash code

---
 src/fchash.c | 88 ++++++++++++++++++++++++++----------------------------------
 1 file changed, 38 insertions(+), 50 deletions(-)

diff --git a/src/fchash.c b/src/fchash.c
index 66e73f0..3fc51f7 100644
--- a/src/fchash.c
+++ b/src/fchash.c
@@ -129,6 +129,41 @@ FcHashDigestAddBlock (FcHashDigest digest,
 #undef H
 }
 
+static void
+FcHashDigestFinish (FcHashDigest  digest,
+		    const char   *residual, /* < 64 bytes */
+		    size_t        total_len)
+{
+    char ibuf[64];
+    unsigned int len = total_len % 64;
+    uint64_t v;
+
+    if (!len)
+	return;
+
+    memcpy (ibuf, residual, len);
+    memset (ibuf + len, 0, 64 - len);
+    ibuf[len] = 0x80;
+
+    if ((64 - len) < 9)
+    {
+	FcHashDigestAddBlock (digest, ibuf);
+	memset (ibuf, 0, 64);
+    }
+
+    /* set input size at the end */
+    v = (uint64_t) total_len * 8;
+    ibuf[63 - 0] =  v        & 0xff;
+    ibuf[63 - 1] = (v >>  8) & 0xff;
+    ibuf[63 - 2] = (v >> 16) & 0xff;
+    ibuf[63 - 3] = (v >> 24) & 0xff;
+    ibuf[63 - 4] = (v >> 32) & 0xff;
+    ibuf[63 - 5] = (v >> 40) & 0xff;
+    ibuf[63 - 6] = (v >> 48) & 0xff;
+    ibuf[63 - 7] = (v >> 56) & 0xff;
+    FcHashDigestAddBlock (digest, ibuf);
+}
+
 static FcChar8 *
 FcHashToString (const FcHashDigest digest)
 {
@@ -176,28 +211,7 @@ FcHashGetDigestFromFile (const FcChar8 *filename)
     {
 	if ((len = fread (ibuf, sizeof (char), 64, fp)) < 64)
 	{
-	    uint64_t v;
-
-	    /* add a padding */
-	    memset (&ibuf[len], 0, 64 - len);
-	    ibuf[len] = 0x80;
-	    if ((64 - len) < 9)
-	    {
-		/* process a block once */
-		FcHashDigestAddBlock (digest, ibuf);
-		memset (ibuf, 0, 64);
-	    }
-	    /* set input size at the end */
-	    v = (long)st.st_size * 8;
-	    ibuf[63 - 0] =  v        & 0xff;
-	    ibuf[63 - 1] = (v >>  8) & 0xff;
-	    ibuf[63 - 2] = (v >> 16) & 0xff;
-	    ibuf[63 - 3] = (v >> 24) & 0xff;
-	    ibuf[63 - 4] = (v >> 32) & 0xff;
-	    ibuf[63 - 5] = (v >> 40) & 0xff;
-	    ibuf[63 - 6] = (v >> 48) & 0xff;
-	    ibuf[63 - 7] = (v >> 56) & 0xff;
-	    FcHashDigestAddBlock (digest, ibuf);
+	    FcHashDigestFinish (digest, ibuf, st.st_size);
 	    break;
 	}
 	else
@@ -217,10 +231,9 @@ bail0:
 
 FcChar8 *
 FcHashGetDigestFromMemory (const char *fontdata,
-				 size_t      length)
+			   size_t      length)
 {
     FcHashDigest digest;
-    char ibuf[64];
     size_t i = 0;
 
     FcHashInitDigest (digest);
@@ -229,32 +242,7 @@ FcHashGetDigestFromMemory (const char *fontdata,
     {
 	if ((length - i) < 64)
 	{
-	    uint64_t v;
-	    size_t n;
-
-	    /* add a padding */
-	    n = length - i;
-	    if (n > 0)
-		memcpy (ibuf, &fontdata[i], n);
-	    memset (&ibuf[n], 0, 64 - n);
-	    ibuf[n] = 0x80;
-	    if ((64 - n) < 9)
-	    {
-		/* process a block once */
-		FcHashDigestAddBlock (digest, ibuf);
-		memset (ibuf, 0, 64);
-	    }
-	    /* set input size at the end */
-	    v = length * 8;
-	    ibuf[63 - 0] =  v        & 0xff;
-	    ibuf[63 - 1] = (v >>  8) & 0xff;
-	    ibuf[63 - 2] = (v >> 16) & 0xff;
-	    ibuf[63 - 3] = (v >> 24) & 0xff;
-	    ibuf[63 - 4] = (v >> 32) & 0xff;
-	    ibuf[63 - 5] = (v >> 40) & 0xff;
-	    ibuf[63 - 6] = (v >> 48) & 0xff;
-	    ibuf[63 - 7] = (v >> 56) & 0xff;
-	    FcHashDigestAddBlock (digest, ibuf);
+	    FcHashDigestFinish (digest, fontdata+i, length);
 	    break;
 	}
 	else
-- 
2.3.3

From 3f992254f2a3b7f88df989067785141cbf265037 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 16 May 2014 15:02:58 -0600
Subject: [PATCH] Rewrite hashing to use FT_Stream directly

This is more robust but introduces a small change in behavior:
For .pcf.gz fonts, the new code calculates the hash of the uncompressed
font data whereas the original code was calculating the hash of the
compressed data.

No big deal IMO.
---
 src/fcfreetype.c | 78 ++++++++++++++++++++++++++++++--------------------------
 src/fchash.c     | 75 +++--------------------------------------------------
 src/fcint.h      | 19 +++++++++++---
 3 files changed, 61 insertions(+), 111 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index cd354d5..72da5ca 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1104,9 +1104,6 @@ FcFreeTypeQueryFace (const FT_Face  face,
     char	    psname[256];
     const char	    *tmp;
 
-    FcChar8	    *hashstr = NULL;
-    FT_Error	    err;
-    FT_ULong	    len = 0, alen;
     FcRange	    *r = NULL;
     double	    lower_size = 0.0L, upper_size = DBL_MAX;
 
@@ -1699,46 +1696,55 @@ FcFreeTypeQueryFace (const FT_Face  face,
     if (!FcPatternAddBool (pat, FC_DECORATIVE, decorative))
 	goto bail1;
 
-    err = FT_Load_Sfnt_Table (face, 0, 0, NULL, &len);
-    if (err == FT_Err_Ok)
+
+    /*
+     * Compute hash digest for the font
+     */
     {
-	char *fontdata;
-
-	alen = (len + 63) & ~63;
-	fontdata = malloc (alen);
-	if (!fontdata)
-	    goto bail3;
-	err = FT_Load_Sfnt_Table (face, 0, 0, (FT_Byte *)fontdata, &len);
-	if (err != FT_Err_Ok)
+	FcChar8	    *hashstr = NULL;
+	FcHashDigest digest;
+
+	FcHashInitDigest (digest);
+
+	if (face->stream->read == NULL)
 	{
-	    free (fontdata);
-	    goto bail3;
+	    const char *data = (const char *) face->stream->base;
+	    size_t total_len = face->stream->size;
+	    size_t len = total_len;
+
+	    while (len >= 64)
+	    {
+		FcHashDigestAddBlock (digest, data);
+		data += 64;
+		len -= 64;
+	    }
+	    FcHashDigestFinish (digest, data, total_len);
+	} else {
+	    char data[64];
+	    size_t total_len = 0;
+	    size_t len = 0;
+
+	    while ((len = face->stream->read (face->stream, total_len, (unsigned char *) data, sizeof(data))) == 64)
+	    {
+		FcHashDigestAddBlock (digest, data);
+		total_len += 64;
+	    }
+	    total_len += len;
+	    FcHashDigestFinish (digest, data, total_len);
 	}
-	memset (&fontdata[len], 0, alen - len);
-	hashstr = FcHashGetDigestFromMemory (fontdata, len);
-	free (fontdata);
-    }
-    else if (err == FT_Err_Invalid_Face_Handle)
-    {
-	/* font may not support SFNT. falling back to
-	 * read the font data from file directly
-	 */
-	hashstr = FcHashGetDigestFromFile (file);
-    }
-    else
-    {
-	goto bail3;
-    }
-    if (hashstr)
-    {
-	if (!FcPatternAddString (pat, FC_HASH, hashstr))
+
+	hashstr = FcHashToString (digest);
+	if (hashstr)
 	{
+	    if (!FcPatternAddString (pat, FC_HASH, hashstr))
+	    {
+		free (hashstr);
+		goto bail1;
+	    }
 	    free (hashstr);
-	    goto bail1;
 	}
-	free (hashstr);
     }
-bail3:
+
 
     /*
      * Compute the unicode coverage for the font
diff --git a/src/fchash.c b/src/fchash.c
index 3fc51f7..1526cfd 100644
--- a/src/fchash.c
+++ b/src/fchash.c
@@ -43,9 +43,8 @@
 #define ss1(x)		(ROTR32(x, 17) ^ ROTR32(x, 19) ^ SHR(x, 10))
 
 
-typedef FcChar32 FcHashDigest[8];
 
-static void
+void
 FcHashInitDigest (FcHashDigest digest)
 {
     static const FcHashDigest init = {
@@ -56,7 +55,7 @@ FcHashInitDigest (FcHashDigest digest)
     memcpy (digest, init, sizeof (FcHashDigest));
 }
 
-static void
+void
 FcHashDigestAddBlock (FcHashDigest digest,
 		      const char   block[64])
 {
@@ -129,7 +128,7 @@ FcHashDigestAddBlock (FcHashDigest digest,
 #undef H
 }
 
-static void
+void
 FcHashDigestFinish (FcHashDigest  digest,
 		    const char   *residual, /* < 64 bytes */
 		    size_t        total_len)
@@ -164,7 +163,7 @@ FcHashDigestFinish (FcHashDigest  digest,
     FcHashDigestAddBlock (digest, ibuf);
 }
 
-static FcChar8 *
+FcChar8 *
 FcHashToString (const FcHashDigest digest)
 {
     FcChar8 *ret = NULL;
@@ -188,69 +187,3 @@ FcHashToString (const FcHashDigest digest)
 
     return ret;
 }
-
-FcChar8 *
-FcHashGetDigestFromFile (const FcChar8 *filename)
-{
-    FcHashDigest digest;
-    FILE *fp;
-    char ibuf[64];
-    size_t len;
-    struct stat st;
-
-    fp = fopen ((const char *)filename, "rb");
-    if (!fp)
-	return NULL;
-
-    FcHashInitDigest (digest);
-
-    if (FcStat (filename, &st))
-	goto bail0;
-
-    while (!feof (fp))
-    {
-	if ((len = fread (ibuf, sizeof (char), 64, fp)) < 64)
-	{
-	    FcHashDigestFinish (digest, ibuf, st.st_size);
-	    break;
-	}
-	else
-	{
-	    FcHashDigestAddBlock (digest, ibuf);
-	}
-    }
-    fclose (fp);
-
-    return FcHashToString (digest);
-
-bail0:
-    fclose (fp);
-
-    return NULL;
-}
-
-FcChar8 *
-FcHashGetDigestFromMemory (const char *fontdata,
-			   size_t      length)
-{
-    FcHashDigest digest;
-    size_t i = 0;
-
-    FcHashInitDigest (digest);
-
-    while (i <= length)
-    {
-	if ((length - i) < 64)
-	{
-	    FcHashDigestFinish (digest, fontdata+i, length);
-	    break;
-	}
-	else
-	{
-	    FcHashDigestAddBlock (digest, &fontdata[i]);
-	}
-	i += 64;
-    }
-
-    return FcHashToString (digest);
-}
diff --git a/src/fcint.h b/src/fcint.h
index b15123b..3d41b0c 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -867,12 +867,23 @@ FcPrivate FcFontSet *
 FcFontSetDeserialize (const FcFontSet *set);
 
 /* fchash.c */
-FcPrivate FcChar8 *
-FcHashGetDigestFromFile (const FcChar8 *filename);
+
+typedef FcChar32 FcHashDigest[8];
+
+FcPrivate void
+FcHashInitDigest (FcHashDigest digest);
+
+FcPrivate void
+FcHashDigestAddBlock (FcHashDigest digest,
+		      const char   block[64]);
+
+FcPrivate void
+FcHashDigestFinish (FcHashDigest  digest,
+		    const char   *residual, /* < 64 bytes */
+		    size_t        total_len);
 
 FcPrivate FcChar8 *
-FcHashGetDigestFromMemory (const char *fontdata,
-			   size_t      length);
+FcHashToString (const FcHashDigest digest);
 
 /* fcinit.c */
 FcPrivate FcConfig *
-- 
2.3.3

From 58acd993cb13b58c61633174071ef42da3dcac85 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 16 May 2014 15:08:52 -0600
Subject: [PATCH] Allow passing NULL for file to FcFreeTypeQueryFace()

---
 src/fcfreetype.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 72da5ca..3dd865a 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1321,7 +1321,7 @@ FcFreeTypeQueryFace (const FT_Face  face,
 	++nstyle;
     }
 
-    if (!nfamily)
+    if (!nfamily && file && *file)
     {
 	FcChar8	*start, *end;
 	FcChar8	*family;
@@ -1395,7 +1395,7 @@ FcFreeTypeQueryFace (const FT_Face  face,
     if (!FcPatternAddString (pat, FC_POSTSCRIPT_NAME, (const FcChar8 *)psname))
 	goto bail1;
 
-    if (!FcPatternAddString (pat, FC_FILE, file))
+    if (file && *file && !FcPatternAddString (pat, FC_FILE, file))
 	goto bail1;
 
     if (!FcPatternAddInteger (pat, FC_INDEX, id))
-- 
2.3.3

From f44bfad235e63bb792c38e16ae1fbd281ec1453b Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 5 Jun 2014 19:06:02 +0900
Subject: [PATCH] Workaround another race condition issue

See https://bugzilla.redhat.com/show_bug.cgi?id=921706
---
 src/fccache.c | 24 +++++++++++++++++++++++-
 src/fcdir.c   | 30 ++++++++++++++++++++++++------
 src/fcint.h   |  7 ++++++-
 3 files changed, 53 insertions(+), 8 deletions(-)

diff --git a/src/fccache.c b/src/fccache.c
index 5173e0b..085bd72 100644
--- a/src/fccache.c
+++ b/src/fccache.c
@@ -545,6 +545,26 @@ FcCacheTimeValid (FcCache *cache, struct stat *dir_stat)
     return cache->checksum == (int) dir_stat->st_mtime;
 }
 
+static FcBool
+FcCacheDirsValid (FcCache *cache)
+{
+    FcStrSet *dirs = FcStrSetCreate ();
+    FcBool ret = FcFalse;
+
+    if (!dirs)
+	goto bail;
+    if (!FcDirScanOnly (dirs, FcCacheDir (cache)))
+	goto bail1;
+    ret = cache->dirs_count == dirs->num;
+    if (FcDebug () & FC_DBG_CACHE)
+	printf ("%s: cache: %d, fs: %d\n", FcCacheDir (cache), cache->dirs_count, dirs->num);
+
+bail1:
+    FcStrSetDestroy (dirs);
+bail:
+    return ret;
+}
+
 /*
  * Map a cache file into memory
  */
@@ -559,7 +579,8 @@ FcDirCacheMapFd (int fd, struct stat *fd_stat, struct stat *dir_stat)
     cache = FcCacheFindByStat (fd_stat);
     if (cache)
     {
-	if (FcCacheTimeValid (cache, dir_stat))
+	if (FcCacheTimeValid (cache, dir_stat) &&
+	    FcCacheDirsValid (cache))
 	    return cache;
 	FcDirCacheUnload (cache);
 	cache = NULL;
@@ -611,6 +632,7 @@ FcDirCacheMapFd (int fd, struct stat *fd_stat, struct stat *dir_stat)
 	cache->version < FC_CACHE_CONTENT_VERSION ||
 	cache->size != (intptr_t) fd_stat->st_size ||
 	!FcCacheTimeValid (cache, dir_stat) ||
+	!FcCacheDirsValid (cache) ||
 	!FcCacheInsert (cache, fd_stat))
     {
 	if (allocated)
diff --git a/src/fcdir.c b/src/fcdir.c
index 3bcd0b8..49259c1 100644
--- a/src/fcdir.c
+++ b/src/fcdir.c
@@ -164,7 +164,8 @@ FcDirScanConfig (FcFontSet	*set,
 		 FcBlanks	*blanks,
 		 const FcChar8	*dir,
 		 FcBool		force, /* XXX unused */
-		 FcConfig	*config)
+		 FcConfig	*config,
+		 FcBool		scanOnly)
 {
     DIR			*d;
     struct dirent	*e;
@@ -180,7 +181,7 @@ FcDirScanConfig (FcFontSet	*set,
     if (!set && !dirs)
 	return FcTrue;
 
-    if (!blanks)
+    if (!blanks && !scanOnly)
 	blanks = FcConfigGetBlanks (config);
 
     /* freed below */
@@ -233,7 +234,17 @@ FcDirScanConfig (FcFontSet	*set,
      * Scan file files to build font patterns
      */
     for (i = 0; i < files->num; i++)
-	FcFileScanConfig (set, dirs, blanks, files->strs[i], config);
+    {
+	if (scanOnly)
+	{
+	    if (FcFileIsDir (files->strs[i]))
+		FcStrSetAdd (dirs, files->strs[i]);
+	}
+	else
+	{
+	    FcFileScanConfig (set, dirs, blanks, files->strs[i], config);
+	}
+    }
 
 bail2:
     FcStrSetDestroy (files);
@@ -257,7 +268,14 @@ FcDirScan (FcFontSet	    *set,
     if (cache || !force)
 	return FcFalse;
 
-    return FcDirScanConfig (set, dirs, blanks, dir, force, FcConfigGetCurrent ());
+    return FcDirScanConfig (set, dirs, blanks, dir, force, FcConfigGetCurrent (), FcFalse);
+}
+
+FcBool
+FcDirScanOnly (FcStrSet		*dirs,
+	       const FcChar8	*dir)
+{
+    return FcDirScanConfig (NULL, dirs, NULL, dir, FcTrue, NULL, FcTrue);
 }
 
 /*
@@ -288,7 +306,7 @@ FcDirCacheScan (const FcChar8 *dir, FcConfig *config)
     /*
      * Scan the dir
      */
-    if (!FcDirScanConfig (set, dirs, NULL, dir, FcTrue, config))
+    if (!FcDirScanConfig (set, dirs, NULL, dir, FcTrue, config, FcFalse))
 	goto bail2;
 
     /*
@@ -330,7 +348,7 @@ FcDirCacheRescan (const FcChar8 *dir, FcConfig *config)
     /*
      * Scan the dir
      */
-    if (!FcDirScanConfig (NULL, dirs, NULL, dir, FcTrue, config))
+    if (!FcDirScanConfig (NULL, dirs, NULL, dir, FcTrue, config, FcFalse))
 	goto bail1;
     /*
      * Rebuild the cache object
diff --git a/src/fcint.h b/src/fcint.h
index 3d41b0c..a1b147f 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -849,7 +849,12 @@ FcDirScanConfig (FcFontSet	*set,
 		 FcBlanks	*blanks,
 		 const FcChar8	*dir,
 		 FcBool		force,
-		 FcConfig	*config);
+		 FcConfig	*config,
+		 FcBool		scanOnly);
+
+FcPrivate FcBool
+FcDirScanOnly (FcStrSet		*dirs,
+	       const FcChar8	*dir);
 
 /* fcfont.c */
 FcPrivate int
-- 
2.3.3

From cd9631d83e51bab95413a8aa0e8ecc68f3e3a0fc Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 12 Jun 2014 17:01:07 -0400
Subject: [PATCH] [ko.orth] Remove U+3164 HANGUL FILLER

Better not to reject a font just over that.  Note that we do NOT
list U+115F and U+1160 either.
---
 fc-lang/ko.orth | 1 -
 1 file changed, 1 deletion(-)

diff --git a/fc-lang/ko.orth b/fc-lang/ko.orth
index 39114a5..4bb52c6 100644
--- a/fc-lang/ko.orth
+++ b/fc-lang/ko.orth
@@ -86,7 +86,6 @@
 0x3161  # HANGUL LETTER EU
 0x3162  # HANGUL LETTER YI
 0x3163  # HANGUL LETTER I
-0x3164  # HANGUL FILLER
 0x3165  # HANGUL LETTER SSANGNIEUN
 0x3166  # HANGUL LETTER NIEUN-TIKEUT
 0x3167  # HANGUL LETTER NIEUN-SIOS
-- 
2.3.3

From 75abdaf5c8e8b14c3e9e94ff5c563091594a32cf Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Mon, 9 Jun 2014 21:53:01 -0400
Subject: [PATCH] Deprecate FC_HASH and don't compute it

It was added without proper measurement and a fuzzy possible
use-case (font servers) in mind, but reality check shows that
this significantly slows down caching.  As such, deprecate it
and do NOT compute hash during caching.

Makes caching two to three times faster (ignoring the 2 second
delay in fc-cache).
---
 doc/fontconfig-devel.sgml | 2 +-
 fontconfig/fontconfig.h   | 2 +-
 src/fcfreetype.c          | 2 ++
 src/fcobjs.h              | 4 ++--
 4 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/doc/fontconfig-devel.sgml b/doc/fontconfig-devel.sgml
index e2cb1c2..2b1122f 100644
--- a/doc/fontconfig-devel.sgml
+++ b/doc/fontconfig-devel.sgml
@@ -198,7 +198,7 @@ convenience for the application's rendering mechanism.
                                                   stylelang and fullnamelang
     prgname        FC_PRGNAME             String  Name of the running program
     hash           FC_HASH                String  SHA256 hash value of the font data
-                                                  with "sha256:" prefix.
+                                                  with "sha256:" prefix (deprecated)
     postscriptname FC_POSTSCRIPT_NAME     String  Font name in PostScript
     </programlisting>
   </sect2>
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index 069cb60..8575cc4 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -115,7 +115,7 @@ typedef int		FcBool;
 #define FC_FONT_FEATURES    "fontfeatures"	/* String */
 #define FC_NAMELANG	    "namelang"		/* String RFC 3866 langs */
 #define FC_PRGNAME	    "prgname"		/* String */
-#define FC_HASH		    "hash"		/* String */
+#define FC_HASH		    "hash"		/* String (deprecated) */
 #define FC_POSTSCRIPT_NAME  "postscriptname"	/* String */
 
 #define FC_CACHE_SUFFIX		    ".cache-" FC_CACHE_VERSION
diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 3dd865a..464bc00 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1697,6 +1697,7 @@ FcFreeTypeQueryFace (const FT_Face  face,
 	goto bail1;
 
 
+#if 0
     /*
      * Compute hash digest for the font
      */
@@ -1744,6 +1745,7 @@ FcFreeTypeQueryFace (const FT_Face  face,
 	    free (hashstr);
 	}
     }
+#endif
 
 
     /*
diff --git a/src/fcobjs.h b/src/fcobjs.h
index 72e71f9..dc3d834 100644
--- a/src/fcobjs.h
+++ b/src/fcobjs.h
@@ -44,7 +44,7 @@ FC_OBJECT (AUTOHINT,		FcTypeBool,	NULL)
 FC_OBJECT (GLOBAL_ADVANCE,	FcTypeBool,	NULL)	/* deprecated */
 FC_OBJECT (FILE,		FcTypeString,	FcCompareFilename)
 FC_OBJECT (INDEX,		FcTypeInteger,	NULL)
-FC_OBJECT (RASTERIZER,		FcTypeString,	FcCompareString)
+FC_OBJECT (RASTERIZER,		FcTypeString,	FcCompareString)	/* deprecated */
 FC_OBJECT (OUTLINE,		FcTypeBool,	FcCompareBool)
 FC_OBJECT (SCALABLE,		FcTypeBool,	FcCompareBool)
 FC_OBJECT (DPI,			FcTypeDouble,	NULL)
@@ -66,6 +66,6 @@ FC_OBJECT (LCD_FILTER,		FcTypeInteger,	NULL)
 FC_OBJECT (NAMELANG,		FcTypeString,	NULL)
 FC_OBJECT (FONT_FEATURES,	FcTypeString,	NULL)
 FC_OBJECT (PRGNAME,		FcTypeString,	NULL)
-FC_OBJECT (HASH,		FcTypeString,	FcCompareHash)
+FC_OBJECT (HASH,		FcTypeString,	FcCompareHash)	/* deprecated */
 FC_OBJECT (POSTSCRIPT_NAME,	FcTypeString,	FcComparePostScript)
 /* ^-------------- Add new objects here. */
-- 
2.3.3

From 8f62ccaa962b13781d7916d4d1c061993b991e69 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Mon, 9 Jun 2014 22:00:25 -0400
Subject: [PATCH] Remove unused FcHash code now that FC_HASH is deprecated

---
 src/Makefile.am  |   1 -
 src/fcfreetype.c |  51 ---------------
 src/fchash.c     | 189 -------------------------------------------------------
 src/fcint.h      |  19 ------
 4 files changed, 260 deletions(-)
 delete mode 100644 src/fchash.c

diff --git a/src/Makefile.am b/src/Makefile.am
index be20eba..c1991b2 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -139,7 +139,6 @@ libfontconfig_la_SOURCES = \
 	fcformat.c \
 	fcfreetype.c \
 	fcfs.c \
-	fchash.c \
 	fcinit.c \
 	fclang.c \
 	fclist.c \
diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 464bc00..baf13e5 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1697,57 +1697,6 @@ FcFreeTypeQueryFace (const FT_Face  face,
 	goto bail1;
 
 
-#if 0
-    /*
-     * Compute hash digest for the font
-     */
-    {
-	FcChar8	    *hashstr = NULL;
-	FcHashDigest digest;
-
-	FcHashInitDigest (digest);
-
-	if (face->stream->read == NULL)
-	{
-	    const char *data = (const char *) face->stream->base;
-	    size_t total_len = face->stream->size;
-	    size_t len = total_len;
-
-	    while (len >= 64)
-	    {
-		FcHashDigestAddBlock (digest, data);
-		data += 64;
-		len -= 64;
-	    }
-	    FcHashDigestFinish (digest, data, total_len);
-	} else {
-	    char data[64];
-	    size_t total_len = 0;
-	    size_t len = 0;
-
-	    while ((len = face->stream->read (face->stream, total_len, (unsigned char *) data, sizeof(data))) == 64)
-	    {
-		FcHashDigestAddBlock (digest, data);
-		total_len += 64;
-	    }
-	    total_len += len;
-	    FcHashDigestFinish (digest, data, total_len);
-	}
-
-	hashstr = FcHashToString (digest);
-	if (hashstr)
-	{
-	    if (!FcPatternAddString (pat, FC_HASH, hashstr))
-	    {
-		free (hashstr);
-		goto bail1;
-	    }
-	    free (hashstr);
-	}
-    }
-#endif
-
-
     /*
      * Compute the unicode coverage for the font
      */
diff --git a/src/fchash.c b/src/fchash.c
deleted file mode 100644
index 1526cfd..0000000
--- a/src/fchash.c
+++ /dev/null
@@ -1,189 +0,0 @@
-/*
- * fontconfig/src/fchash.c
- *
- * Copyright © 2003 Keith Packard
- * Copyright © 2013 Red Hat, Inc.
- * Copyright © 2014 Google, Inc.
- * Red Hat Author(s): Akira TAGOH
- * Google Author(s): Behdad Esfahbod
- *
- * Permission to use, copy, modify, distribute, and sell this software and its
- * documentation for any purpose is hereby granted without fee, provided that
- * the above copyright notice appear in all copies and that both that
- * copyright notice and this permission notice appear in supporting
- * documentation, and that the name of the author(s) not be used in
- * advertising or publicity pertaining to distribution of the software without
- * specific, written prior permission.  The authors make no
- * representations about the suitability of this software for any purpose.  It
- * is provided "as is" without express or implied warranty.
- *
- * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
- * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
- * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR
- * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
- * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
- * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
- * PERFORMANCE OF THIS SOFTWARE.
- */
-#include "fcint.h"
-#include <stdio.h>
-#include <string.h>
-
-/* SHA256 */
-
-
-#define ROTRN(w, v, n)	((((FcChar32)v) >> n) | (((FcChar32)v) << (w - n)))
-#define ROTR32(v, n)	ROTRN(32, v, n)
-#define SHR(v, n)	(v >> n)
-#define Ch(x, y, z)	((x & y) ^ (~x & z))
-#define Maj(x, y, z)	((x & y) ^ (x & z) ^ (y & z))
-#define SS0(x)		(ROTR32(x, 2) ^ ROTR32(x, 13) ^ ROTR32(x, 22))
-#define SS1(x)		(ROTR32(x, 6) ^ ROTR32(x, 11) ^ ROTR32(x, 25))
-#define ss0(x)		(ROTR32(x, 7) ^ ROTR32(x, 18) ^ SHR(x, 3))
-#define ss1(x)		(ROTR32(x, 17) ^ ROTR32(x, 19) ^ SHR(x, 10))
-
-
-
-void
-FcHashInitDigest (FcHashDigest digest)
-{
-    static const FcHashDigest init = {
-	0x6a09e667UL, 0xbb67ae85UL, 0x3c6ef372UL, 0xa54ff53aUL,
-	0x510e527fUL, 0x9b05688cUL, 0x1f83d9abUL, 0x5be0cd19UL
-    };
-
-    memcpy (digest, init, sizeof (FcHashDigest));
-}
-
-void
-FcHashDigestAddBlock (FcHashDigest digest,
-		      const char   block[64])
-{
-    static const FcChar32 k[] = {
-	0x428a2f98UL, 0x71374491UL, 0xb5c0fbcfUL, 0xe9b5dba5UL,
-	0x3956c25bUL, 0x59f111f1UL, 0x923f82a4UL, 0xab1c5ed5UL,
-	0xd807aa98UL, 0x12835b01UL, 0x243185beUL, 0x550c7dc3UL,
-	0x72be5d74UL, 0x80deb1feUL, 0x9bdc06a7UL, 0xc19bf174UL,
-	0xe49b69c1UL, 0xefbe4786UL, 0x0fc19dc6UL, 0x240ca1ccUL,
-	0x2de92c6fUL, 0x4a7484aaUL, 0x5cb0a9dcUL, 0x76f988daUL,
-	0x983e5152UL, 0xa831c66dUL, 0xb00327c8UL, 0xbf597fc7UL,
-	0xc6e00bf3UL, 0xd5a79147UL, 0x06ca6351UL, 0x14292967UL,
-	0x27b70a85UL, 0x2e1b2138UL, 0x4d2c6dfcUL, 0x53380d13UL,
-	0x650a7354UL, 0x766a0abbUL, 0x81c2c92eUL, 0x92722c85UL,
-	0xa2bfe8a1UL, 0xa81a664bUL, 0xc24b8b70UL, 0xc76c51a3UL,
-	0xd192e819UL, 0xd6990624UL, 0xf40e3585UL, 0x106aa070UL,
-	0x19a4c116UL, 0x1e376c08UL, 0x2748774cUL, 0x34b0bcb5UL,
-	0x391c0cb3UL, 0x4ed8aa4aUL, 0x5b9cca4fUL, 0x682e6ff3UL,
-	0x748f82eeUL, 0x78a5636fUL, 0x84c87814UL, 0x8cc70208UL,
-	0x90befffaUL, 0xa4506cebUL, 0xbef9a3f7UL, 0xc67178f2UL
-    };
-    FcChar32 w[64], i, j, t1, t2;
-    FcChar32 a, b, c, d, e, f, g, h;
-
-#define H(n)	(digest[n])
-
-    a = H(0);
-    b = H(1);
-    c = H(2);
-    d = H(3);
-    e = H(4);
-    f = H(5);
-    g = H(6);
-    h = H(7);
-
-    for (i = 0; i < 16; i++)
-    {
-	j =  (block[(i * 4) + 0] & 0xff) << (8 * 3);
-	j |= (block[(i * 4) + 1] & 0xff) << (8 * 2);
-	j |= (block[(i * 4) + 2] & 0xff) << (8 * 1);
-	j |= (block[(i * 4) + 3] & 0xff);
-	w[i] = j;
-    }
-    for (i = 16; i < 64; i++)
-	w[i] = ss1(w[i - 2]) + w[i - 7] + ss0(w[i - 15]) + w[i - 16];
-
-    for (i = 0; i < 64; i++)
-    {
-	t1 = h + SS1(e) + Ch(e, f, g) + k[i] + w[i];
-	t2 = SS0(a) + Maj(a, b, c);
-	h = g;
-	g = f;
-	f = e;
-	e = d + t1;
-	d = c;
-	c = b;
-	b = a;
-	a = t1 + t2;
-    }
-
-    H(0) += a;
-    H(1) += b;
-    H(2) += c;
-    H(3) += d;
-    H(4) += e;
-    H(5) += f;
-    H(6) += g;
-    H(7) += h;
-
-#undef H
-}
-
-void
-FcHashDigestFinish (FcHashDigest  digest,
-		    const char   *residual, /* < 64 bytes */
-		    size_t        total_len)
-{
-    char ibuf[64];
-    unsigned int len = total_len % 64;
-    uint64_t v;
-
-    if (!len)
-	return;
-
-    memcpy (ibuf, residual, len);
-    memset (ibuf + len, 0, 64 - len);
-    ibuf[len] = 0x80;
-
-    if ((64 - len) < 9)
-    {
-	FcHashDigestAddBlock (digest, ibuf);
-	memset (ibuf, 0, 64);
-    }
-
-    /* set input size at the end */
-    v = (uint64_t) total_len * 8;
-    ibuf[63 - 0] =  v        & 0xff;
-    ibuf[63 - 1] = (v >>  8) & 0xff;
-    ibuf[63 - 2] = (v >> 16) & 0xff;
-    ibuf[63 - 3] = (v >> 24) & 0xff;
-    ibuf[63 - 4] = (v >> 32) & 0xff;
-    ibuf[63 - 5] = (v >> 40) & 0xff;
-    ibuf[63 - 6] = (v >> 48) & 0xff;
-    ibuf[63 - 7] = (v >> 56) & 0xff;
-    FcHashDigestAddBlock (digest, ibuf);
-}
-
-FcChar8 *
-FcHashToString (const FcHashDigest digest)
-{
-    FcChar8 *ret = NULL;
-    static const char hex[] = "0123456789abcdef";
-    int i, j;
-
-    ret = malloc (sizeof (FcChar8) * (8 * 8 + 7 + 1));
-    if (!ret)
-	return NULL;
-    memcpy (ret, "sha256:", 7);
-#define H(n)	digest[n]
-    for (i = 0; i < 8; i++)
-    {
-	FcChar32 v = H(i);
-
-	for (j = 0; j < 8; j++)
-	    ret[7 + (i * 8) + j] = hex[(v >> (28 - j * 4)) & 0xf];
-    }
-    ret[7 + i * 8] = 0;
-#undef H
-
-    return ret;
-}
diff --git a/src/fcint.h b/src/fcint.h
index a1b147f..6871fdc 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -871,25 +871,6 @@ FcFontSetSerialize (FcSerialize *serialize, const FcFontSet * s);
 FcPrivate FcFontSet *
 FcFontSetDeserialize (const FcFontSet *set);
 
-/* fchash.c */
-
-typedef FcChar32 FcHashDigest[8];
-
-FcPrivate void
-FcHashInitDigest (FcHashDigest digest);
-
-FcPrivate void
-FcHashDigestAddBlock (FcHashDigest digest,
-		      const char   block[64]);
-
-FcPrivate void
-FcHashDigestFinish (FcHashDigest  digest,
-		    const char   *residual, /* < 64 bytes */
-		    size_t        total_len);
-
-FcPrivate FcChar8 *
-FcHashToString (const FcHashDigest digest);
-
 /* fcinit.c */
 FcPrivate FcConfig *
 FcInitLoadOwnConfig (FcConfig *config);
-- 
2.3.3

From d17f556153fbaf8fe57fdb4fc1f0efa4313f0ecf Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 17 Jun 2014 20:08:24 +0900
Subject: [PATCH] Read the config files and fonts on the sysroot when --sysroot
 is given to fc-cache

Fix for e96d7760886a3781a46b3271c76af99e15cb0146

https://bugs.freedesktop.org/show_bug.cgi?id=59456
---
 fc-cache/fc-cache.c | 10 ++++---
 src/fccache.c       | 76 +++++++++++++++++++++++++++++++++++--------------
 src/fccfg.c         |  2 +-
 src/fcdir.c         | 82 ++++++++++++++++++++++++++++++++++++++++++++++-------
 src/fcinit.c        | 17 +++++++++--
 src/fcint.h         |  3 +-
 src/fcxml.c         | 12 ++++++--
 7 files changed, 158 insertions(+), 44 deletions(-)

diff --git a/fc-cache/fc-cache.c b/fc-cache/fc-cache.c
index 90ebad3..406ac6a 100644
--- a/fc-cache/fc-cache.c
+++ b/fc-cache/fc-cache.c
@@ -128,7 +128,8 @@ scanDirs (FcStrList *list, FcConfig *config, FcBool force, FcBool really_force,
     struct stat	    statb;
     FcBool	    was_valid;
     int		    i;
-    
+    const FcChar8   *sysroot = FcConfigGetSysRoot (config);
+
     /*
      * Now scan all of the directories into separate databases
      * and write out the results
@@ -138,9 +139,10 @@ scanDirs (FcStrList *list, FcConfig *config, FcBool force, FcBool really_force,
 	if (verbose)
 	{
 	    if (!recursive)
-		printf ("Re-scanning %s: ", dir);
-	    else
-		printf ("%s: ", dir);
+		printf ("Re-scanning ");
+	    if (sysroot)
+		printf ("[%s]", sysroot);
+	    printf ("%s: ", dir);
 	    fflush (stdout);
 	}
 	
diff --git a/src/fccache.c b/src/fccache.c
index 085bd72..25538bd 100644
--- a/src/fccache.c
+++ b/src/fccache.c
@@ -177,19 +177,28 @@ FcDirCacheOpenFile (const FcChar8 *cache_file, struct stat *file_stat)
  */
 static FcBool
 FcDirCacheProcess (FcConfig *config, const FcChar8 *dir,
-		   FcBool (*callback) (int fd, struct stat *fd_stat,
+		   FcBool (*callback) (FcConfig *config, int fd, struct stat *fd_stat,
 				       struct stat *dir_stat, void *closure),
 		   void *closure, FcChar8 **cache_file_ret)
 {
     int		fd = -1;
     FcChar8	cache_base[CACHEBASE_LEN];
     FcStrList	*list;
-    FcChar8	*cache_dir;
+    FcChar8	*cache_dir, *d;
     struct stat file_stat, dir_stat;
     FcBool	ret = FcFalse;
+    const FcChar8 *sysroot = FcConfigGetSysRoot (config);
 
-    if (FcStatChecksum (dir, &dir_stat) < 0)
+    if (sysroot)
+	d = FcStrBuildFilename (sysroot, dir, NULL);
+    else
+	d = FcStrdup (dir);
+    if (FcStatChecksum (d, &dir_stat) < 0)
+    {
+	FcStrFree (d);
         return FcFalse;
+    }
+    FcStrFree (d);
 
     FcDirCacheBasename (dir, cache_base);
 
@@ -199,7 +208,6 @@ FcDirCacheProcess (FcConfig *config, const FcChar8 *dir,
 	
     while ((cache_dir = FcStrListNext (list)))
     {
-	const FcChar8 *sysroot = FcConfigGetSysRoot (config);
         FcChar8	*cache_hashed;
 
 	if (sysroot)
@@ -210,7 +218,7 @@ FcDirCacheProcess (FcConfig *config, const FcChar8 *dir,
 	    break;
         fd = FcDirCacheOpenFile (cache_hashed, &file_stat);
         if (fd >= 0) {
-	    ret = (*callback) (fd, &file_stat, &dir_stat, closure);
+	    ret = (*callback) (config, fd, &file_stat, &dir_stat, closure);
 	    close (fd);
 	    if (ret)
 	    {
@@ -529,14 +537,25 @@ FcCacheFini (void)
 }
 
 static FcBool
-FcCacheTimeValid (FcCache *cache, struct stat *dir_stat)
+FcCacheTimeValid (FcConfig *config, FcCache *cache, struct stat *dir_stat)
 {
     struct stat	dir_static;
 
     if (!dir_stat)
     {
-	if (FcStatChecksum (FcCacheDir (cache), &dir_static) < 0)
+	const FcChar8 *sysroot = FcConfigGetSysRoot (config);
+	FcChar8 *d;
+
+	if (sysroot)
+	    d = FcStrBuildFilename (sysroot, FcCacheDir (cache), NULL);
+	else
+	    d = FcStrdup (FcCacheDir (cache));
+	if (FcStatChecksum (d, &dir_static) < 0)
+	{
+	    FcStrFree (d);
 	    return FcFalse;
+	}
+	FcStrFree (d);
 	dir_stat = &dir_static;
     }
     if (FcDebug () & FC_DBG_CACHE)
@@ -546,21 +565,28 @@ FcCacheTimeValid (FcCache *cache, struct stat *dir_stat)
 }
 
 static FcBool
-FcCacheDirsValid (FcCache *cache)
+FcCacheDirsValid (FcConfig *config, FcCache *cache)
 {
     FcStrSet *dirs = FcStrSetCreate ();
     FcBool ret = FcFalse;
+    const FcChar8 *sysroot = FcConfigGetSysRoot (config);
+    FcChar8 *d;
 
     if (!dirs)
 	goto bail;
-    if (!FcDirScanOnly (dirs, FcCacheDir (cache)))
+    if (sysroot)
+	d = FcStrBuildFilename (sysroot, FcCacheDir (cache), NULL);
+    else
+	d = FcStrdup (FcCacheDir (cache));
+    if (!FcDirScanOnly (dirs, d, config))
 	goto bail1;
     ret = cache->dirs_count == dirs->num;
     if (FcDebug () & FC_DBG_CACHE)
-	printf ("%s: cache: %d, fs: %d\n", FcCacheDir (cache), cache->dirs_count, dirs->num);
+	printf ("%s: cache: %d, fs: %d\n", d, cache->dirs_count, dirs->num);
 
 bail1:
     FcStrSetDestroy (dirs);
+    FcStrFree (d);
 bail:
     return ret;
 }
@@ -569,7 +595,7 @@ bail:
  * Map a cache file into memory
  */
 static FcCache *
-FcDirCacheMapFd (int fd, struct stat *fd_stat, struct stat *dir_stat)
+FcDirCacheMapFd (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat)
 {
     FcCache	*cache;
     FcBool	allocated = FcFalse;
@@ -579,8 +605,8 @@ FcDirCacheMapFd (int fd, struct stat *fd_stat, struct stat *dir_stat)
     cache = FcCacheFindByStat (fd_stat);
     if (cache)
     {
-	if (FcCacheTimeValid (cache, dir_stat) &&
-	    FcCacheDirsValid (cache))
+	if (FcCacheTimeValid (config, cache, dir_stat) &&
+	    FcCacheDirsValid (config, cache))
 	    return cache;
 	FcDirCacheUnload (cache);
 	cache = NULL;
@@ -631,8 +657,8 @@ FcDirCacheMapFd (int fd, struct stat *fd_stat, struct stat *dir_stat)
     if (cache->magic != FC_CACHE_MAGIC_MMAP ||
 	cache->version < FC_CACHE_CONTENT_VERSION ||
 	cache->size != (intptr_t) fd_stat->st_size ||
-	!FcCacheTimeValid (cache, dir_stat) ||
-	!FcCacheDirsValid (cache) ||
+	!FcCacheTimeValid (config, cache, dir_stat) ||
+	!FcCacheDirsValid (config, cache) ||
 	!FcCacheInsert (cache, fd_stat))
     {
 	if (allocated)
@@ -671,9 +697,9 @@ FcDirCacheUnload (FcCache *cache)
 }
 
 static FcBool
-FcDirCacheMapHelper (int fd, struct stat *fd_stat, struct stat *dir_stat, void *closure)
+FcDirCacheMapHelper (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat, void *closure)
 {
-    FcCache *cache = FcDirCacheMapFd (fd, fd_stat, dir_stat);
+    FcCache *cache = FcDirCacheMapFd (config, fd, fd_stat, dir_stat);
 
     if (!cache)
 	return FcFalse;
@@ -690,6 +716,7 @@ FcDirCacheLoad (const FcChar8 *dir, FcConfig *config, FcChar8 **cache_file)
 			    FcDirCacheMapHelper,
 			    &cache, cache_file))
 	return NULL;
+
     return cache;
 }
 
@@ -705,7 +732,7 @@ FcDirCacheLoadFile (const FcChar8 *cache_file, struct stat *file_stat)
     fd = FcDirCacheOpenFile (cache_file, file_stat);
     if (fd < 0)
 	return NULL;
-    cache = FcDirCacheMapFd (fd, file_stat, NULL);
+    cache = FcDirCacheMapFd (FcConfigGetCurrent (), fd, file_stat, NULL);
     close (fd);
     return cache;
 }
@@ -715,7 +742,7 @@ FcDirCacheLoadFile (const FcChar8 *cache_file, struct stat *file_stat)
  * the magic number and the size field
  */
 static FcBool
-FcDirCacheValidateHelper (int fd, struct stat *fd_stat, struct stat *dir_stat, void *closure FC_UNUSED)
+FcDirCacheValidateHelper (FcConfig *config, int fd, struct stat *fd_stat, struct stat *dir_stat, void *closure FC_UNUSED)
 {
     FcBool  ret = FcTrue;
     FcCache	c;
@@ -1080,15 +1107,22 @@ FcDirCacheClean (const FcChar8 *cache_dir, FcBool verbose)
 	}
 	else
 	{
+	    FcChar8 *s;
+
 	    target_dir = FcCacheDir (cache);
-	    if (stat ((char *) target_dir, &target_stat) < 0)
+	    if (sysroot)
+		s = FcStrBuildFilename (sysroot, target_dir, NULL);
+	    else
+		s = FcStrdup (target_dir);
+	    if (stat ((char *) s, &target_stat) < 0)
 	    {
 		if (verbose || FcDebug () & FC_DBG_CACHE)
 		    printf ("%s: %s: missing directory: %s \n",
-			    dir, ent->d_name, target_dir);
+			    dir, ent->d_name, s);
 		remove = FcTrue;
 	    }
 	    FcDirCacheUnload (cache);
+	    FcStrFree (s);
 	}
 	if (remove)
 	{
diff --git a/src/fccfg.c b/src/fccfg.c
index fe69eec..8b62e52 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -375,7 +375,7 @@ FcConfigAddDirList (FcConfig *config, FcSetName set, FcStrSet *dirSet)
     while ((dir = FcStrListNext (dirlist)))
     {
 	if (FcDebug () & FC_DBG_FONTSET)
-	    printf ("adding fonts from%s\n", dir);
+	    printf ("adding fonts from %s\n", dir);
 	cache = FcDirCacheRead (dir, FcFalse, config);
 	if (!cache)
 	    continue;
diff --git a/src/fcdir.c b/src/fcdir.c
index 49259c1..b35997f 100644
--- a/src/fcdir.c
+++ b/src/fcdir.c
@@ -69,6 +69,7 @@ FcFileScanFontConfig (FcFontSet		*set,
     FcBool	ret = FcTrue;
     int		id;
     int		count = 0;
+    const FcChar8 *sysroot = FcConfigGetSysRoot (config);
 
     id = 0;
     do
@@ -85,6 +86,28 @@ FcFileScanFontConfig (FcFontSet		*set,
 	font = FcFreeTypeQuery (file, id, blanks, &count);
 	if (FcDebug () & FC_DBG_SCAN)
 	    printf ("done\n");
+	/*
+	 * Get rid of sysroot here so that targeting scan rule may contains FC_FILE pattern
+	 * and they should usually expect without sysroot.
+	 */
+	if (sysroot)
+	{
+	    size_t len = strlen ((const char *)sysroot);
+	    FcChar8 *f = NULL;
+
+	    if (FcPatternObjectGetString (font, FC_FILE_OBJECT, 0, &f) == FcResultMatch &&
+		strncmp ((const char *)f, (const char *)sysroot, len) == 0)
+	    {
+		FcChar8 *s = FcStrdup (f);
+		FcPatternObjectDel (font, FC_FILE_OBJECT);
+		if (s[len] != '/')
+		    len--;
+		else if (s[len+1] == '/')
+		    len++;
+		FcPatternObjectAddString (font, FC_FILE_OBJECT, &s[len]);
+		FcStrFree (s);
+	    }
+	}
 
 	/*
 	 * Edit pattern with user-defined rules
@@ -128,7 +151,23 @@ FcFileScanConfig (FcFontSet	*set,
 		  FcConfig	*config)
 {
     if (FcFileIsDir (file))
-	return FcStrSetAdd (dirs, file);
+    {
+	const FcChar8 *sysroot = FcConfigGetSysRoot (config);
+	const FcChar8 *d;
+	size_t len = strlen ((const char *)sysroot);
+
+	if (sysroot && strncmp ((const char *)file, (const char *)sysroot, len) == 0)
+	{
+	    if (file[len] != '/')
+		len--;
+	    else if (file[len+1] == '/')
+		len++;
+	    d = &file[len];
+	}
+	else
+	    d = file;
+	return FcStrSetAdd (dirs, d);
+    }
     else
     {
 	if (set)
@@ -238,7 +277,7 @@ FcDirScanConfig (FcFontSet	*set,
 	if (scanOnly)
 	{
 	    if (FcFileIsDir (files->strs[i]))
-		FcStrSetAdd (dirs, files->strs[i]);
+		FcFileScanConfig (NULL, dirs, NULL, files->strs[i], config);
 	}
 	else
 	{
@@ -273,9 +312,10 @@ FcDirScan (FcFontSet	    *set,
 
 FcBool
 FcDirScanOnly (FcStrSet		*dirs,
-	       const FcChar8	*dir)
+	       const FcChar8	*dir,
+	       FcConfig		*config)
 {
-    return FcDirScanConfig (NULL, dirs, NULL, dir, FcTrue, NULL, FcTrue);
+    return FcDirScanConfig (NULL, dirs, NULL, dir, FcTrue, config, FcTrue);
 }
 
 /*
@@ -288,11 +328,18 @@ FcDirCacheScan (const FcChar8 *dir, FcConfig *config)
     FcFontSet		*set;
     FcCache		*cache = NULL;
     struct stat		dir_stat;
+    const FcChar8	*sysroot = FcConfigGetSysRoot (config);
+    FcChar8		*d;
+
+    if (sysroot)
+	d = FcStrBuildFilename (sysroot, dir, NULL);
+    else
+	d = FcStrdup (dir);
 
     if (FcDebug () & FC_DBG_FONTSET)
-	printf ("cache scan dir %s\n", dir);
+	printf ("cache scan dir %s\n", d);
 
-    if (FcStatChecksum (dir, &dir_stat) < 0)
+    if (FcStatChecksum (d, &dir_stat) < 0)
 	goto bail;
 
     set = FcFontSetCreate();
@@ -306,7 +353,7 @@ FcDirCacheScan (const FcChar8 *dir, FcConfig *config)
     /*
      * Scan the dir
      */
-    if (!FcDirScanConfig (set, dirs, NULL, dir, FcTrue, config, FcFalse))
+    if (!FcDirScanConfig (set, dirs, NULL, d, FcTrue, config, FcFalse))
 	goto bail2;
 
     /*
@@ -326,20 +373,30 @@ FcDirCacheScan (const FcChar8 *dir, FcConfig *config)
  bail1:
     FcFontSetDestroy (set);
  bail:
+    FcStrFree (d);
+
     return cache;
 }
 
 FcCache *
 FcDirCacheRescan (const FcChar8 *dir, FcConfig *config)
 {
-    FcCache *cache = FcDirCacheLoad (dir, config, NULL);
+    FcCache *cache;
     FcCache *new = NULL;
     struct stat dir_stat;
     FcStrSet *dirs;
+    const FcChar8 *sysroot = FcConfigGetSysRoot (config);
+    FcChar8 *d = NULL;
 
+    cache = FcDirCacheLoad (dir, config, NULL);
     if (!cache)
-	return NULL;
-    if (FcStatChecksum (dir, &dir_stat) < 0)
+	goto bail;
+
+    if (sysroot)
+	d = FcStrBuildFilename (sysroot, dir, NULL);
+    else
+	d = FcStrdup (dir);
+    if (FcStatChecksum (d, &dir_stat) < 0)
 	goto bail;
     dirs = FcStrSetCreate ();
     if (!dirs)
@@ -348,7 +405,7 @@ FcDirCacheRescan (const FcChar8 *dir, FcConfig *config)
     /*
      * Scan the dir
      */
-    if (!FcDirScanConfig (NULL, dirs, NULL, dir, FcTrue, config, FcFalse))
+    if (!FcDirScanConfig (NULL, dirs, NULL, d, FcTrue, config, FcFalse))
 	goto bail1;
     /*
      * Rebuild the cache object
@@ -365,6 +422,9 @@ FcDirCacheRescan (const FcChar8 *dir, FcConfig *config)
 bail1:
     FcStrSetDestroy (dirs);
 bail:
+    if (d)
+	FcStrFree (d);
+
     return new;
 }
 
diff --git a/src/fcinit.c b/src/fcinit.c
index b8d5d06..1e23c1f 100644
--- a/src/fcinit.c
+++ b/src/fcinit.c
@@ -36,13 +36,14 @@
 #endif
 
 static FcConfig *
-FcInitFallbackConfig (void)
+FcInitFallbackConfig (const FcChar8 *sysroot)
 {
     FcConfig	*config;
 
     config = FcConfigCreate ();
     if (!config)
 	goto bail0;
+    FcConfigSetSysRoot (config, sysroot);
     if (!FcConfigAddDir (config, (FcChar8 *) FC_DEFAULT_FONTS))
 	goto bail1;
     if (!FcConfigAddCacheDir (config, (FcChar8 *) FC_CACHEDIR))
@@ -78,8 +79,12 @@ FcInitLoadOwnConfig (FcConfig *config)
 
     if (!FcConfigParseAndLoad (config, 0, FcTrue))
     {
+	const FcChar8 *sysroot = FcConfigGetSysRoot (config);
+	FcConfig *fallback = FcInitFallbackConfig (sysroot);
+
 	FcConfigDestroy (config);
-	return FcInitFallbackConfig ();
+
+	return fallback;
     }
 
     if (config->cacheDirs && config->cacheDirs->num == 0)
@@ -108,13 +113,19 @@ FcInitLoadOwnConfig (FcConfig *config)
 	if (!FcConfigAddCacheDir (config, (FcChar8 *) FC_CACHEDIR) ||
 	    !FcConfigAddCacheDir (config, (FcChar8 *) prefix))
 	{
+	    FcConfig *fallback;
+	    const FcChar8 *sysroot;
+
 	  bail:
+	    sysroot = FcConfigGetSysRoot (config);
 	    fprintf (stderr,
 		     "Fontconfig error: out of memory");
 	    if (prefix)
 		FcStrFree (prefix);
+	    fallback = FcInitFallbackConfig (sysroot);
 	    FcConfigDestroy (config);
-	    return FcInitFallbackConfig ();
+
+	    return fallback;
 	}
 	FcStrFree (prefix);
     }
diff --git a/src/fcint.h b/src/fcint.h
index 6871fdc..d3079ed 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -854,7 +854,8 @@ FcDirScanConfig (FcFontSet	*set,
 
 FcPrivate FcBool
 FcDirScanOnly (FcStrSet		*dirs,
-	       const FcChar8	*dir);
+	       const FcChar8	*dir,
+	       FcConfig		*config);
 
 /* fcfont.c */
 FcPrivate int
diff --git a/src/fcxml.c b/src/fcxml.c
index c68b0cf..3dc1357 100644
--- a/src/fcxml.c
+++ b/src/fcxml.c
@@ -3129,11 +3129,12 @@ FcConfigParseAndLoad (FcConfig	    *config,
 {
 
     XML_Parser	    p;
-    FcChar8	    *filename;
+    FcChar8	    *filename, *f;
     int		    fd;
     int		    len;
     FcConfigParse   parse;
     FcBool	    error = FcTrue;
+    const FcChar8   *sysroot = FcConfigGetSysRoot (config);
 
 #ifdef ENABLE_LIBXML2
     xmlSAXHandler   sax;
@@ -3158,9 +3159,14 @@ FcConfigParseAndLoad (FcConfig	    *config,
     }
 #endif
 
-    filename = FcConfigFilename (name);
-    if (!filename)
+    f = FcConfigFilename (name);
+    if (!f)
 	goto bail0;
+    if (sysroot)
+	filename = FcStrBuildFilename (sysroot, f, NULL);
+    else
+	filename = FcStrdup (f);
+    FcStrFree (f);
 
     if (FcStrSetMember (config->configFiles, filename))
     {
-- 
2.3.3

From 8915c15b9ee394ef19042f1acf75eb8b0592e5a7 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 12 Jun 2014 17:56:04 -0400
Subject: [PATCH] Update list of blanks to Unicode 6.3.0

Some were bogus, some were missing.  See:

  https://bugs.freedesktop.org/show_bug.cgi?id=79956
---
 fonts.conf.in | 20 +++++++++-----------
 1 file changed, 9 insertions(+), 11 deletions(-)

diff --git a/fonts.conf.in b/fonts.conf.in
index 6a8753d..5f6eccc 100644
--- a/fonts.conf.in
+++ b/fonts.conf.in
@@ -88,17 +88,15 @@
 			<int>0x00A0</int>	<!-- NO-BREAK SPACE -->
 			<int>0x00AD</int>	<!-- SOFT HYPHEN -->
 			<int>0x034F</int>	<!-- COMBINING GRAPHEME JOINER -->
-			<int>0x0600</int>	<!-- ARABIC NUMBER SIGN -->
-			<int>0x0601</int>	<!-- ARABIC SIGN SANAH -->
-			<int>0x0602</int>	<!-- ARABIC FOOTNOTE MARKER -->
-			<int>0x0603</int>	<!-- ARABIC SIGN SAFHA -->
-			<int>0x06DD</int>	<!-- ARABIC END OF AYAH -->
-			<int>0x070F</int>	<!-- SYRIAC ABBREVIATION MARK -->
+			<int>0x061C</int>	<!-- ARABIC LETTER MARK -->
 			<int>0x115F</int>	<!-- HANGUL CHOSEONG FILLER -->
 			<int>0x1160</int>	<!-- HANGUL JUNGSEONG FILLER -->
 			<int>0x1680</int>	<!-- OGHAM SPACE MARK -->
 			<int>0x17B4</int>	<!-- KHMER VOWEL INHERENT AQ -->
 			<int>0x17B5</int>	<!-- KHMER VOWEL INHERENT AA -->
+			<int>0x180B</int>	<!-- MONGOLIAN FREE VARIATION SELECTOR ONE -->
+			<int>0x180C</int>	<!-- MONGOLIAN FREE VARIATION SELECTOR TWO -->
+			<int>0x180D</int>	<!-- MONGOLIAN FREE VARIATION SELECTOR THREE -->
 			<int>0x180E</int>	<!-- MONGOLIAN VOWEL SEPARATOR -->
 			<int>0x2000</int>	<!-- EN QUAD -->
 			<int>0x2001</int>	<!-- EM QUAD -->
@@ -116,8 +114,6 @@
 			<int>0x200D</int>	<!-- ZERO WIDTH JOINER -->
 			<int>0x200E</int>	<!-- LEFT-TO-RIGHT MARK -->
 			<int>0x200F</int>	<!-- RIGHT-TO-LEFT MARK -->
-			<int>0x2028</int>	<!-- LINE SEPARATOR -->
-			<int>0x2029</int>	<!-- PARAGRAPH SEPARATOR -->
 			<int>0x202A</int>	<!-- LEFT-TO-RIGHT EMBEDDING -->
 			<int>0x202B</int>	<!-- RIGHT-TO-LEFT EMBEDDING -->
 			<int>0x202C</int>	<!-- POP DIRECTIONAL FORMATTING -->
@@ -129,6 +125,11 @@
 			<int>0x2061</int>	<!-- FUNCTION APPLICATION -->
 			<int>0x2062</int>	<!-- INVISIBLE TIMES -->
 			<int>0x2063</int>	<!-- INVISIBLE SEPARATOR -->
+			<int>0x2064</int>	<!-- INVISIBLE PLUS -->
+			<int>0x2066</int>	<!-- LEFT-TO-RIGHT ISOLATE -->
+			<int>0x2067</int>	<!-- RIGHT-TO-LEFT ISOLATE -->
+			<int>0x2068</int>	<!-- FIRST STRONG ISOLATE -->
+			<int>0x2069</int>	<!-- POP DIRECTIONAL ISOLATE -->
 			<int>0x206A</int>	<!-- INHIBIT SYMMETRIC SWAPPING -->
 			<int>0x206B</int>	<!-- ACTIVATE SYMMETRIC SWAPPING -->
 			<int>0x206C</int>	<!-- INHIBIT ARABIC FORM SHAPING -->
@@ -140,9 +141,6 @@
 			<int>0x3164</int>	<!-- HANGUL FILLER -->
 			<int>0xFEFF</int>	<!-- ZERO WIDTH NO-BREAK SPACE -->
 			<int>0xFFA0</int>	<!-- HALFWIDTH HANGUL FILLER -->
-			<int>0xFFF9</int>	<!-- INTERLINEAR ANNOTATION ANCHOR -->
-			<int>0xFFFA</int>	<!-- INTERLINEAR ANNOTATION SEPARATOR -->
-			<int>0xFFFB</int>	<!-- INTERLINEAR ANNOTATION TERMINATOR -->
 		</blank>
 <!--
   Rescan configuration every 30 seconds when FcFontSetList is called
-- 
2.3.3

From 6c3c2603b9f68a7460e9642d0421b5cc5a848452 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 18 Jun 2014 11:49:10 +0900
Subject: [PATCH] Fix a segfault

introduced by the previous commit d17f556153fbaf8fe57fdb4fc1f0efa4313f0ecf
---
 src/fcdir.c | 22 ++++++++++++----------
 1 file changed, 12 insertions(+), 10 deletions(-)

diff --git a/src/fcdir.c b/src/fcdir.c
index b35997f..593382f 100644
--- a/src/fcdir.c
+++ b/src/fcdir.c
@@ -153,19 +153,21 @@ FcFileScanConfig (FcFontSet	*set,
     if (FcFileIsDir (file))
     {
 	const FcChar8 *sysroot = FcConfigGetSysRoot (config);
-	const FcChar8 *d;
-	size_t len = strlen ((const char *)sysroot);
+	const FcChar8 *d = file;
+	size_t len;
 
-	if (sysroot && strncmp ((const char *)file, (const char *)sysroot, len) == 0)
+	if (sysroot)
 	{
-	    if (file[len] != '/')
-		len--;
-	    else if (file[len+1] == '/')
-		len++;
-	    d = &file[len];
+		len = strlen ((const char *)sysroot);
+		if (strncmp ((const char *)file, (const char *)sysroot, len) == 0)
+		{
+			if (file[len] != '/')
+				len--;
+			else if (file[len+1] == '/')
+				len++;
+			d = &file[len];
+		}
 	}
-	else
-	    d = file;
 	return FcStrSetAdd (dirs, d);
     }
     else
-- 
2.3.3

From 2f96482a9f5bc185b244a8bdaa7563a829965f1a Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 18 Jun 2014 19:13:53 +0900
Subject: [PATCH] Update CaseFolding.txt to Unicode 7.0

---
 fc-case/CaseFolding.txt | 59 ++++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 53 insertions(+), 6 deletions(-)

diff --git a/fc-case/CaseFolding.txt b/fc-case/CaseFolding.txt
index cf5779f..13c10a6 100644
--- a/fc-case/CaseFolding.txt
+++ b/fc-case/CaseFolding.txt
@@ -1,8 +1,8 @@
-# CaseFolding-6.3.0.txt
-# Date: 2012-12-20, 22:14:35 GMT [MD]
+# CaseFolding-7.0.0.txt
+# Date: 2014-04-09, 20:00:56 GMT [MD]
 #
 # Unicode Character Database
-# Copyright (c) 1991-2013 Unicode, Inc.
+# Copyright (c) 1991-2014 Unicode, Inc.
 # For terms of use, see http://www.unicode.org/terms_of_use.html
 # For documentation, see http://www.unicode.org/reports/tr44/
 #
@@ -25,7 +25,7 @@
 #
 # For information on case folding, including how to have case folding 
 # preserve normalization formats, see Section 3.13 Default Case Algorithms in
-# The Unicode Standard, Version 5.0.
+# The Unicode Standard.
 #
 # ================================================================================
 # Format
@@ -58,8 +58,6 @@
 #  All code points not explicitly listed for Case_Folding
 #  have the value C for the status field, and the code point itself for the mapping field.
 
-# @missing: 0000..10FFFF; C; <code point>
-
 # =================================================================
 0041; C; 0061; # LATIN CAPITAL LETTER A
 0042; C; 0062; # LATIN CAPITAL LETTER B
@@ -298,6 +296,7 @@
 0370; C; 0371; # GREEK CAPITAL LETTER HETA
 0372; C; 0373; # GREEK CAPITAL LETTER ARCHAIC SAMPI
 0376; C; 0377; # GREEK CAPITAL LETTER PAMPHYLIAN DIGAMMA
+037F; C; 03F3; # GREEK CAPITAL LETTER YOT
 0386; C; 03AC; # GREEK CAPITAL LETTER ALPHA WITH TONOS
 0388; C; 03AD; # GREEK CAPITAL LETTER EPSILON WITH TONOS
 0389; C; 03AE; # GREEK CAPITAL LETTER ETA WITH TONOS
@@ -505,6 +504,10 @@
 0522; C; 0523; # CYRILLIC CAPITAL LETTER EN WITH MIDDLE HOOK
 0524; C; 0525; # CYRILLIC CAPITAL LETTER PE WITH DESCENDER
 0526; C; 0527; # CYRILLIC CAPITAL LETTER SHHA WITH DESCENDER
+0528; C; 0529; # CYRILLIC CAPITAL LETTER EN WITH LEFT HOOK
+052A; C; 052B; # CYRILLIC CAPITAL LETTER DZZHE
+052C; C; 052D; # CYRILLIC CAPITAL LETTER DCHE
+052E; C; 052F; # CYRILLIC CAPITAL LETTER EL WITH DESCENDER
 0531; C; 0561; # ARMENIAN CAPITAL LETTER AYB
 0532; C; 0562; # ARMENIAN CAPITAL LETTER BEN
 0533; C; 0563; # ARMENIAN CAPITAL LETTER GIM
@@ -1088,6 +1091,8 @@ A690; C; A691; # CYRILLIC CAPITAL LETTER TSSE
 A692; C; A693; # CYRILLIC CAPITAL LETTER TCHE
 A694; C; A695; # CYRILLIC CAPITAL LETTER HWE
 A696; C; A697; # CYRILLIC CAPITAL LETTER SHWE
+A698; C; A699; # CYRILLIC CAPITAL LETTER DOUBLE O
+A69A; C; A69B; # CYRILLIC CAPITAL LETTER CROSSED O
 A722; C; A723; # LATIN CAPITAL LETTER EGYPTOLOGICAL ALEF
 A724; C; A725; # LATIN CAPITAL LETTER EGYPTOLOGICAL AIN
 A726; C; A727; # LATIN CAPITAL LETTER HENG
@@ -1138,12 +1143,22 @@ A78B; C; A78C; # LATIN CAPITAL LETTER SALTILLO
 A78D; C; 0265; # LATIN CAPITAL LETTER TURNED H
 A790; C; A791; # LATIN CAPITAL LETTER N WITH DESCENDER
 A792; C; A793; # LATIN CAPITAL LETTER C WITH BAR
+A796; C; A797; # LATIN CAPITAL LETTER B WITH FLOURISH
+A798; C; A799; # LATIN CAPITAL LETTER F WITH STROKE
+A79A; C; A79B; # LATIN CAPITAL LETTER VOLAPUK AE
+A79C; C; A79D; # LATIN CAPITAL LETTER VOLAPUK OE
+A79E; C; A79F; # LATIN CAPITAL LETTER VOLAPUK UE
 A7A0; C; A7A1; # LATIN CAPITAL LETTER G WITH OBLIQUE STROKE
 A7A2; C; A7A3; # LATIN CAPITAL LETTER K WITH OBLIQUE STROKE
 A7A4; C; A7A5; # LATIN CAPITAL LETTER N WITH OBLIQUE STROKE
 A7A6; C; A7A7; # LATIN CAPITAL LETTER R WITH OBLIQUE STROKE
 A7A8; C; A7A9; # LATIN CAPITAL LETTER S WITH OBLIQUE STROKE
 A7AA; C; 0266; # LATIN CAPITAL LETTER H WITH HOOK
+A7AB; C; 025C; # LATIN CAPITAL LETTER REVERSED OPEN E
+A7AC; C; 0261; # LATIN CAPITAL LETTER SCRIPT G
+A7AD; C; 026C; # LATIN CAPITAL LETTER L WITH BELT
+A7B0; C; 029E; # LATIN CAPITAL LETTER TURNED K
+A7B1; C; 0287; # LATIN CAPITAL LETTER TURNED T
 FB00; F; 0066 0066; # LATIN SMALL LIGATURE FF
 FB01; F; 0066 0069; # LATIN SMALL LIGATURE FI
 FB02; F; 0066 006C; # LATIN SMALL LIGATURE FL
@@ -1222,5 +1237,37 @@ FF3A; C; FF5A; # FULLWIDTH LATIN CAPITAL LETTER Z
 10425; C; 1044D; # DESERET CAPITAL LETTER ENG
 10426; C; 1044E; # DESERET CAPITAL LETTER OI
 10427; C; 1044F; # DESERET CAPITAL LETTER EW
+118A0; C; 118C0; # WARANG CITI CAPITAL LETTER NGAA
+118A1; C; 118C1; # WARANG CITI CAPITAL LETTER A
+118A2; C; 118C2; # WARANG CITI CAPITAL LETTER WI
+118A3; C; 118C3; # WARANG CITI CAPITAL LETTER YU
+118A4; C; 118C4; # WARANG CITI CAPITAL LETTER YA
+118A5; C; 118C5; # WARANG CITI CAPITAL LETTER YO
+118A6; C; 118C6; # WARANG CITI CAPITAL LETTER II
+118A7; C; 118C7; # WARANG CITI CAPITAL LETTER UU
+118A8; C; 118C8; # WARANG CITI CAPITAL LETTER E
+118A9; C; 118C9; # WARANG CITI CAPITAL LETTER O
+118AA; C; 118CA; # WARANG CITI CAPITAL LETTER ANG
+118AB; C; 118CB; # WARANG CITI CAPITAL LETTER GA
+118AC; C; 118CC; # WARANG CITI CAPITAL LETTER KO
+118AD; C; 118CD; # WARANG CITI CAPITAL LETTER ENY
+118AE; C; 118CE; # WARANG CITI CAPITAL LETTER YUJ
+118AF; C; 118CF; # WARANG CITI CAPITAL LETTER UC
+118B0; C; 118D0; # WARANG CITI CAPITAL LETTER ENN
+118B1; C; 118D1; # WARANG CITI CAPITAL LETTER ODD
+118B2; C; 118D2; # WARANG CITI CAPITAL LETTER TTE
+118B3; C; 118D3; # WARANG CITI CAPITAL LETTER NUNG
+118B4; C; 118D4; # WARANG CITI CAPITAL LETTER DA
+118B5; C; 118D5; # WARANG CITI CAPITAL LETTER AT
+118B6; C; 118D6; # WARANG CITI CAPITAL LETTER AM
+118B7; C; 118D7; # WARANG CITI CAPITAL LETTER BU
+118B8; C; 118D8; # WARANG CITI CAPITAL LETTER PU
+118B9; C; 118D9; # WARANG CITI CAPITAL LETTER HIYO
+118BA; C; 118DA; # WARANG CITI CAPITAL LETTER HOLO
+118BB; C; 118DB; # WARANG CITI CAPITAL LETTER HORR
+118BC; C; 118DC; # WARANG CITI CAPITAL LETTER HAR
+118BD; C; 118DD; # WARANG CITI CAPITAL LETTER SSUU
+118BE; C; 118DE; # WARANG CITI CAPITAL LETTER SII
+118BF; C; 118DF; # WARANG CITI CAPITAL LETTER VIYO
 #
 # EOF
-- 
2.3.3

From 274f2181f294af2eff3e8db106ec8d7bab2d3ff1 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 18 Jun 2014 12:20:57 -0400
Subject: [PATCH] Update blanks to Unicode 7.0

---
 fonts.conf.in | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/fonts.conf.in b/fonts.conf.in
index 5f6eccc..f63ada1 100644
--- a/fonts.conf.in
+++ b/fonts.conf.in
@@ -141,6 +141,10 @@
 			<int>0x3164</int>	<!-- HANGUL FILLER -->
 			<int>0xFEFF</int>	<!-- ZERO WIDTH NO-BREAK SPACE -->
 			<int>0xFFA0</int>	<!-- HALFWIDTH HANGUL FILLER -->
+			<int>0x1BCA0</int>	<!-- SHORTHAND FORMAT LETTER OVERLAP -->
+			<int>0x1BCA1</int>	<!-- SHORTHAND FORMAT CONTINUING OVERLAP -->
+			<int>0x1BCA2</int>	<!-- SHORTHAND FORMAT DOWN STEP -->
+			<int>0x1BCA3</int>	<!-- SHORTHAND FORMAT UP STEP -->
 		</blank>
 <!--
   Rescan configuration every 30 seconds when FcFontSetList is called
-- 
2.3.3

From 5004e8e01f5de30ad01904e57ea0eda006ab3a0c Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 30 Jun 2014 12:37:36 +0900
Subject: [PATCH] Don't read/write from/to the XDG dirs if the home directory
 is disabled

---
 src/fccfg.c | 18 +++++++++++++++---
 src/fcxml.c | 23 ++++++++++++++++++++++-
 2 files changed, 37 insertions(+), 4 deletions(-)

diff --git a/src/fccfg.c b/src/fccfg.c
index 8b62e52..73c45c8 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -2014,8 +2014,12 @@ FcConfigXdgCacheHome (void)
     else
     {
 	const FcChar8 *home = FcConfigHome ();
-	size_t len = home ? strlen ((const char *)home) : 0;
+	size_t len;
 
+	if (!home)
+	    return NULL;
+
+	len = strlen ((const char *)home);
 	ret = malloc (len + 7 + 1);
 	if (ret)
 	{
@@ -2039,8 +2043,12 @@ FcConfigXdgConfigHome (void)
     else
     {
 	const FcChar8 *home = FcConfigHome ();
-	size_t len = home ? strlen ((const char *)home) : 0;
+	size_t len;
+
+	if (!home)
+	    return NULL;
 
+	len = strlen ((const char *)home);
 	ret = malloc (len + 8 + 1);
 	if (ret)
 	{
@@ -2064,8 +2072,12 @@ FcConfigXdgDataHome (void)
     else
     {
 	const FcChar8 *home = FcConfigHome ();
-	size_t len = home ? strlen ((const char *)home) : 0;
+	size_t len;
+
+	if (!home)
+	    return NULL;
 
+	len = strlen ((const char *)home);
 	ret = malloc (len + 13 + 1);
 	if (ret)
 	{
diff --git a/src/fcxml.c b/src/fcxml.c
index 3dc1357..29dd4d6 100644
--- a/src/fcxml.c
+++ b/src/fcxml.c
@@ -2051,7 +2051,14 @@ FcParseDir (FcConfigParse *parse)
 
     attr = FcConfigGetAttribute (parse, "prefix");
     if (attr && FcStrCmp (attr, (const FcChar8 *)"xdg") == 0)
+    {
 	prefix = FcConfigXdgDataHome ();
+	/* home directory might be disabled.
+	 * simply ignore this element.
+	 */
+	if (!prefix)
+	    goto bail;
+    }
     data = FcStrBufDoneStatic (&parse->pstack->str);
     if (!data)
     {
@@ -2142,11 +2149,18 @@ static void
 FcParseCacheDir (FcConfigParse *parse)
 {
     const FcChar8 *attr;
-    FcChar8 *prefix = NULL, *p, *data;
+    FcChar8 *prefix = NULL, *p, *data = NULL;
 
     attr = FcConfigGetAttribute (parse, "prefix");
     if (attr && FcStrCmp (attr, (const FcChar8 *)"xdg") == 0)
+    {
 	prefix = FcConfigXdgCacheHome ();
+	/* home directory might be disabled.
+	 * simply ignore this element.
+	 */
+	if (!prefix)
+	    goto bail;
+    }
     data = FcStrBufDone (&parse->pstack->str);
     if (!data)
     {
@@ -2254,7 +2268,14 @@ FcParseInclude (FcConfigParse *parse)
         deprecated = FcTrue;
     attr = FcConfigGetAttribute (parse, "prefix");
     if (attr && FcStrCmp (attr, (const FcChar8 *)"xdg") == 0)
+    {
 	prefix = FcConfigXdgConfigHome ();
+	/* home directory might be disabled.
+	 * simply ignore this element.
+	 */
+	if (!prefix)
+	    goto bail;
+    }
     if (prefix)
     {
 	size_t plen = strlen ((const char *)prefix);
-- 
2.3.3

From dab60e4476ada4ad4639599ea24dd012d4a79584 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 30 Jun 2014 15:12:32 +0900
Subject: [PATCH] Rework for 5004e8e01f5de30ad01904e57ea0eda006ab3a0c

Don't read/write from/to the XDG dirs even if XDG_*_HOME is set
and the home directory is disabled.
---
 src/fccfg.c | 24 +++++++++---------------
 1 file changed, 9 insertions(+), 15 deletions(-)

diff --git a/src/fccfg.c b/src/fccfg.c
index 73c45c8..e2555f0 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -2009,17 +2009,15 @@ FcConfigXdgCacheHome (void)
     const char *env = getenv ("XDG_CACHE_HOME");
     FcChar8 *ret = NULL;
 
+    if (!_FcConfigHomeEnabled)
+	return NULL;
     if (env)
 	ret = FcStrCopy ((const FcChar8 *)env);
     else
     {
 	const FcChar8 *home = FcConfigHome ();
-	size_t len;
+	size_t len = home ? strlen ((const char *)home) : 0;
 
-	if (!home)
-	    return NULL;
-
-	len = strlen ((const char *)home);
 	ret = malloc (len + 7 + 1);
 	if (ret)
 	{
@@ -2038,17 +2036,15 @@ FcConfigXdgConfigHome (void)
     const char *env = getenv ("XDG_CONFIG_HOME");
     FcChar8 *ret = NULL;
 
+    if (!_FcConfigHomeEnabled)
+	return NULL;
     if (env)
 	ret = FcStrCopy ((const FcChar8 *)env);
     else
     {
 	const FcChar8 *home = FcConfigHome ();
-	size_t len;
-
-	if (!home)
-	    return NULL;
+	size_t len = home ? strlen ((const char *)home) : 0;
 
-	len = strlen ((const char *)home);
 	ret = malloc (len + 8 + 1);
 	if (ret)
 	{
@@ -2067,17 +2063,15 @@ FcConfigXdgDataHome (void)
     const char *env = getenv ("XDG_DATA_HOME");
     FcChar8 *ret = NULL;
 
+    if (!_FcConfigHomeEnabled)
+	return NULL;
     if (env)
 	ret = FcStrCopy ((const FcChar8 *)env);
     else
     {
 	const FcChar8 *home = FcConfigHome ();
-	size_t len;
-
-	if (!home)
-	    return NULL;
+	size_t len = home ? strlen ((const char *)home) : 0;
 
-	len = strlen ((const char *)home);
 	ret = malloc (len + 13 + 1);
 	if (ret)
 	{
-- 
2.3.3

From e708e97c351d3bc9f7030ef22ac2f007d5114730 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 3 Jul 2014 17:52:54 -0400
Subject: [PATCH] Change charset parse/unparse format to be human readable

Previous format was unusable.  New format is ranges of hex values.
To choose space character and Latin capital letters for example:

$ fc-pattern ':charset=20 41-5a'
Pattern has 1 elts (size 16)
	charset:
	0000: 00000000 00000001 07fffffe 00000000 00000000 00000000 00000000 00000000
(s)
---
 src/fccharset.c | 223 ++++++++++++++++++++------------------------------------
 1 file changed, 79 insertions(+), 144 deletions(-)

diff --git a/src/fccharset.c b/src/fccharset.c
index 43a3cc0..d1d976a 100644
--- a/src/fccharset.c
+++ b/src/fccharset.c
@@ -815,188 +815,123 @@ FcCharSetCoverage (const FcCharSet *a, FcChar32 page, FcChar32 *result)
     return page;
 }
 
-/*
- * ASCII representation of charsets.
- *
- * Each leaf is represented as 9 32-bit values, the code of the first character followed
- * by 8 32 bit values for the leaf itself.  Each value is encoded as 5 ASCII characters,
- * only 85 different values are used to avoid control characters as well as the other
- * characters used to encode font names.  85**5 > 2^32 so things work out, but
- * it's not exactly human readable output.  As a special case, 0 is encoded as a space
- */
-
-static const unsigned char	charToValue[256] = {
-    /*     "" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /*   "\b" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\020" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\030" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /*    " " */ 0xff,  0x00,  0xff,  0x01,  0x02,  0x03,  0x04,  0xff,
-    /*    "(" */ 0x05,  0x06,  0x07,  0x08,  0xff,  0xff,  0x09,  0x0a,
-    /*    "0" */ 0x0b,  0x0c,  0x0d,  0x0e,  0x0f,  0x10,  0x11,  0x12,
-    /*    "8" */ 0x13,  0x14,  0xff,  0x15,  0x16,  0xff,  0x17,  0x18,
-    /*    "@" */ 0x19,  0x1a,  0x1b,  0x1c,  0x1d,  0x1e,  0x1f,  0x20,
-    /*    "H" */ 0x21,  0x22,  0x23,  0x24,  0x25,  0x26,  0x27,  0x28,
-    /*    "P" */ 0x29,  0x2a,  0x2b,  0x2c,  0x2d,  0x2e,  0x2f,  0x30,
-    /*    "X" */ 0x31,  0x32,  0x33,  0x34,  0xff,  0x35,  0x36,  0xff,
-    /*    "`" */ 0xff,  0x37,  0x38,  0x39,  0x3a,  0x3b,  0x3c,  0x3d,
-    /*    "h" */ 0x3e,  0x3f,  0x40,  0x41,  0x42,  0x43,  0x44,  0x45,
-    /*    "p" */ 0x46,  0x47,  0x48,  0x49,  0x4a,  0x4b,  0x4c,  0x4d,
-    /*    "x" */ 0x4e,  0x4f,  0x50,  0x51,  0x52,  0x53,  0x54,  0xff,
-    /* "\200" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\210" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\220" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\230" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\240" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\250" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\260" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\270" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\300" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\310" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\320" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\330" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\340" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\350" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\360" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-    /* "\370" */ 0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,  0xff,
-};
-
-static const FcChar8 valueToChar[0x55] = {
-    /* 0x00 */ '!', '#', '$', '%', '&', '(', ')', '*',
-    /* 0x08 */ '+', '.', '/', '0', '1', '2', '3', '4',
-    /* 0x10 */ '5', '6', '7', '8', '9', ';', '<', '>',
-    /* 0x18 */ '?', '@', 'A', 'B', 'C', 'D', 'E', 'F',
-    /* 0x20 */ 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N',
-    /* 0x28 */ 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V',
-    /* 0x30 */ 'W', 'X', 'Y', 'Z', '[', ']', '^', 'a',
-    /* 0x38 */ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',
-    /* 0x40 */ 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
-    /* 0x48 */ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y',
-    /* 0x50 */ 'z', '{', '|', '}', '~',
-};
-
-static FcChar8 *
-FcCharSetParseValue (FcChar8 *string, FcChar32 *value)
-{
-    int		i;
-    FcChar32	v;
-    FcChar32	c;
-
-    if (*string == ' ')
-    {
-	v = 0;
-	string++;
-    }
-    else
-    {
-	v = 0;
-	for (i = 0; i < 5; i++)
-	{
-	    if (!(c = (FcChar32) (unsigned char) *string++))
-		return 0;
-	    c = charToValue[c];
-	    if (c == 0xff)
-		return 0;
-	    v = v * 85 + c;
-	}
-    }
-    *value = v;
-    return string;
-}
-
 static FcBool
-FcCharSetUnparseValue (FcStrBuf *buf, FcChar32 value)
+FcNameParseRange (FcChar8 **string, FcChar32 *pfirst, FcChar32 *plast)
 {
-    int	    i;
-    if (value == 0)
-    {
-	return FcStrBufChar (buf, ' ');
-    }
-    else
-    {
-	FcChar8	string[6];
-	FcChar8	*s = string + 5;
-	string[5] = '\0';
-	for (i = 0; i < 5; i++)
+	char *s = (char *) *string;
+	char *t;
+	long first, last;
+
+	while (isspace(*s) || *s == ',')
+	    s++;
+	t = s;
+	errno = 0;
+	first = last = strtol (s, &s, 16);
+	if (errno)
+	    return FcFalse;
+	while (isspace(*s) || *s == ',')
+	    s++;
+	if (*s == '-')
 	{
-	    *--s = valueToChar[value % 85];
-	    value /= 85;
-	}
-	for (i = 0; i < 5; i++)
-	    if (!FcStrBufChar (buf, *s++))
+	    s++;
+	    errno = 0;
+	    last = strtol (s, &s, 16);
+	    if (errno)
 		return FcFalse;
-    }
-    return FcTrue;
+	}
+
+	if (s == t || first < 0 || last < 0 || last < first || last > 0x10ffff)
+	     return FcFalse;
+
+	*string = (FcChar8 *) s;
+	*pfirst = first;
+	*plast = last;
+	return FcTrue;
 }
 
 FcCharSet *
 FcNameParseCharSet (FcChar8 *string)
 {
     FcCharSet	*c;
-    FcChar32	ucs4;
-    FcCharLeaf	*leaf;
-    FcCharLeaf	temp;
-    FcChar32	bits;
-    int		i;
+    FcChar32	first, last;
 
     c = FcCharSetCreate ();
     if (!c)
 	goto bail0;
     while (*string)
     {
-	string = FcCharSetParseValue (string, &ucs4);
-	if (!string)
-	    goto bail1;
-	bits = 0;
-	for (i = 0; i < 256/32; i++)
-	{
-	    string = FcCharSetParseValue (string, &temp.map[i]);
-	    if (!string)
-		goto bail1;
-	    bits |= temp.map[i];
-	}
-	if (bits)
-	{
-	    leaf = malloc (sizeof (FcCharLeaf));
-	    if (!leaf)
-		goto bail1;
-	    *leaf = temp;
-	    if (!FcCharSetInsertLeaf (c, ucs4, leaf))
+	FcChar32 u;
+
+	if (!FcNameParseRange (&string, &first, &last))
 		goto bail1;
-	}
+
+	for (u = first; u < last + 1; u++)
+	    FcCharSetAddChar (c, u);
     }
     return c;
 bail1:
-    if (c->num)
-    {
-	free (FcCharSetLeaves (c));
-    }
-    if (c->num)
-    {
-	free (FcCharSetNumbers (c));
-    }
-    free (c);
+    FcCharSetDestroy (c);
 bail0:
     return NULL;
 }
 
+static void
+FcNameUnparseUnicode (FcStrBuf *buf, FcChar32 u)
+{
+    FcChar8	    buf_static[64];
+    snprintf ((char *) buf_static, sizeof (buf_static), "%x", u);
+    FcStrBufString (buf, buf_static);
+}
+
 FcBool
 FcNameUnparseCharSet (FcStrBuf *buf, const FcCharSet *c)
 {
     FcCharSetIter   ci;
+    FcChar32	    first, last;
     int		    i;
 #ifdef CHECK
     int		    len = buf->len;
 #endif
 
+    first = last = 0x7FFFFFFF;
+
     for (FcCharSetIterStart (c, &ci);
 	 ci.leaf;
 	 FcCharSetIterNext (c, &ci))
     {
-	if (!FcCharSetUnparseValue (buf, ci.ucs4))
-	    return FcFalse;
 	for (i = 0; i < 256/32; i++)
-	    if (!FcCharSetUnparseValue (buf, ci.leaf->map[i]))
-		return FcFalse;
+	{
+	    FcChar32 bits = ci.leaf->map[i];
+	    FcChar32 u = ci.ucs4 + i * 32;
+
+	    while (bits)
+	    {
+		if (bits & 1)
+		{
+			if (u != last + 1)
+			{
+			    if (last != first)
+			    {
+				FcStrBufChar (buf, '-');
+				FcNameUnparseUnicode (buf, last);
+			    }
+			    if (last != 0x7FFFFFFF)
+				FcStrBufChar (buf, ',');
+			    /* Start new range. */
+			    first = u;
+			    FcNameUnparseUnicode (buf, u);
+			}
+			last = u;
+		}
+		bits >>= 1;
+		u++;
+	    }
+	}
+    }
+    if (last != first)
+    {
+	FcStrBufChar (buf, '-');
+	FcNameUnparseUnicode (buf, last);
     }
 #ifdef CHECK
     {
-- 
2.3.3

From 940d27a197bfb0cfd93d3bb7dba33d5e23ac46b0 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 3 Jul 2014 21:15:25 -0400
Subject: [PATCH] Minor

---
 src/fccharset.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/fccharset.c b/src/fccharset.c
index d1d976a..c7913d1 100644
--- a/src/fccharset.c
+++ b/src/fccharset.c
@@ -822,14 +822,14 @@ FcNameParseRange (FcChar8 **string, FcChar32 *pfirst, FcChar32 *plast)
 	char *t;
 	long first, last;
 
-	while (isspace(*s) || *s == ',')
+	while (isspace(*s))
 	    s++;
 	t = s;
 	errno = 0;
 	first = last = strtol (s, &s, 16);
 	if (errno)
 	    return FcFalse;
-	while (isspace(*s) || *s == ',')
+	while (isspace(*s))
 	    s++;
 	if (*s == '-')
 	{
-- 
2.3.3

From f5b4b2c1ed7ff92e2fb9339750f0288e2e794c4b Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 4 Jul 2014 01:43:47 -0400
Subject: [PATCH] Fix charset unparse after recent changes

---
 src/fccharset.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fccharset.c b/src/fccharset.c
index c7913d1..6e0093f 100644
--- a/src/fccharset.c
+++ b/src/fccharset.c
@@ -916,7 +916,7 @@ FcNameUnparseCharSet (FcStrBuf *buf, const FcCharSet *c)
 				FcNameUnparseUnicode (buf, last);
 			    }
 			    if (last != 0x7FFFFFFF)
-				FcStrBufChar (buf, ',');
+				FcStrBufChar (buf, ' ');
 			    /* Start new range. */
 			    first = u;
 			    FcNameUnparseUnicode (buf, u);
-- 
2.3.3

From 5b22776999b6052afe0e829b1a0c0935bbe1e9f7 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Fri, 4 Jul 2014 18:04:52 +0900
Subject: [PATCH] Fix a crash when no sysroot is given and failed to load the
 default fonts.conf

---
 src/fccfg.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/src/fccfg.c b/src/fccfg.c
index e2555f0..6d32595 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -2342,7 +2342,7 @@ void
 FcConfigSetSysRoot (FcConfig      *config,
 		    const FcChar8 *sysroot)
 {
-    FcChar8 *s;
+    FcChar8 *s = NULL;
     FcBool init = FcFalse;
 
     if (!config)
@@ -2362,9 +2362,12 @@ FcConfigSetSysRoot (FcConfig      *config,
 	}
     }
 
-    s = FcStrCopyFilename (sysroot);
-    if (!s)
-	return;
+    if (sysroot)
+    {
+	s = FcStrCopyFilename (sysroot);
+	if (!s)
+	    return;
+    }
 
     if (config->sysRoot)
 	FcStrFree (config->sysRoot);
-- 
2.3.3

From 5674b8a66354d657559c37e9d168bfbf48b931a8 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sun, 6 Jul 2014 17:41:19 -0400
Subject: [PATCH] Comments

---
 src/fcmatch.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/src/fcmatch.c b/src/fcmatch.c
index 0c0a067..5e02431 100644
--- a/src/fcmatch.c
+++ b/src/fcmatch.c
@@ -256,6 +256,9 @@ FcCompareHash (FcValue *v1, FcValue *v2)
     return FcCompareString (v1, v2);
 }
 
+
+/* Define priorities to -1 for objects that don't have a compare function. */
+
 #define PRI_NULL(n)				\
     PRI_ ## n ## _STRONG = -1,			\
     PRI_ ## n ## _WEAK = -1,
@@ -280,6 +283,9 @@ typedef enum _FcMatcherPriorityDummy {
 
 #undef FC_OBJECT
 
+
+/* Canonical match priority order. */
+
 #undef PRI1
 #define PRI1(n)					\
     PRI_ ## n,					\
-- 
2.3.3

From bb27d6969ce0ef1244e73f9c6232f91bce60dad7 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sun, 6 Jul 2014 18:10:44 -0400
Subject: [PATCH] Remove HASH from matching priorities

We deprecated FC_HASH, so doesn't make sense to sort on it.
---
 src/fcmatch.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/src/fcmatch.c b/src/fcmatch.c
index 5e02431..ce0d18d 100644
--- a/src/fcmatch.c
+++ b/src/fcmatch.c
@@ -293,7 +293,6 @@ typedef enum _FcMatcherPriorityDummy {
     PRI_ ## n ## _WEAK = PRI_ ## n
 
 typedef enum _FcMatcherPriority {
-    PRI1(HASH),
     PRI1(FILE),
     PRI1(FONTFORMAT),
     PRI1(SCALABLE),
-- 
2.3.3

From da8233b0f244676ea372ffa485b6cb329700c8ca Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sun, 6 Jul 2014 18:26:03 -0400
Subject: [PATCH] Fixup previous commit

---
 src/fcmatch.c | 12 ------------
 src/fcobjs.h  |  2 +-
 2 files changed, 1 insertion(+), 13 deletions(-)

diff --git a/src/fcmatch.c b/src/fcmatch.c
index ce0d18d..7825518 100644
--- a/src/fcmatch.c
+++ b/src/fcmatch.c
@@ -245,17 +245,6 @@ FcCompareFilename (FcValue *v1, FcValue *v2)
 	return 3.0;
 }
 
-static double
-FcCompareHash (FcValue *v1, FcValue *v2)
-{
-    const FcChar8 *s1 = FcValueString (v1), *s2 = FcValueString (v2);
-
-    /* Do not match an empty string */
-    if (!s1 || !s2 || !s1[0] || !s2[0])
-	return 1.0;
-    return FcCompareString (v1, v2);
-}
-
 
 /* Define priorities to -1 for objects that don't have a compare function. */
 
@@ -272,7 +261,6 @@ FcCompareHash (FcValue *v1, FcValue *v2)
 #define PRI_FcCompareCharSet(n)		PRI1(n)
 #define PRI_FcCompareLang(n)		PRI1(n)
 #define PRI_FcComparePostScript(n)	PRI1(n)
-#define PRI_FcCompareHash(n)		PRI1(n)
 #define PRI_FcCompareSizeRange(n)	PRI1(n)
 
 #define FC_OBJECT(NAME, Type, Cmp)	PRI_##Cmp(NAME)
diff --git a/src/fcobjs.h b/src/fcobjs.h
index dc3d834..bfdf4b5 100644
--- a/src/fcobjs.h
+++ b/src/fcobjs.h
@@ -66,6 +66,6 @@ FC_OBJECT (LCD_FILTER,		FcTypeInteger,	NULL)
 FC_OBJECT (NAMELANG,		FcTypeString,	NULL)
 FC_OBJECT (FONT_FEATURES,	FcTypeString,	NULL)
 FC_OBJECT (PRGNAME,		FcTypeString,	NULL)
-FC_OBJECT (HASH,		FcTypeString,	FcCompareHash)	/* deprecated */
+FC_OBJECT (HASH,		FcTypeString,	NULL)	/* deprecated */
 FC_OBJECT (POSTSCRIPT_NAME,	FcTypeString,	FcComparePostScript)
 /* ^-------------- Add new objects here. */
-- 
2.3.3

From dca5d0feee5eb6428bec48b1aff4396cf92c76c0 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 8 Jul 2014 14:55:15 +0900
Subject: [PATCH] Fix a gcc warning

test-migration.c:17:5: warning: pointer targets in passing argument 1 of 'FcStrDirname' differ in signedness
---
 test/test-migration.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/test/test-migration.c b/test/test-migration.c
index 9366edb..bcd805d 100644
--- a/test/test-migration.c
+++ b/test/test-migration.c
@@ -56,7 +56,7 @@ mkdir_p(const char *dir)
 
     if (strlen (dir) == 0)
 	return FcFalse;
-    parent = (char *) FcStrDirname (dir);
+    parent = (char *) FcStrDirname ((const FcChar8 *)dir);
     if (!parent)
 	return FcFalse;
     if (access (parent, F_OK) == 0)
-- 
2.3.3

From 6781c6baef062eeea5b5b68e4a9c31ea6cd7539b Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 11 Jul 2014 12:19:39 -0400
Subject: [PATCH] Update mingw32 MemoryBarrier from HarfBuzz

Fixes https://bugs.freedesktop.org/show_bug.cgi?id=81228
---
 src/fcatomic.h | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/fcatomic.h b/src/fcatomic.h
index 362e521..cc28a88 100644
--- a/src/fcatomic.h
+++ b/src/fcatomic.h
@@ -48,22 +48,22 @@
 
 #include "fcwindows.h"
 
-/* mingw32 does not have MemoryBarrier.
- * MemoryBarrier may be defined as a macro or a function.
- * Just make a failsafe version for ourselves. */
-#ifdef MemoryBarrier
-#define HBMemoryBarrier MemoryBarrier
-#else
-static inline void HBMemoryBarrier (void) {
+/* MinGW has a convoluted history of supporting MemoryBarrier
+ * properly.  As such, define a function to wrap the whole
+ * thing. */
+static inline void _FCMemoryBarrier (void) {
+#if !defined(MemoryBarrier)
   long dummy = 0;
   InterlockedExchange (&dummy, 1);
-}
+#else
+  MemoryBarrier ();
 #endif
+}
 
 typedef LONG fc_atomic_int_t;
 #define fc_atomic_int_add(AI, V)	InterlockedExchangeAdd (&(AI), (V))
 
-#define fc_atomic_ptr_get(P)		(HBMemoryBarrier (), (void *) *(P))
+#define fc_atomic_ptr_get(P)		(_FCMemoryBarrier (), (void *) *(P))
 #define fc_atomic_ptr_cmpexch(P,O,N)	(InterlockedCompareExchangePointer ((void **) (P), (void *) (N), (void *) (O)) == (void *) (O))
 
 
-- 
2.3.3

From 342b908b9696a3f1cf1a45ddd779f3a17d6f9142 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sat, 19 Jul 2014 16:33:49 -0400
Subject: [PATCH] More mingw32 MemoryBarrier() fixup

---
 src/fcwindows.h | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/fcwindows.h b/src/fcwindows.h
index 02489d9..a0eee67 100644
--- a/src/fcwindows.h
+++ b/src/fcwindows.h
@@ -32,8 +32,13 @@
 #endif
 
 #ifdef _WIN32
+   /* Request Windows Vista for building.  This is required to
+    * get MemoryBarrier on mingw32... */
+#  if defined(_WIN32_WINNT) && _WIN32_WINNT < 0x0600
+#    undef _WIN32_WINNT
+#  endif
 #  ifndef _WIN32_WINNT
-#    define _WIN32_WINNT 0x0500
+#    define _WIN32_WINNT 0x0600
 #  endif
 #  define WIN32_LEAN_AND_MEAN
 #  define WIN32_EXTRA_LEAN
-- 
2.3.3

From 107b44f50b6818288ad70608fbe4ec3fd1a7119f Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 23 Jul 2014 19:17:26 +0900
Subject: [PATCH] Don't add duplicate lang

Don't add duplicate lang from FC_LANG if the pattern already has.

https://bugs.freedesktop.org/show_bug.cgi?id=81186
---
 src/fccfg.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/src/fccfg.c b/src/fccfg.c
index 6d32595..f8ee8d2 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -1546,10 +1546,38 @@ FcConfigSubstituteWithPat (FcConfig    *config,
 	    FcStrSetDestroy (strs);
 	    while (l && (lang = FcStrListNext (l)))
 	    {
+		FcPatternElt *e = FcPatternObjectFindElt (p, FC_LANG_OBJECT);
+
+		if (e)
+		{
+		    FcValueListPtr ll;
+
+		    for (ll = FcPatternEltValues (e); ll; ll = FcValueListNext (ll))
+		    {
+			FcValue vv = FcValueCanonicalize (&ll->value);
+
+			if (vv.type == FcTypeLangSet)
+			{
+			    FcLangSet *ls = FcLangSetCreate ();
+			    FcBool b;
+
+			    FcLangSetAdd (ls, lang);
+			    b = FcLangSetContains (vv.u.l, ls);
+			    FcLangSetDestroy (ls);
+			    if (b)
+				goto bail_lang;
+			}
+			else
+			    if (FcStrCmpIgnoreCase (vv.u.s, lang) == 0)
+				goto bail_lang;
+		    }
+		}
 		v.type = FcTypeString;
 		v.u.s = lang;
+
 		FcPatternObjectAddWithBinding (p, FC_LANG_OBJECT, v, FcValueBindingWeak, FcTrue);
 	    }
+	bail_lang:
 	    FcStrListDone (l);
 	}
 	if (FcPatternObjectGet (p, FC_PRGNAME_OBJECT, 0, &v) == FcResultNoMatch)
-- 
2.3.3

From fd5667b42c253da9c4c5502f53b5c0fb7e0f589e Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 23 Jul 2014 11:57:31 -0400
Subject: [PATCH] Symlinks fix for DESTDIR

From:
https://github.com/Alexpux/MINGW-packages/blob/master/mingw-w64-fontconfig/fontconfig-2.11.0-symlinks-fix.patch
---
 conf.d/Makefile.am | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/conf.d/Makefile.am b/conf.d/Makefile.am
index d61756b..2b2c85f 100644
--- a/conf.d/Makefile.am
+++ b/conf.d/Makefile.am
@@ -88,9 +88,9 @@ install-data-hook:
 	@(echo cd $(DESTDIR)$(configdir);			\
 	  cd $(DESTDIR)$(configdir);				\
 	  for i in $(CONF_LINKS); do				\
-	    echo $(RM) $$i";" ln -s $(templatedir)/$$i .;	\
+	    echo $(RM) $$i";" ln -s $(DESTDIR)$(templatedir)/$$i .;\
 	    $(RM) $$i;						\
-	    ln -s $(templatedir)/$$i .;				\
+	    ln -s $(DESTDIR)$(templatedir)/$$i .;		\
 	  done)
 uninstall-local:
 	@(echo cd $(DESTDIR)$(configdir);			\
-- 
2.3.3

From a5641cfb2472a92a64858d00525ae3b0fc0ae2a4 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 23 Jul 2014 13:21:05 -0400
Subject: [PATCH] Revert "Symlinks fix for DESTDIR"

This reverts commit fd5667b42c253da9c4c5502f53b5c0fb7e0f589e.

This was wrong, as pointed out by Akira on the list.
We want symlinks to final destination.
---
 conf.d/Makefile.am | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/conf.d/Makefile.am b/conf.d/Makefile.am
index 2b2c85f..d61756b 100644
--- a/conf.d/Makefile.am
+++ b/conf.d/Makefile.am
@@ -88,9 +88,9 @@ install-data-hook:
 	@(echo cd $(DESTDIR)$(configdir);			\
 	  cd $(DESTDIR)$(configdir);				\
 	  for i in $(CONF_LINKS); do				\
-	    echo $(RM) $$i";" ln -s $(DESTDIR)$(templatedir)/$$i .;\
+	    echo $(RM) $$i";" ln -s $(templatedir)/$$i .;	\
 	    $(RM) $$i;						\
-	    ln -s $(DESTDIR)$(templatedir)/$$i .;		\
+	    ln -s $(templatedir)/$$i .;				\
 	  done)
 uninstall-local:
 	@(echo cd $(DESTDIR)$(configdir);			\
-- 
2.3.3

From 07a0f511b13a872824c2c57251b7e47ee7df1354 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 24 Jul 2014 15:01:57 -0400
Subject: [PATCH] Call FcInitDebug from FcFreeTypeQueryFace

---
 src/fcfreetype.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index baf13e5..bfbcad0 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1107,6 +1107,8 @@ FcFreeTypeQueryFace (const FT_Face  face,
     FcRange	    *r = NULL;
     double	    lower_size = 0.0L, upper_size = DBL_MAX;
 
+    FcInitDebug (); /* We might be called with no initizalization whatsoever. */
+
     pat = FcPatternCreate ();
     if (!pat)
 	goto bail0;
-- 
2.3.3

From aeba5bf4b69f8b559cb909df12d0a636e6054325 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 24 Jul 2014 15:28:09 -0400
Subject: [PATCH] Decode MacRoman encoding in name table without iconv

iconv support was turned off by default in f30a5d76.
Some fonts, like Apple Color Emoji, only have their English
name in a MacRoman entry.  As such, decode MacRoman ourselves.
---
 src/fcfreetype.c | 162 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 162 insertions(+)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index bfbcad0..8a95ee4 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -558,6 +558,139 @@ FcFontCapabilities(FT_Face face);
 
 #define NUM_FC_MAC_ROMAN_FAKE	(int) (sizeof (fcMacRomanFake) / sizeof (fcMacRomanFake[0]))
 
+
+/* From http://www.unicode.org/Public/MAPPINGS/VENDORS/APPLE/ROMAN.TXT */
+static const FcChar16 fcMacRomanNonASCIIToUnicode[128] = {
+  /*0x80*/ 0x00C4, /* LATIN CAPITAL LETTER A WITH DIAERESIS */
+  /*0x81*/ 0x00C5, /* LATIN CAPITAL LETTER A WITH RING ABOVE */
+  /*0x82*/ 0x00C7, /* LATIN CAPITAL LETTER C WITH CEDILLA */
+  /*0x83*/ 0x00C9, /* LATIN CAPITAL LETTER E WITH ACUTE */
+  /*0x84*/ 0x00D1, /* LATIN CAPITAL LETTER N WITH TILDE */
+  /*0x85*/ 0x00D6, /* LATIN CAPITAL LETTER O WITH DIAERESIS */
+  /*0x86*/ 0x00DC, /* LATIN CAPITAL LETTER U WITH DIAERESIS */
+  /*0x87*/ 0x00E1, /* LATIN SMALL LETTER A WITH ACUTE */
+  /*0x88*/ 0x00E0, /* LATIN SMALL LETTER A WITH GRAVE */
+  /*0x89*/ 0x00E2, /* LATIN SMALL LETTER A WITH CIRCUMFLEX */
+  /*0x8A*/ 0x00E4, /* LATIN SMALL LETTER A WITH DIAERESIS */
+  /*0x8B*/ 0x00E3, /* LATIN SMALL LETTER A WITH TILDE */
+  /*0x8C*/ 0x00E5, /* LATIN SMALL LETTER A WITH RING ABOVE */
+  /*0x8D*/ 0x00E7, /* LATIN SMALL LETTER C WITH CEDILLA */
+  /*0x8E*/ 0x00E9, /* LATIN SMALL LETTER E WITH ACUTE */
+  /*0x8F*/ 0x00E8, /* LATIN SMALL LETTER E WITH GRAVE */
+  /*0x90*/ 0x00EA, /* LATIN SMALL LETTER E WITH CIRCUMFLEX */
+  /*0x91*/ 0x00EB, /* LATIN SMALL LETTER E WITH DIAERESIS */
+  /*0x92*/ 0x00ED, /* LATIN SMALL LETTER I WITH ACUTE */
+  /*0x93*/ 0x00EC, /* LATIN SMALL LETTER I WITH GRAVE */
+  /*0x94*/ 0x00EE, /* LATIN SMALL LETTER I WITH CIRCUMFLEX */
+  /*0x95*/ 0x00EF, /* LATIN SMALL LETTER I WITH DIAERESIS */
+  /*0x96*/ 0x00F1, /* LATIN SMALL LETTER N WITH TILDE */
+  /*0x97*/ 0x00F3, /* LATIN SMALL LETTER O WITH ACUTE */
+  /*0x98*/ 0x00F2, /* LATIN SMALL LETTER O WITH GRAVE */
+  /*0x99*/ 0x00F4, /* LATIN SMALL LETTER O WITH CIRCUMFLEX */
+  /*0x9A*/ 0x00F6, /* LATIN SMALL LETTER O WITH DIAERESIS */
+  /*0x9B*/ 0x00F5, /* LATIN SMALL LETTER O WITH TILDE */
+  /*0x9C*/ 0x00FA, /* LATIN SMALL LETTER U WITH ACUTE */
+  /*0x9D*/ 0x00F9, /* LATIN SMALL LETTER U WITH GRAVE */
+  /*0x9E*/ 0x00FB, /* LATIN SMALL LETTER U WITH CIRCUMFLEX */
+  /*0x9F*/ 0x00FC, /* LATIN SMALL LETTER U WITH DIAERESIS */
+  /*0xA0*/ 0x2020, /* DAGGER */
+  /*0xA1*/ 0x00B0, /* DEGREE SIGN */
+  /*0xA2*/ 0x00A2, /* CENT SIGN */
+  /*0xA3*/ 0x00A3, /* POUND SIGN */
+  /*0xA4*/ 0x00A7, /* SECTION SIGN */
+  /*0xA5*/ 0x2022, /* BULLET */
+  /*0xA6*/ 0x00B6, /* PILCROW SIGN */
+  /*0xA7*/ 0x00DF, /* LATIN SMALL LETTER SHARP S */
+  /*0xA8*/ 0x00AE, /* REGISTERED SIGN */
+  /*0xA9*/ 0x00A9, /* COPYRIGHT SIGN */
+  /*0xAA*/ 0x2122, /* TRADE MARK SIGN */
+  /*0xAB*/ 0x00B4, /* ACUTE ACCENT */
+  /*0xAC*/ 0x00A8, /* DIAERESIS */
+  /*0xAD*/ 0x2260, /* NOT EQUAL TO */
+  /*0xAE*/ 0x00C6, /* LATIN CAPITAL LETTER AE */
+  /*0xAF*/ 0x00D8, /* LATIN CAPITAL LETTER O WITH STROKE */
+  /*0xB0*/ 0x221E, /* INFINITY */
+  /*0xB1*/ 0x00B1, /* PLUS-MINUS SIGN */
+  /*0xB2*/ 0x2264, /* LESS-THAN OR EQUAL TO */
+  /*0xB3*/ 0x2265, /* GREATER-THAN OR EQUAL TO */
+  /*0xB4*/ 0x00A5, /* YEN SIGN */
+  /*0xB5*/ 0x00B5, /* MICRO SIGN */
+  /*0xB6*/ 0x2202, /* PARTIAL DIFFERENTIAL */
+  /*0xB7*/ 0x2211, /* N-ARY SUMMATION */
+  /*0xB8*/ 0x220F, /* N-ARY PRODUCT */
+  /*0xB9*/ 0x03C0, /* GREEK SMALL LETTER PI */
+  /*0xBA*/ 0x222B, /* INTEGRAL */
+  /*0xBB*/ 0x00AA, /* FEMININE ORDINAL INDICATOR */
+  /*0xBC*/ 0x00BA, /* MASCULINE ORDINAL INDICATOR */
+  /*0xBD*/ 0x03A9, /* GREEK CAPITAL LETTER OMEGA */
+  /*0xBE*/ 0x00E6, /* LATIN SMALL LETTER AE */
+  /*0xBF*/ 0x00F8, /* LATIN SMALL LETTER O WITH STROKE */
+  /*0xC0*/ 0x00BF, /* INVERTED QUESTION MARK */
+  /*0xC1*/ 0x00A1, /* INVERTED EXCLAMATION MARK */
+  /*0xC2*/ 0x00AC, /* NOT SIGN */
+  /*0xC3*/ 0x221A, /* SQUARE ROOT */
+  /*0xC4*/ 0x0192, /* LATIN SMALL LETTER F WITH HOOK */
+  /*0xC5*/ 0x2248, /* ALMOST EQUAL TO */
+  /*0xC6*/ 0x2206, /* INCREMENT */
+  /*0xC7*/ 0x00AB, /* LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */
+  /*0xC8*/ 0x00BB, /* RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */
+  /*0xC9*/ 0x2026, /* HORIZONTAL ELLIPSIS */
+  /*0xCA*/ 0x00A0, /* NO-BREAK SPACE */
+  /*0xCB*/ 0x00C0, /* LATIN CAPITAL LETTER A WITH GRAVE */
+  /*0xCC*/ 0x00C3, /* LATIN CAPITAL LETTER A WITH TILDE */
+  /*0xCD*/ 0x00D5, /* LATIN CAPITAL LETTER O WITH TILDE */
+  /*0xCE*/ 0x0152, /* LATIN CAPITAL LIGATURE OE */
+  /*0xCF*/ 0x0153, /* LATIN SMALL LIGATURE OE */
+  /*0xD0*/ 0x2013, /* EN DASH */
+  /*0xD1*/ 0x2014, /* EM DASH */
+  /*0xD2*/ 0x201C, /* LEFT DOUBLE QUOTATION MARK */
+  /*0xD3*/ 0x201D, /* RIGHT DOUBLE QUOTATION MARK */
+  /*0xD4*/ 0x2018, /* LEFT SINGLE QUOTATION MARK */
+  /*0xD5*/ 0x2019, /* RIGHT SINGLE QUOTATION MARK */
+  /*0xD6*/ 0x00F7, /* DIVISION SIGN */
+  /*0xD7*/ 0x25CA, /* LOZENGE */
+  /*0xD8*/ 0x00FF, /* LATIN SMALL LETTER Y WITH DIAERESIS */
+  /*0xD9*/ 0x0178, /* LATIN CAPITAL LETTER Y WITH DIAERESIS */
+  /*0xDA*/ 0x2044, /* FRACTION SLASH */
+  /*0xDB*/ 0x20AC, /* EURO SIGN */
+  /*0xDC*/ 0x2039, /* SINGLE LEFT-POINTING ANGLE QUOTATION MARK */
+  /*0xDD*/ 0x203A, /* SINGLE RIGHT-POINTING ANGLE QUOTATION MARK */
+  /*0xDE*/ 0xFB01, /* LATIN SMALL LIGATURE FI */
+  /*0xDF*/ 0xFB02, /* LATIN SMALL LIGATURE FL */
+  /*0xE0*/ 0x2021, /* DOUBLE DAGGER */
+  /*0xE1*/ 0x00B7, /* MIDDLE DOT */
+  /*0xE2*/ 0x201A, /* SINGLE LOW-9 QUOTATION MARK */
+  /*0xE3*/ 0x201E, /* DOUBLE LOW-9 QUOTATION MARK */
+  /*0xE4*/ 0x2030, /* PER MILLE SIGN */
+  /*0xE5*/ 0x00C2, /* LATIN CAPITAL LETTER A WITH CIRCUMFLEX */
+  /*0xE6*/ 0x00CA, /* LATIN CAPITAL LETTER E WITH CIRCUMFLEX */
+  /*0xE7*/ 0x00C1, /* LATIN CAPITAL LETTER A WITH ACUTE */
+  /*0xE8*/ 0x00CB, /* LATIN CAPITAL LETTER E WITH DIAERESIS */
+  /*0xE9*/ 0x00C8, /* LATIN CAPITAL LETTER E WITH GRAVE */
+  /*0xEA*/ 0x00CD, /* LATIN CAPITAL LETTER I WITH ACUTE */
+  /*0xEB*/ 0x00CE, /* LATIN CAPITAL LETTER I WITH CIRCUMFLEX */
+  /*0xEC*/ 0x00CF, /* LATIN CAPITAL LETTER I WITH DIAERESIS */
+  /*0xED*/ 0x00CC, /* LATIN CAPITAL LETTER I WITH GRAVE */
+  /*0xEE*/ 0x00D3, /* LATIN CAPITAL LETTER O WITH ACUTE */
+  /*0xEF*/ 0x00D4, /* LATIN CAPITAL LETTER O WITH CIRCUMFLEX */
+  /*0xF0*/ 0xF8FF, /* Apple logo */
+  /*0xF1*/ 0x00D2, /* LATIN CAPITAL LETTER O WITH GRAVE */
+  /*0xF2*/ 0x00DA, /* LATIN CAPITAL LETTER U WITH ACUTE */
+  /*0xF3*/ 0x00DB, /* LATIN CAPITAL LETTER U WITH CIRCUMFLEX */
+  /*0xF4*/ 0x00D9, /* LATIN CAPITAL LETTER U WITH GRAVE */
+  /*0xF5*/ 0x0131, /* LATIN SMALL LETTER DOTLESS I */
+  /*0xF6*/ 0x02C6, /* MODIFIER LETTER CIRCUMFLEX ACCENT */
+  /*0xF7*/ 0x02DC, /* SMALL TILDE */
+  /*0xF8*/ 0x00AF, /* MACRON */
+  /*0xF9*/ 0x02D8, /* BREVE */
+  /*0xFA*/ 0x02D9, /* DOT ABOVE */
+  /*0xFB*/ 0x02DA, /* RING ABOVE */
+  /*0xFC*/ 0x00B8, /* CEDILLA */
+  /*0xFD*/ 0x02DD, /* DOUBLE ACUTE ACCENT */
+  /*0xFE*/ 0x02DB, /* OGONEK */
+  /*0xFF*/ 0x02C7, /* CARON */
+};
+
 #if USE_ICONV
 #include <iconv.h>
 #endif
@@ -696,6 +829,35 @@ FcSfntNameTranscode (FT_SfntName *sname)
 	*u8 = '\0';
 	goto done;
     }
+    if (!strcmp (fromcode, "MACINTOSH"))
+    {
+	FcChar8	    *src = sname->string;
+	int	    src_len = sname->string_len;
+	int	    olen;
+	FcChar8	    *u8;
+	FcChar32    ucs4;
+
+	/*
+	 * Convert Latin1 to Utf8. Freed below
+	 */
+	utf8 = malloc (src_len + 1);
+	if (!utf8)
+	    return 0;
+
+	u8 = utf8;
+	while (src_len > 0)
+	{
+	    ucs4 = *src++;
+	    if (ucs4 >= 128)
+	        ucs4 = fcMacRomanNonASCIIToUnicode[ucs4 - 128];
+	    src_len--;
+	    olen = FcUcs4ToUtf8 (ucs4, u8);
+	    u8 += olen;
+	}
+	*u8 = '\0';
+	goto done;
+    }
+
 #if USE_ICONV
     cd = iconv_open ("UTF-8", fromcode);
     if (cd && cd != (iconv_t) (-1))
-- 
2.3.3

From 76151ceaf3417a987ae2c36b247ca82f50d857f6 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 24 Jul 2014 15:34:20 -0400
Subject: [PATCH] Ouch, fix buffer

---
 src/fcfreetype.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 8a95ee4..9740a14 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -829,7 +829,7 @@ FcSfntNameTranscode (FT_SfntName *sname)
 	*u8 = '\0';
 	goto done;
     }
-    if (!strcmp (fromcode, "MACINTOSH"))
+    if (!strcmp (fromcode, FC_ENCODING_MAC_ROMAN))
     {
 	FcChar8	    *src = sname->string;
 	int	    src_len = sname->string_len;
@@ -840,7 +840,7 @@ FcSfntNameTranscode (FT_SfntName *sname)
 	/*
 	 * Convert Latin1 to Utf8. Freed below
 	 */
-	utf8 = malloc (src_len + 1);
+	utf8 = malloc (src_len * 3 + 1);
 	if (!utf8)
 	    return 0;
 
-- 
2.3.3

From 9a8e812477bd65d2ecfa721819d0555289520401 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 24 Jul 2014 15:37:51 -0400
Subject: [PATCH] Use lang=und instead of lang=xx for "undetermined"

That's the correct BCP 47 code.
---
 src/fcfreetype.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 9740a14..000b101 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1446,10 +1446,10 @@ FcFreeTypeQueryFace (const FT_Face  face,
 		    free (utf8);
 		    if (lang)
 		    {
-			/* pad lang list with 'xx' to line up with elt */
+			/* pad lang list with 'und' to line up with elt */
 			while (*nlangp < *np)
 			{
-			    if (!FcPatternAddString (pat, eltlang, (FcChar8 *) "xx"))
+			    if (!FcPatternAddString (pat, eltlang, (FcChar8 *) "und"))
 				goto bail1;
 			    ++*nlangp;
 			}
-- 
2.3.3

From 874a5491641642f669396c514c3672f6794fdfa7 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 24 Jul 2014 15:42:54 -0400
Subject: [PATCH] Remove unused regex code

Regex matching was disabled in f6244d2cf231e1dc756f3e941e61b9bf124879bb
---
 configure.ac | 10 ++--------
 src/fcint.h  |  6 ------
 src/fcstr.c  | 52 ----------------------------------------------------
 3 files changed, 2 insertions(+), 66 deletions(-)

diff --git a/configure.ac b/configure.ac
index ce468b8..a366853 100644
--- a/configure.ac
+++ b/configure.ac
@@ -138,7 +138,7 @@ dnl ==========================================================================
 # Checks for header files.
 AC_HEADER_DIRENT
 AC_HEADER_STDC
-AC_CHECK_HEADERS([fcntl.h regex.h stdlib.h string.h unistd.h sys/statvfs.h sys/vfs.h sys/statfs.h sys/param.h sys/mount.h])
+AC_CHECK_HEADERS([fcntl.h stdlib.h string.h unistd.h sys/statvfs.h sys/vfs.h sys/statfs.h sys/param.h sys/mount.h])
 AX_CREATE_STDINT_H([src/fcstdint.h])
 
 # Checks for typedefs, structures, and compiler characteristics.
@@ -150,7 +150,7 @@ AC_TYPE_PID_T
 # Checks for library functions.
 AC_FUNC_VPRINTF
 AC_FUNC_MMAP
-AC_CHECK_FUNCS([link mkstemp mkostemp _mktemp_s mkdtemp getopt getopt_long getprogname getexecname rand random lrand48 random_r rand_r readlink regcomp regerror regexec regfree fstatvfs fstatfs lstat])
+AC_CHECK_FUNCS([link mkstemp mkostemp _mktemp_s mkdtemp getopt getopt_long getprogname getexecname rand random lrand48 random_r rand_r readlink fstatvfs fstatfs lstat])
 
 dnl AC_CHECK_FUNCS doesn't check for header files.
 dnl posix_fadvise() may be not available in older libc.
@@ -211,12 +211,6 @@ if test "x$ac_cv_func_fstatfs" = "xyes"; then
 fi
 AC_CHECK_MEMBERS([struct dirent.d_type],,,
 	[#include <dirent.h>])
-#
-# regex
-#
-if test "x$ac_cv_func_regcomp" = "xyes" -a "x$ac_cv_func_regerror" = "xyes" -a "x$ac_cv_func_regexec" = "xyes" -a "x$ac_cv_func_regfree"; then
-	AC_DEFINE(USE_REGEX,,[Use regex])
-fi
 
 #
 # Checks for iconv
diff --git a/src/fcint.h b/src/fcint.h
index d3079ed..45dfc6e 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -1152,12 +1152,6 @@ FcStrCmpIgnoreBlanksAndCase (const FcChar8 *s1, const FcChar8 *s2);
 FcPrivate int
 FcStrCmpIgnoreCaseAndDelims (const FcChar8 *s1, const FcChar8 *s2, const FcChar8 *delims);
 
-FcPrivate FcBool
-FcStrRegexCmp (const FcChar8 *s, const FcChar8 *regex);
-
-FcPrivate FcBool
-FcStrRegexCmpIgnoreCase (const FcChar8 *s, const FcChar8 *regex);
-
 FcPrivate const FcChar8 *
 FcStrContainsIgnoreBlanksAndCase (const FcChar8 *s1, const FcChar8 *s2);
 
diff --git a/src/fcstr.c b/src/fcstr.c
index 024dae3..29a577d 100644
--- a/src/fcstr.c
+++ b/src/fcstr.c
@@ -26,9 +26,6 @@
 #include <stdlib.h>
 #include <ctype.h>
 #include <string.h>
-#ifdef HAVE_REGEX_H
-#include <regex.h>
-#endif
 
 
 /* Objects MT-safe for readonly access. */
@@ -242,55 +239,6 @@ FcStrCmp (const FcChar8 *s1, const FcChar8 *s2)
     return (int) c1 - (int) c2;
 }
 
-#ifdef USE_REGEX
-static FcBool
-_FcStrRegexCmp (const FcChar8 *s, const FcChar8 *regex, int cflags, int eflags)
-{
-    int ret = -1;
-    regex_t reg;
-
-    if ((ret = regcomp (&reg, (const char *)regex, cflags)) != 0)
-    {
-	if (FcDebug () & FC_DBG_MATCHV)
-	{
-	    char buf[512];
-
-	    regerror (ret, &reg, buf, 512);
-	    printf("Regexp compile error: %s\n", buf);
-	}
-	return FcFalse;
-    }
-    ret = regexec (&reg, (const char *)s, 0, NULL, eflags);
-    if (ret != 0)
-    {
-	if (FcDebug () & FC_DBG_MATCHV)
-	{
-	    char buf[512];
-
-	    regerror (ret, &reg, buf, 512);
-	    printf("Regexp exec error: %s\n", buf);
-	}
-    }
-    regfree (&reg);
-
-    return ret == 0 ? FcTrue : FcFalse;
-}
-#else
-#  define _FcStrRegexCmp(_s_, _regex_, _cflags_, _eflags_)	(FcFalse)
-#endif
-
-FcBool
-FcStrRegexCmp (const FcChar8 *s, const FcChar8 *regex)
-{
-	return _FcStrRegexCmp (s, regex, REG_EXTENDED | REG_NOSUB, 0);
-}
-
-FcBool
-FcStrRegexCmpIgnoreCase (const FcChar8 *s, const FcChar8 *regex)
-{
-	return _FcStrRegexCmp (s, regex, REG_EXTENDED | REG_NOSUB | REG_ICASE, 0);
-}
-
 /*
  * Return a hash value for a string
  */
-- 
2.3.3

From 9839d0112c6d61ae22bb3f215bffbe88df6781a1 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Thu, 24 Jul 2014 16:07:13 -0400
Subject: [PATCH] Improve / cleanup namelang matching
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Previously, if the patten didn't request, eg, style, then the style
and stylelang were fully copied from the font, even though the pattern
had a stylelang.  Eg:

$ fc-match 'Apple Color Emoji:stylelang=en'
Apple Color Emoji.ttf: "Apple Color Emoji" "標準體"

This change both fixes that and makes the code much more readable.  Now:

$ fc-match 'Apple Color Emoji:stylelang=en'
Apple Color Emoji.ttf: "Apple Color Emoji" "Regular"
---
 src/fcmatch.c | 45 +++++++++++++++++++++++----------------------
 1 file changed, 23 insertions(+), 22 deletions(-)

diff --git a/src/fcmatch.c b/src/fcmatch.c
index 7825518..b0e695d 100644
--- a/src/fcmatch.c
+++ b/src/fcmatch.c
@@ -483,7 +483,7 @@ FcFontRenderPrepare (FcConfig	    *config,
 {
     FcPattern	    *new;
     int		    i;
-    FcPatternElt    *fe, *pe, *fel, *pel;
+    FcPatternElt    *fe, *pe;
     FcValue	    v;
     FcResult	    result;
 
@@ -508,36 +508,25 @@ FcFontRenderPrepare (FcConfig	    *config,
 	    fe->object == FC_STYLE_OBJECT ||
 	    fe->object == FC_FULLNAME_OBJECT)
 	{
+	    FcPatternElt    *fel, *pel;
+
 	    FC_ASSERT_STATIC ((FC_FAMILY_OBJECT + 1) == FC_FAMILYLANG_OBJECT);
 	    FC_ASSERT_STATIC ((FC_STYLE_OBJECT + 1) == FC_STYLELANG_OBJECT);
 	    FC_ASSERT_STATIC ((FC_FULLNAME_OBJECT + 1) == FC_FULLNAMELANG_OBJECT);
 
 	    fel = FcPatternObjectFindElt (font, fe->object + 1);
 	    pel = FcPatternObjectFindElt (pat, fe->object + 1);
-	}
-	else
-	{
-	    fel = NULL;
-	    pel = NULL;
-	}
-	pe = FcPatternObjectFindElt (pat, fe->object);
-	if (pe)
-	{
-	    const FcMatcher *match = FcObjectToMatcher (pe->object, FcFalse);
 
-	    if (!FcCompareValueList (pe->object, match,
-				     FcPatternEltValues(pe),
-				     FcPatternEltValues(fe), &v, NULL, NULL, &result))
-	    {
-		FcPatternDestroy (new);
-		return NULL;
-	    }
 	    if (fel && pel)
 	    {
+		/* The font has name languages, and pattern asks for specific language(s).
+		 * Match on language and and prefer that result.
+		 * Note:  Currently the code only give priority to first matching language.
+		 */
 		int n = 1, j;
 		FcValueListPtr l1, l2, ln = NULL, ll = NULL;
+		const FcMatcher *match = FcObjectToMatcher (pel->object, FcTrue);
 
-		match = FcObjectToMatcher (pel->object, FcTrue);
 		if (!FcCompareValueList (pel->object, match,
 					 FcPatternEltValues (pel),
 					 FcPatternEltValues (fel), NULL, NULL, &n, &result))
@@ -580,9 +569,10 @@ FcFontRenderPrepare (FcConfig	    *config,
 	    }
 	    else if (fel)
 	    {
+		/* Pattern doesn't ask for specific language.  Copy all for name and
+		 * lang. */
 		FcValueListPtr l1, l2;
 
-	    copy_lang:
 		l1 = FcValueListDuplicate (FcPatternEltValues (fe));
 		l2 = FcValueListDuplicate (FcPatternEltValues (fel));
 		FcPatternObjectListAdd (new, fe->object, l1, FcFalse);
@@ -590,12 +580,23 @@ FcFontRenderPrepare (FcConfig	    *config,
 
 		continue;
 	    }
+	}
+
+	pe = FcPatternObjectFindElt (pat, fe->object);
+	if (pe)
+	{
+	    const FcMatcher *match = FcObjectToMatcher (pe->object, FcFalse);
+	    if (!FcCompareValueList (pe->object, match,
+				     FcPatternEltValues(pe),
+				     FcPatternEltValues(fe), &v, NULL, NULL, &result))
+	    {
+		FcPatternDestroy (new);
+		return NULL;
+	    }
 	    FcPatternObjectAdd (new, fe->object, v, FcFalse);
 	}
 	else
 	{
-	    if (fel)
-		goto copy_lang;
 	    FcPatternObjectListAdd (new, fe->object,
 				    FcValueListDuplicate (FcPatternEltValues (fe)),
 				    FcTrue);
-- 
2.3.3

From be6506ca04ccce10868a8cd51d89e586284d149b Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 25 Jul 2014 16:24:26 -0400
Subject: [PATCH] Add FC_WEIGHT_DEMILIGHT

Part of https://bugs.freedesktop.org/show_bug.cgi?id=81453
Also hooks up FC_WEIGHT_BOOK to fcfreetype.c.
---
 doc/fontconfig-user.sgml | 2 ++
 fontconfig/fontconfig.h  | 2 ++
 src/fcfreetype.c         | 8 +++++++-
 src/fcname.c             | 2 ++
 4 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/doc/fontconfig-user.sgml b/doc/fontconfig-user.sgml
index 775d1f7..b54ba7a 100644
--- a/doc/fontconfig-user.sgml
+++ b/doc/fontconfig-user.sgml
@@ -473,6 +473,8 @@ symbolic names for common font values:
   extralight      weight          40
   ultralight      weight          40
   light           weight          50
+  demilight       weight          65
+  semilight       weight          65
   book            weight          75
   regular         weight          80
   normal          weight          80
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index 8575cc4..1f26cb4 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -131,6 +131,8 @@ typedef int		FcBool;
 #define FC_WEIGHT_EXTRALIGHT	    40
 #define FC_WEIGHT_ULTRALIGHT	    FC_WEIGHT_EXTRALIGHT
 #define FC_WEIGHT_LIGHT		    50
+#define FC_WEIGHT_DEMILIGHT	    65
+#define FC_WEIGHT_SEMILIGHT	    FC_WEIGHT_DEMILIGHT
 #define FC_WEIGHT_BOOK		    75
 #define FC_WEIGHT_REGULAR	    80
 #define FC_WEIGHT_NORMAL	    FC_WEIGHT_REGULAR
diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 000b101..0e1ff5d 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1095,6 +1095,8 @@ static const FcStringConst  weightConsts[] = {
     { (FC8) "thin",		FC_WEIGHT_THIN },
     { (FC8) "extralight",	FC_WEIGHT_EXTRALIGHT },
     { (FC8) "ultralight",	FC_WEIGHT_ULTRALIGHT },
+    { (FC8) "demilight",	FC_WEIGHT_DEMILIGHT },
+    { (FC8) "semilight",	FC_WEIGHT_SEMILIGHT },
     { (FC8) "light",		FC_WEIGHT_LIGHT },
     { (FC8) "book",		FC_WEIGHT_BOOK },
     { (FC8) "regular",		FC_WEIGHT_REGULAR },
@@ -1632,8 +1634,12 @@ FcFreeTypeQueryFace (const FT_Face  face,
 	    weight = FC_WEIGHT_THIN;
 	else if (os2->usWeightClass < 250)
 	    weight = FC_WEIGHT_EXTRALIGHT;
-	else if (os2->usWeightClass < 350)
+	else if (os2->usWeightClass < 325)
 	    weight = FC_WEIGHT_LIGHT;
+	else if (os2->usWeightClass < 365)
+	    weight = FC_WEIGHT_SEMILIGHT;
+	else if (os2->usWeightClass < 390)
+	    weight = FC_WEIGHT_BOOK;
 	else if (os2->usWeightClass < 450)
 	    weight = FC_WEIGHT_REGULAR;
 	else if (os2->usWeightClass < 550)
diff --git a/src/fcname.c b/src/fcname.c
index 4666178..1d8fe75 100644
--- a/src/fcname.c
+++ b/src/fcname.c
@@ -136,6 +136,8 @@ static const FcConstant _FcBaseConstants[] = {
     { (FcChar8 *) "thin",	    "weight",   FC_WEIGHT_THIN, },
     { (FcChar8 *) "extralight",	    "weight",   FC_WEIGHT_EXTRALIGHT, },
     { (FcChar8 *) "ultralight",	    "weight",   FC_WEIGHT_EXTRALIGHT, },
+    { (FcChar8 *) "demilight",	    "weight",   FC_WEIGHT_DEMILIGHT, },
+    { (FcChar8 *) "semilight",	    "weight",   FC_WEIGHT_DEMILIGHT, },
     { (FcChar8 *) "light",	    "weight",   FC_WEIGHT_LIGHT, },
     { (FcChar8 *) "book",	    "weight",	FC_WEIGHT_BOOK, },
     { (FcChar8 *) "regular",	    "weight",   FC_WEIGHT_REGULAR, },
-- 
2.3.3

From bf9df5ada77469f57101851f6b4e279a4a5ea087 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 25 Jul 2014 18:07:10 -0400
Subject: [PATCH] Change DemiLight from 65 to 55

Such that Regular is closer to Medium than to DemiLight
---
 doc/fontconfig-user.sgml | 4 ++--
 fontconfig/fontconfig.h  | 2 +-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/doc/fontconfig-user.sgml b/doc/fontconfig-user.sgml
index b54ba7a..482b453 100644
--- a/doc/fontconfig-user.sgml
+++ b/doc/fontconfig-user.sgml
@@ -473,8 +473,8 @@ symbolic names for common font values:
   extralight      weight          40
   ultralight      weight          40
   light           weight          50
-  demilight       weight          65
-  semilight       weight          65
+  demilight       weight          55
+  semilight       weight          55
   book            weight          75
   regular         weight          80
   normal          weight          80
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index 1f26cb4..af027f0 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -131,7 +131,7 @@ typedef int		FcBool;
 #define FC_WEIGHT_EXTRALIGHT	    40
 #define FC_WEIGHT_ULTRALIGHT	    FC_WEIGHT_EXTRALIGHT
 #define FC_WEIGHT_LIGHT		    50
-#define FC_WEIGHT_DEMILIGHT	    65
+#define FC_WEIGHT_DEMILIGHT	    55
 #define FC_WEIGHT_SEMILIGHT	    FC_WEIGHT_DEMILIGHT
 #define FC_WEIGHT_BOOK		    75
 #define FC_WEIGHT_REGULAR	    80
-- 
2.3.3

From ffda7c0e8130eb107ecbb3bdc48043093b12dff9 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 25 Jul 2014 17:59:26 -0400
Subject: [PATCH] Linearly interpolate weight values

Rest of Part of https://bugs.freedesktop.org/show_bug.cgi?id=81453

Adds new API:

	FcWeightFromOpenType()
	FcWeightToOpenType()
---
 doc/Makefile.am         |  1 +
 doc/fcweight.fncs       | 47 +++++++++++++++++++++++++++
 fontconfig/fontconfig.h |  7 +++++
 src/Makefile.am         |  1 +
 src/fcfreetype.c        | 27 +---------------
 src/fcweight.c          | 84 +++++++++++++++++++++++++++++++++++++++++++++++++
 6 files changed, 141 insertions(+), 26 deletions(-)
 create mode 100644 doc/fcweight.fncs
 create mode 100644 src/fcweight.c

diff --git a/doc/Makefile.am b/doc/Makefile.am
index 7503219..9141ab2 100644
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -85,6 +85,7 @@ DOC_FUNCS_FNCS =		\
 	fcstring.fncs		\
 	fcstrset.fncs		\
 	fcvalue.fncs		\
+	fcweight.fncs		\
 	$(NULL)
 SGML_FILES =			\
 	fontconfig-user.sgml	\
diff --git a/doc/fcweight.fncs b/doc/fcweight.fncs
new file mode 100644
index 0000000..2872dd6
--- /dev/null
+++ b/doc/fcweight.fncs
@@ -0,0 +1,47 @@
+/*
+ * fontconfig/doc/fcweight.fncs
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and its
+ * documentation for any purpose is hereby granted without fee, provided that
+ * the above copyright notice appear in all copies and that both that
+ * copyright notice and this permission notice appear in supporting
+ * documentation, and that the name of the author(s) not be used in
+ * advertising or publicity pertaining to distribution of the software without
+ * specific, written prior permission.  The authors make no
+ * representations about the suitability of this software for any purpose.  It
+ * is provided "as is" without express or implied warranty.
+ *
+ * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
+ * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
+ * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR
+ * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
+ * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
+ * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+ * PERFORMANCE OF THIS SOFTWARE.
+ */
+@RET@		int
+@FUNC@		FcWeightFromOpenType
+@TYPE1@		int				@ARG1@		ot_weight
+@PURPOSE@	Convert from OpenType weight values to fontconfig ones
+@DESC@
+<function>FcWeightFromOpenType</function> returns an integer value
+to use with FC_WEIGHT, from an integer in the 1..1000 range, resembling
+the numbers from OpenType specification's OS/2 usWeight numbers, which
+are also similar to CSS font-weight numbers.  If input is negative,
+zero, or greater than 1000, returns -1.  This function linearly interpolates
+between various FC_WEIGHT_* constants.  As such, the returned value does not
+necessarily match any of the predefined constants.
+@SINCE@		2.11.91
+@@
+
+@RET@		int
+@FUNC@		FcWeightToOpenType
+@TYPE1@		int				@ARG1@		ot_weight
+@PURPOSE@	Convert from fontconfig weight values to OpenType ones
+@DESC@
+<function>FcWeightToOpenType</function> is the inverse of
+<function>FcWeightFromOpenType</function>.  If the input is less than
+FC_WEIGHT_THIN or greater than FC_WEIGHT_EXTRABLACK, returns -1.  Otherwise
+returns a number in the range 1 to 1000.
+@SINCE@		2.11.91
+@@
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index af027f0..e5b0959 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -908,6 +908,13 @@ FcRangeDestroy (FcRange *range);
 FcPublic FcRange *
 FcRangeCopy (const FcRange *r);
 
+/* fcweight.c */
+
+FcPublic int
+FcWeightFromOpenType (int ot_weight);
+
+FcPublic int
+FcWeightToOpenType (int fc_weight);
 
 /* fcstr.c */
 
diff --git a/src/Makefile.am b/src/Makefile.am
index c1991b2..3757cf8 100644
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -154,6 +154,7 @@ libfontconfig_la_SOURCES = \
 	fcserialize.c \
 	fcstat.c \
 	fcstr.c \
+	fcweight.c \
 	fcwindows.h \
 	fcxml.c \
 	ftglue.h \
diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 0e1ff5d..aca2f70 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1628,32 +1628,7 @@ FcFreeTypeQueryFace (const FT_Face  face,
 
     if (os2 && os2->version != 0xffff)
     {
-	if (os2->usWeightClass == 0)
-	    ;
-	else if (os2->usWeightClass < 150)
-	    weight = FC_WEIGHT_THIN;
-	else if (os2->usWeightClass < 250)
-	    weight = FC_WEIGHT_EXTRALIGHT;
-	else if (os2->usWeightClass < 325)
-	    weight = FC_WEIGHT_LIGHT;
-	else if (os2->usWeightClass < 365)
-	    weight = FC_WEIGHT_SEMILIGHT;
-	else if (os2->usWeightClass < 390)
-	    weight = FC_WEIGHT_BOOK;
-	else if (os2->usWeightClass < 450)
-	    weight = FC_WEIGHT_REGULAR;
-	else if (os2->usWeightClass < 550)
-	    weight = FC_WEIGHT_MEDIUM;
-	else if (os2->usWeightClass < 650)
-	    weight = FC_WEIGHT_SEMIBOLD;
-	else if (os2->usWeightClass < 750)
-	    weight = FC_WEIGHT_BOLD;
-	else if (os2->usWeightClass < 850)
-	    weight = FC_WEIGHT_EXTRABOLD;
-	else if (os2->usWeightClass < 925)
-	    weight = FC_WEIGHT_BLACK;
-	else if (os2->usWeightClass < 1000)
-	    weight = FC_WEIGHT_EXTRABLACK;
+	weight = FcWeightFromOpenType (os2->usWeightClass);
 	if ((FcDebug() & FC_DBG_SCANV) && weight != -1)
 	    printf ("\tos2 weight class %d maps to weight %d\n",
 		    os2->usWeightClass, weight);
diff --git a/src/fcweight.c b/src/fcweight.c
new file mode 100644
index 0000000..20c5da0
--- /dev/null
+++ b/src/fcweight.c
@@ -0,0 +1,84 @@
+/*
+ * fontconfig/src/fcweight.c
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and its
+ * documentation for any purpose is hereby granted without fee, provided that
+ * the above copyright notice appear in all copies and that both that
+ * copyright notice and this permission notice appear in supporting
+ * documentation, and that the name of the author(s) not be used in
+ * advertising or publicity pertaining to distribution of the software without
+ * specific, written prior permission.  The authors make no
+ * representations about the suitability of this software for any purpose.  It
+ * is provided "as is" without express or implied warranty.
+ *
+ * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
+ * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
+ * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR
+ * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
+ * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
+ * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+ * PERFORMANCE OF THIS SOFTWARE.
+ */
+
+#include "fcint.h"
+
+static const struct {
+  int ot;
+  int fc;
+} map[] = {
+    {   0, FC_WEIGHT_THIN },
+    { 100, FC_WEIGHT_THIN },
+    { 200, FC_WEIGHT_EXTRALIGHT },
+    { 350, FC_WEIGHT_DEMILIGHT },
+    { 300, FC_WEIGHT_LIGHT },
+    { 380, FC_WEIGHT_BOOK },
+    { 400, FC_WEIGHT_REGULAR },
+    { 500, FC_WEIGHT_MEDIUM },
+    { 600, FC_WEIGHT_DEMIBOLD },
+    { 700, FC_WEIGHT_BOLD },
+    { 800, FC_WEIGHT_EXTRABOLD },
+    { 900, FC_WEIGHT_BLACK },
+    {1000, FC_WEIGHT_EXTRABLACK },
+};
+
+static int lerp(int x, int x1, int x2, int y1, int y2)
+{
+  int dx = x2 - x1;
+  int dy = y2 - y1;
+  assert (dx > 0 && dy > 0 && x1 <= x && x <= x2);
+  return y1 + (dy*(x-x1) + dx/2) / dx;
+}
+
+FcPublic int
+FcWeightFromOpenType (int ot_weight)
+{
+	int i;
+	if (ot_weight <= 0 || ot_weight > 1000)
+	    return -1;
+
+	for (i = 1; ot_weight > map[i].ot; i++)
+	  ;
+
+	if (ot_weight == map[i].ot)
+	  return map[i].fc;
+
+	/* Interpolate between two items. */
+	return lerp (ot_weight, map[i-1].ot, map[i].ot, map[i-1].fc, map[i].fc);
+}
+
+FcPublic int
+FcWeightToOpenType (int fc_weight)
+{
+	int i;
+	if (fc_weight < 0 || fc_weight > FC_WEIGHT_EXTRABLACK)
+	    return -1;
+
+	for (i = 1; fc_weight > map[i].fc; i++)
+	  ;
+
+	if (fc_weight == map[i].fc)
+	  return map[i].ot;
+
+	/* Interpolate between two items. */
+	return lerp (fc_weight, map[i-1].fc, map[i].fc, map[i-1].ot, map[i].ot);
+}
-- 
2.3.3

From a9e7b0494e04b3925d1bccc140ff2500cfff9618 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sat, 26 Jul 2014 16:17:02 -0400
Subject: [PATCH] Export recently added API

We should remove this alias mess.
---
 src/fccompat.c | 4 ++++
 src/fcrange.c  | 4 ++++
 src/fcstat.c   | 4 ++++
 src/fcweight.c | 4 ++++
 4 files changed, 16 insertions(+)

diff --git a/src/fccompat.c b/src/fccompat.c
index f4f3f5f..31d80be 100644
--- a/src/fccompat.c
+++ b/src/fccompat.c
@@ -255,3 +255,7 @@ FcMakeDirectory (const FcChar8 *dir)
     FcStrFree (parent);
     return ret;
 }
+
+#define __fccompat__
+#include "fcaliastail.h"
+#undef __fccompat__
diff --git a/src/fcrange.c b/src/fcrange.c
index 7d0c1c0..39eafd8 100644
--- a/src/fcrange.c
+++ b/src/fcrange.c
@@ -205,3 +205,7 @@ FcRangeSerialize (FcSerialize *serialize, const FcRange *r)
 
     return r_serialize;
 }
+
+#define __fcrange__
+#include "fcaliastail.h"
+#undef __fcrange__
diff --git a/src/fcstat.c b/src/fcstat.c
index 0a88097..bbae102 100644
--- a/src/fcstat.c
+++ b/src/fcstat.c
@@ -360,3 +360,7 @@ FcIsFsMtimeBroken (const FcChar8 *dir)
 
     return FcFalse;
 }
+
+#define __fcstat__
+#include "fcaliastail.h"
+#undef __fcstat__
diff --git a/src/fcweight.c b/src/fcweight.c
index 20c5da0..87bbe67 100644
--- a/src/fcweight.c
+++ b/src/fcweight.c
@@ -82,3 +82,7 @@ FcWeightToOpenType (int fc_weight)
 	/* Interpolate between two items. */
 	return lerp (fc_weight, map[i-1].fc, map[i].fc, map[i-1].ot, map[i].ot);
 }
+
+#define __fcweight__
+#include "fcaliastail.h"
+#undef __fcweight__
-- 
2.3.3

From 37e501ed0af9b1f68f64600e00e90809e19f9302 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sun, 27 Jul 2014 16:53:28 -0400
Subject: [PATCH] Remove unneeded FcPublic

---
 src/fcweight.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/fcweight.c b/src/fcweight.c
index 87bbe67..c62f807 100644
--- a/src/fcweight.c
+++ b/src/fcweight.c
@@ -49,7 +49,7 @@ static int lerp(int x, int x1, int x2, int y1, int y2)
   return y1 + (dy*(x-x1) + dx/2) / dx;
 }
 
-FcPublic int
+int
 FcWeightFromOpenType (int ot_weight)
 {
 	int i;
@@ -66,7 +66,7 @@ FcWeightFromOpenType (int ot_weight)
 	return lerp (ot_weight, map[i-1].ot, map[i].ot, map[i-1].fc, map[i].fc);
 }
 
-FcPublic int
+int
 FcWeightToOpenType (int fc_weight)
 {
 	int i;
-- 
2.3.3

From 01bb6978b6389852c5259b135af45ecdfe9f42f8 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 6 Aug 2014 12:23:24 -0400
Subject: [PATCH] Fix assertion failure

https://bugs.freedesktop.org/show_bug.cgi?id=82220
https://bugs.freedesktop.org/show_bug.cgi?id=82228
---
 src/fcweight.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fcweight.c b/src/fcweight.c
index c62f807..313f3f2 100644
--- a/src/fcweight.c
+++ b/src/fcweight.c
@@ -45,7 +45,7 @@ static int lerp(int x, int x1, int x2, int y1, int y2)
 {
   int dx = x2 - x1;
   int dy = y2 - y1;
-  assert (dx > 0 && dy > 0 && x1 <= x && x <= x2);
+  assert (dx > 0 && dy >= 0 && x1 <= x && x <= x2);
   return y1 + (dy*(x-x1) + dx/2) / dx;
 }
 
-- 
2.3.3

From 80edaccc3cbd77434718e8f4731a20b410f9d10a Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 6 Aug 2014 12:29:35 -0400
Subject: [PATCH] If OS/2 table says weight is 1 to 9, multiply by 100

https://bugs.freedesktop.org/show_bug.cgi?id=82228
---
 src/fcweight.c | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/src/fcweight.c b/src/fcweight.c
index 313f3f2..77b78ad 100644
--- a/src/fcweight.c
+++ b/src/fcweight.c
@@ -53,7 +53,14 @@ int
 FcWeightFromOpenType (int ot_weight)
 {
 	int i;
-	if (ot_weight <= 0 || ot_weight > 1000)
+
+	/* Follow WPF Font Selection Model's advice. */
+	if (1 <= ot_weight && ot_weight <= 9)
+	    ot_weight *= 100;
+
+	/* WPF Font Selection Model rejects 1000, we allow it
+	 * because Pango uses that number. */
+	if (ot_weight < 1 || ot_weight > 1000)
 	    return -1;
 
 	for (i = 1; ot_weight > map[i].ot; i++)
-- 
2.3.3

From 3d2627bba6ce9f743273c6031a34fb2750c04a41 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 6 Aug 2014 14:28:18 -0400
Subject: [PATCH] Trebuchet MS is a sans-serif font, not serif

https://bugs.freedesktop.org/show_bug.cgi?id=82099
---
 conf.d/45-latin.conf | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/conf.d/45-latin.conf b/conf.d/45-latin.conf
index aa62ed4..0cbf7c9 100644
--- a/conf.d/45-latin.conf
+++ b/conf.d/45-latin.conf
@@ -57,10 +57,6 @@
 		<family>Palatino Linotype</family>
 		<default><family>serif</family></default>
 	</alias>
-	<alias>
-		<family>Trebuchet MS</family>
-		<default><family>serif</family></default>
-	</alias>
 <!--
   Sans-serif faces
  -->
@@ -104,6 +100,10 @@
 		<family>Luxi Sans</family>
 		<default><family>sans-serif</family></default>
 	</alias>
+	<alias>
+		<family>Trebuchet MS</family>
+		<default><family>serif</family></default>
+	</alias>
 <!--
   Monospace faces
  -->
-- 
2.3.3

From 748a2ce9d4bd6aae90b974724b795056e2bcb4d7 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 6 Aug 2014 14:45:02 -0400
Subject: [PATCH] Fix previous commit

Ouch!
---
 conf.d/45-latin.conf | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/conf.d/45-latin.conf b/conf.d/45-latin.conf
index 0cbf7c9..996fb81 100644
--- a/conf.d/45-latin.conf
+++ b/conf.d/45-latin.conf
@@ -102,7 +102,7 @@
 	</alias>
 	<alias>
 		<family>Trebuchet MS</family>
-		<default><family>serif</family></default>
+		<default><family>sans-serif</family></default>
 	</alias>
 <!--
   Monospace faces
-- 
2.3.3

From 841753a93f0e5698663b7931b8456e7b96259f54 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 11 Aug 2014 12:14:54 +0900
Subject: [PATCH] fallback to the another method to lock when link() failed

Bug 82358 - FcAtomicLock fails on OS X on network mounts
https://bugs.freedesktop.org/show_bug.cgi?id=82358
---
 src/fcatomic.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fcatomic.c b/src/fcatomic.c
index c1daed9..2ce419f 100644
--- a/src/fcatomic.c
+++ b/src/fcatomic.c
@@ -131,7 +131,7 @@ FcAtomicLock (FcAtomic *atomic)
 	return FcFalse;
     }
     ret = link ((char *) atomic->tmp, (char *) atomic->lck);
-    if (ret < 0 && errno == EPERM)
+    if (ret < 0 && (errno == EPERM || errno == ENOTSUP))
     {
 	/* the filesystem where atomic->lck points to may not supports
 	 * the hard link. so better try to fallback
-- 
2.3.3

From 23e88d8c6a5d3d0a9526a3f3217bd33a7607cbab Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 12 Aug 2014 18:48:00 +0900
Subject: [PATCH] Increase the refcount in FcConfigSetCurrent()

https://bugs.freedesktop.org/show_bug.cgi?id=82432
---
 fc-cat/fc-cat.c | 1 +
 src/fccfg.c     | 5 +++++
 src/fcinit.c    | 9 ++++++++-
 3 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/fc-cat/fc-cat.c b/fc-cat/fc-cat.c
index 9a2abb3..3a303c2 100644
--- a/fc-cat/fc-cat.c
+++ b/fc-cat/fc-cat.c
@@ -298,6 +298,7 @@ main (int argc, char **argv)
 	return 1;
     }
     FcConfigSetCurrent (config);
+    FcConfigDestroy (config);
     
     args = FcStrSetCreate ();
     if (!args)
diff --git a/src/fccfg.c b/src/fccfg.c
index f8ee8d2..55cb297 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -434,6 +434,7 @@ retry:
     if (!fc_atomic_ptr_cmpexch (&_fcConfig, cfg, config))
 	goto retry;
 
+    FcConfigReference (config);
     if (cfg)
 	FcConfigDestroy (cfg);
 
@@ -2405,6 +2406,10 @@ FcConfigSetSysRoot (FcConfig      *config,
     {
 	config = FcInitLoadOwnConfigAndFonts (config);
 	FcConfigSetCurrent (config);
+	/* FcConfigSetCurrent() increases the refcount.
+	 * decrease it here to avoid the memory leak.
+	 */
+	FcConfigDestroy (config);
     }
 }
 
diff --git a/src/fcinit.c b/src/fcinit.c
index 1e23c1f..db62c21 100644
--- a/src/fcinit.c
+++ b/src/fcinit.c
@@ -189,11 +189,18 @@ FcBool
 FcInitReinitialize (void)
 {
     FcConfig	*config;
+    FcBool	ret;
 
     config = FcInitLoadConfigAndFonts ();
     if (!config)
 	return FcFalse;
-    return FcConfigSetCurrent (config);
+    ret = FcConfigSetCurrent (config);
+    /* FcConfigSetCurrent() increases the refcount.
+     * decrease it here to avoid the memory leak.
+     */
+    FcConfigDestroy (config);
+
+    return ret;
 }
 
 FcBool
-- 
2.3.3

From eb2689c67ba2da969d33be43a05af1e8975e9837 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 12 Aug 2014 18:53:04 +0900
Subject: [PATCH] Fix the memory leak in fc-cat

---
 fc-cat/fc-cat.c | 8 ++------
 1 file changed, 2 insertions(+), 6 deletions(-)

diff --git a/fc-cat/fc-cat.c b/fc-cat/fc-cat.c
index 3a303c2..f0131b6 100644
--- a/fc-cat/fc-cat.c
+++ b/fc-cat/fc-cat.c
@@ -316,12 +316,6 @@ main (int argc, char **argv)
 		return 1;
 	    }
 	}
-	arglist = FcStrListCreate (args);
-	if (!arglist)
-	{
-	    fprintf (stderr, "%s: malloc failure\n", argv[0]);
-	    return 1;
-	}
     }
     else
     {
@@ -341,6 +335,7 @@ main (int argc, char **argv)
 	fprintf (stderr, "%s: malloc failure\n", argv[0]);
 	return 1;
     }
+    FcStrSetDestroy (args);
 
     while ((arg = FcStrListNext (arglist)))
     {
@@ -385,6 +380,7 @@ main (int argc, char **argv)
 	if (cache_file)
 	    FcStrFree (cache_file);
     }
+    FcStrListDone (arglist);
 
     FcFini ();
     return 0;
-- 
2.3.3

From f0945396875ec4ff60add56935b02c3f66b3fc40 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 13 Aug 2014 11:39:29 +0900
Subject: [PATCH] Note FcConfigSetCurrent() increases the refcount in document

---
 doc/fcconfig.fncs | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/doc/fcconfig.fncs b/doc/fcconfig.fncs
index 24d7121..10f5afc 100644
--- a/doc/fcconfig.fncs
+++ b/doc/fcconfig.fncs
@@ -59,7 +59,8 @@ cause a new configuration to be created for use as current configuration.
 @PURPOSE@	Set configuration as default
 @DESC@
 Sets the current default configuration to <parameter>config</parameter>.  Implicitly calls
-FcConfigBuildFonts if necessary, returning FcFalse if that call fails.
+FcConfigBuildFonts if necessary, and FcConfigReference() to inrease the reference count
+in <parameter>config</parameter> since 2.12.0, returning FcFalse if that call fails.
 @@
 
 @RET@           FcConfig *
-- 
2.3.3

From 286cdc9c10b0453c25950103b6a1f7170d15bfdc Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 20 Aug 2014 15:23:04 -0400
Subject: [PATCH] Revert "[fcmatch] When matching, reserve score 0 for when
 elements don't exist"

This reverts commit a5a384c5ffb479e095092c2aaedd406f8785280a.

I don't remember what I had in mind for "We will use this property later.", but
the change was wrong.  If a font pattern doesn't have any value for element,
it must be interpretted as "it matches any value perfectly.  And "perfectly"
must have a score of 0 for that to happen.

This was actually affecting bitmap fonts (in a bad way), as the change made
an outline font to always be preferred over a (otherwise equal) bitmap font,
even for the exact size of the bitmap font.  That probably was never noticed
by anyone, but with the font range support this has become clear (and worked
around by Akira).  To clean that up, I'm reverting this so I can land the
rest of patches for bug 80873.

https://bugs.freedesktop.org/show_bug.cgi?id=80873#c10
---
 src/fcmatch.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fcmatch.c b/src/fcmatch.c
index b0e695d..25081e2 100644
--- a/src/fcmatch.c
+++ b/src/fcmatch.c
@@ -375,7 +375,7 @@ FcCompareValueList (FcObject	     object,
     best = 1e99;
     bestStrong = 1e99;
     bestWeak = 1e99;
-    j = 1;
+    j = 0;
     for (v1 = v1orig; v1; v1 = FcValueListNext(v1))
     {
 	for (v2 = v2orig, k = 0; v2; v2 = FcValueListNext(v2), k++)
-- 
2.3.3

From 1082161ea303cf2bbc13b62a191662984131e820 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 25 Sep 2014 17:03:27 +0900
Subject: [PATCH] Add FcRangeGetDouble()

https://bugs.freedesktop.org/show_bug.cgi?id=82876
---
 doc/fcrange.fncs        | 10 ++++++++++
 fontconfig/fontconfig.h |  3 +++
 src/fcrange.c           | 23 +++++++++++++++++++++++
 3 files changed, 36 insertions(+)

diff --git a/doc/fcrange.fncs b/doc/fcrange.fncs
index 6054595..4181b80 100644
--- a/doc/fcrange.fncs
+++ b/doc/fcrange.fncs
@@ -62,3 +62,13 @@ integer sized value.
 all memory associated with it.
 @SINCE@		2.11.91
 @@
+
+@RET@		FcBool
+@FUNC@		FcRangeGetDouble
+@TYPE1@		const FcRange *			@ARG1@		range
+@TYPE2@		double *      			@ARG2@		begin
+@TYPE3@		double *			@ARG3@		end
+@PURPOSE@	Get the range in double
+@DESC@
+Returns in <parameter>begin</parameter> and <parameter>end</parameter> as the range.
+@SINCE@		2.11.91
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index e5b0959..afc917c 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -908,6 +908,9 @@ FcRangeDestroy (FcRange *range);
 FcPublic FcRange *
 FcRangeCopy (const FcRange *r);
 
+FcPublic FcBool
+FcRangeGetDouble(const FcRange *range, double *begin, double *end);
+
 /* fcweight.c */
 
 FcPublic int
diff --git a/src/fcrange.c b/src/fcrange.c
index 39eafd8..37cf067 100644
--- a/src/fcrange.c
+++ b/src/fcrange.c
@@ -76,6 +76,29 @@ FcRangeCopy (const FcRange *range)
     return ret;
 }
 
+FcBool
+FcRangeGetDouble(const FcRange *range, double *begin, double *end)
+{
+    if (!range)
+	return FcFalse;
+    if (range->is_double)
+    {
+	if (begin)
+	    *begin = range->u.d.begin;
+	if (end)
+	    *end = range->u.d.end;
+    }
+    else
+    {
+	if (begin)
+	    *begin = (double)range->u.i.begin;
+	if (end)
+	    *end = (double)range->u.i.end;
+    }
+
+    return FcTrue;
+}
+
 FcRange
 FcRangeCanonicalize (const FcRange *range)
 {
-- 
2.3.3

From e7121de237a1873c3241a5b8451e7d00a3d41524 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Fri, 3 Oct 2014 12:26:42 +0900
Subject: [PATCH] Revert "Bug 73291 - poppler does not show fl ligature"

This reverts commit c6aa4d4bfcbed14f39d070fe7ef90a4b74642ee7.

This issue has been fixed in poppler and we no longer need to patch it out in fontconfig.
---
 conf.d/30-metric-aliases.conf | 6 ------
 1 file changed, 6 deletions(-)

diff --git a/conf.d/30-metric-aliases.conf b/conf.d/30-metric-aliases.conf
index 08c8ba3..49a9602 100644
--- a/conf.d/30-metric-aliases.conf
+++ b/conf.d/30-metric-aliases.conf
@@ -77,15 +77,12 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  </default>
 	</alias>
 
-<!--
-     Due to Bug#73291, commented out those lines until the broken font are fixed.
 	<alias binding="same">
 	  <family>TeX Gyre Termes</family>
 	  <default>
 	  <family>Times</family>
 	  </default>
 	</alias>
--->
 
 	<alias binding="same">
 	  <family>Nimbus Mono L</family>
@@ -418,10 +415,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	<alias binding="same">
 	  <family>Times</family>
 	  <accept>
-<!--
-     Due to Bug#73291, commented out this line until the broken font are fixed.
 	  <family>TeX Gyre Termes</family>
--->
 	  <family>Nimbus Roman No9 L</family>
 	  </accept>
 	</alias>
-- 
2.3.3

From b732bf057f4b3ec3bac539803005e9c42d056b2a Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 6 Nov 2014 13:15:09 +0900
Subject: [PATCH] Update aliases for new URW fonts

Patch from Tom Yan

https://bugs.freedesktop.org/show_bug.cgi?id=85225
---
 conf.d/30-metric-aliases.conf | 94 ++++++++++++++++++++++++++++++++++++++-----
 conf.d/45-latin.conf          | 12 ++++++
 conf.d/60-latin.conf          |  3 ++
 3 files changed, 98 insertions(+), 11 deletions(-)

diff --git a/conf.d/30-metric-aliases.conf b/conf.d/30-metric-aliases.conf
index 49a9602..cd1e924 100644
--- a/conf.d/30-metric-aliases.conf
+++ b/conf.d/30-metric-aliases.conf
@@ -6,17 +6,17 @@
 
 Alias similar/metric-compatible families from various sources:
 
-PostScript fonts:       URW fonts:            GUST fonts:        Windows fonts:
-======================  ====================  =================  ==================
-Helvetica               Nimbus Sans L         TeX Gyre Heros
-Helvetica Condensed                           TeX Gyre Heros Cn
-Times                   Nimbus Roman No9 L    TeX Gyre Termes
-Courier                 Nimbus Mono L         TeX Gyre Cursor
-ITC Avant Garde Gothic  URW Gothic L          TeX Gyre Adventor
-ITC Bookman             URW Bookman L         TeX Gyre Bonum     Bookman Old Style
-ITC Zapf Chancery       URW Chancery L        TeX Gyre Chorus
-Palatino                URW Palladio L        TeX Gyre Pagella   Palatino Linotype
-New Century Schoolbook  Century Schoolbook L  TeX Gyre Schola    Century Schoolbook
+PostScript fonts:       URW fonts:              GUST fonts:        Windows fonts:
+======================  ======================  =================  ==================
+Helvetica               Nimbus Sans             TeX Gyre Heros
+Helvetica Condensed     Nimbus Sans Narrow      TeX Gyre Heros Cn
+Times                   Nimbus Roman            TeX Gyre Termes
+Courier                 Nimbus Mono             TeX Gyre Cursor
+ITC Avant Garde Gothic  URW Gothic              TeX Gyre Adventor
+ITC Bookman             Bookman URW             TeX Gyre Bonum     Bookman Old Style
+ITC Zapf Chancery       Chancery URW            TeX Gyre Chorus
+Palatino                Palladio URW            TeX Gyre Pagella   Palatino Linotype
+New Century Schoolbook  Century SchoolBook URW  TeX Gyre Schola    Century Schoolbook
 
 Microsoft fonts:  Liberation fonts:       Google CrOS core fonts:  StarOffice fonts:  AMT fonts:
 ================  ======================  =======================  =================  ==============
@@ -57,6 +57,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>Nimbus Sans</family>
+	  <default>
+	  <family>Helvetica</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Heros</family>
 	  <default>
 	  <family>Helvetica</family>
@@ -64,6 +71,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>Nimbus Sans Narrow</family>
+	  <default>
+	  <family>Helvetica Condensed</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Heros Cn</family>
 	  <default>
 	  <family>Helvetica Condensed</family>
@@ -78,6 +92,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>Nimbus Roman</family>
+	  <default>
+	  <family>Times</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Termes</family>
 	  <default>
 	  <family>Times</family>
@@ -92,6 +113,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>Nimbus Mono</family>
+	  <default>
+	  <family>Courier</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Cursor</family>
 	  <default>
 	  <family>Courier</family>
@@ -113,6 +141,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>URW Gothic</family>
+	  <default>
+	  <family>ITC Avant Garde Gothic</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Adventor</family>
 	  <default>
 	  <family>ITC Avant Garde Gothic</family>
@@ -134,6 +169,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>Bookman URW</family>
+	  <default>
+	  <family>ITC Bookman</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Bonum</family>
 	  <default>
 	  <family>ITC Bookman</family>
@@ -162,6 +204,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>Chancery URW</family>
+	  <default>
+	  <family>ITC Zapf Chancery</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Chorus</family>
 	  <default>
 	  <family>ITC Zapf Chancery</family>
@@ -176,6 +225,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>Palladio URW</family>
+	  <default>
+	  <family>Palatino</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Pagella</family>
 	  <default>
 	  <family>Palatino</family>
@@ -197,6 +253,13 @@ but in an order preferring similar designs first.  We do this in three steps:
 	</alias>
 
 	<alias binding="same">
+	  <family>Century SchoolBook URW</family>
+	  <default>
+	  <family>New Century Schoolbook</family>
+	  </default>
+	</alias>
+
+	<alias binding="same">
 	  <family>TeX Gyre Schola</family>
 	  <default>
 	  <family>New Century Schoolbook</family>
@@ -401,6 +464,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <family>Helvetica</family>
 	  <accept>
 	  <family>TeX Gyre Heros</family>
+	  <family>Nimbus Sans</family>
 	  <family>Nimbus Sans L</family>
 	  </accept>
 	</alias>
@@ -409,6 +473,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <family>Helvetica Condensed</family>
 	  <accept>
 	  <family>TeX Gyre Heros Cn</family>
+	  <family>Nimbus Sans Narrow</family>
 	  </accept>
 	</alias>
 
@@ -416,6 +481,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <family>Times</family>
 	  <accept>
 	  <family>TeX Gyre Termes</family>
+	  <family>Nimbus Roman</family>
 	  <family>Nimbus Roman No9 L</family>
 	  </accept>
 	</alias>
@@ -424,6 +490,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <family>Courier</family>
 	  <accept>
 	  <family>TeX Gyre Cursor</family>
+	  <family>Nimbus Mono</family>
 	  <family>Nimbus Mono L</family>
 	  </accept>
 	</alias>
@@ -432,6 +499,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <family>ITC Avant Garde Gothic</family>
 	  <accept>
 	  <family>TeX Gyre Adventor</family>
+	  <family>URW Gothic</family>
 	  <family>URW Gothic L</family>
 	  </accept>
 	</alias>
@@ -441,6 +509,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <accept>
 	  <family>Bookman Old Style</family>
 	  <family>TeX Gyre Bonum</family>
+	  <family>Bookman URW</family>
 	  <family>URW Bookman L</family>
 	  </accept>
 	</alias>
@@ -449,6 +518,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <family>ITC Zapf Chancery</family>
 	  <accept>
 	  <family>TeX Gyre Chorus</family>
+	  <family>Chancery URW</family>
 	  <family>URW Chancery L</family>
 	  </accept>
 	</alias>
@@ -458,6 +528,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <accept>
 	  <family>Palatino Linotype</family>
 	  <family>TeX Gyre Pagella</family>
+	  <family>Palladio URW</family>
 	  <family>URW Palladio L</family>
 	  </accept>
 	</alias>
@@ -467,6 +538,7 @@ but in an order preferring similar designs first.  We do this in three steps:
 	  <accept>
 	  <family>Century Schoolbook</family>
 	  <family>TeX Gyre Schola</family>
+	  <family>Century SchoolBook URW</family>
 	  <family>Century Schoolbook L</family>
 	  </accept>
 	</alias>
diff --git a/conf.d/45-latin.conf b/conf.d/45-latin.conf
index 996fb81..72490f3 100644
--- a/conf.d/45-latin.conf
+++ b/conf.d/45-latin.conf
@@ -34,6 +34,10 @@
 		<default><family>serif</family></default>
 	</alias>
 	<alias>
+		<family>Nimbus Roman</family>
+		<default><family>serif</family></default>
+	</alias>
+	<alias>
 		<family>Luxi Serif</family>
 		<default><family>serif</family></default>
 	</alias>
@@ -97,6 +101,10 @@
 		<default><family>sans-serif</family></default>
 	</alias>
 	<alias>
+		<family>Nimbus Sans</family>
+		<default><family>sans-serif</family></default>
+	</alias>
+	<alias>
 		<family>Luxi Sans</family>
 		<default><family>sans-serif</family></default>
 	</alias>
@@ -151,6 +159,10 @@
 		<family>Nimbus Mono L</family>
 		<default><family>monospace</family></default>
 	</alias>
+	<alias>
+		<family>Nimbus Mono</family>
+		<default><family>monospace</family></default>
+	</alias>
 <!--
   Fantasy faces
  -->
diff --git a/conf.d/60-latin.conf b/conf.d/60-latin.conf
index 2107e31..35600ea 100644
--- a/conf.d/60-latin.conf
+++ b/conf.d/60-latin.conf
@@ -10,6 +10,7 @@
 			<family>Thorndale AMT</family>
 			<family>Luxi Serif</family>
 			<family>Nimbus Roman No9 L</family>
+			<family>Nimbus Roman</family>
 			<family>Times</family>
 		</prefer>
 	</alias>
@@ -23,6 +24,7 @@
 			<family>Albany AMT</family>
 			<family>Luxi Sans</family>
 			<family>Nimbus Sans L</family>
+			<family>Nimbus Sans</family>
 			<family>Helvetica</family>
 			<family>Lucida Sans Unicode</family>
 			<family>BPG Glaho International</family> <!-- lat,cyr,arab,geor -->
@@ -40,6 +42,7 @@
 			<family>Cumberland AMT</family>
 			<family>Luxi Mono</family>
 			<family>Nimbus Mono L</family>
+			<family>Nimbus Mono</family>
 			<family>Courier</family>
 		</prefer>
 	</alias>
-- 
2.3.3

From 32ac7c75e8db0135ef37cf86f92d8b9be000c8bb Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 9 Dec 2014 19:06:46 +0900
Subject: [PATCH] Returns False if no fonts found

https://bugs.freedesktop.org/show_bug.cgi?id=86950
---
 doc/fcconfig.fncs | 10 ++++++----
 src/fccfg.c       | 23 +++++++++++++----------
 2 files changed, 19 insertions(+), 14 deletions(-)

diff --git a/doc/fcconfig.fncs b/doc/fcconfig.fncs
index 10f5afc..af328fc 100644
--- a/doc/fcconfig.fncs
+++ b/doc/fcconfig.fncs
@@ -219,8 +219,9 @@ If <parameter>config</parameter> is NULL, the current configuration is used.
 @PURPOSE@	Add font file to font database
 @DESC@
 Adds an application-specific font to the configuration. Returns FcFalse
-if the fonts cannot be added (due to allocation failure). Otherwise returns FcTrue.
-If <parameter>config</parameter> is NULL, the current configuration is used.
+if the fonts cannot be added (due to allocation failure or no fonts found).
+Otherwise returns FcTrue. If <parameter>config</parameter> is NULL,
+the current configuration is used.
 @@
 
 @RET@           FcBool
@@ -231,8 +232,9 @@ If <parameter>config</parameter> is NULL, the current configuration is used.
 @DESC@
 Scans the specified directory for fonts, adding each one found to the
 application-specific set of fonts. Returns FcFalse
-if the fonts cannot be added (due to allocation failure). Otherwise returns FcTrue.
-If <parameter>config</parameter> is NULL, the current configuration is used.
+if the fonts cannot be added (due to allocation failure or no fonts found).
+Otherwise returns FcTrue. If <parameter>config</parameter> is NULL,
+the current configuration is used.
 @@
 
 @RET@           void
diff --git a/src/fccfg.c b/src/fccfg.c
index 55cb297..b27ab0b 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -367,6 +367,7 @@ FcConfigAddDirList (FcConfig *config, FcSetName set, FcStrSet *dirSet)
     FcStrList	    *dirlist;
     FcChar8	    *dir;
     FcCache	    *cache;
+    FcBool	     ret = FcFalse;
 
     dirlist = FcStrListCreate (dirSet);
     if (!dirlist)
@@ -381,9 +382,10 @@ FcConfigAddDirList (FcConfig *config, FcSetName set, FcStrSet *dirSet)
 	    continue;
 	FcConfigAddCache (config, cache, set, dirSet);
 	FcDirCacheUnload (cache);
+	ret = FcTrue;
     }
     FcStrListDone (dirlist);
-    return FcTrue;
+    return ret;
 }
 
 /*
@@ -2185,6 +2187,7 @@ FcConfigAppFontAddFile (FcConfig    *config,
     FcStrSet	*subdirs;
     FcStrList	*sublist;
     FcChar8	*subdir;
+    FcBool	 ret = FcFalse;
 
     if (!config)
     {
@@ -2218,12 +2221,13 @@ FcConfigAppFontAddFile (FcConfig    *config,
     {
 	while ((subdir = FcStrListNext (sublist)))
 	{
-	    FcConfigAppFontAddDir (config, subdir);
+	    if (FcConfigAppFontAddDir (config, subdir))
+		ret = FcTrue;
 	}
 	FcStrListDone (sublist);
     }
     FcStrSetDestroy (subdirs);
-    return FcTrue;
+    return ret;
 }
 
 FcBool
@@ -2232,6 +2236,7 @@ FcConfigAppFontAddDir (FcConfig	    *config,
 {
     FcFontSet	*set;
     FcStrSet	*dirs;
+    FcBool	 ret = FcTrue;
 
     if (!config)
     {
@@ -2250,8 +2255,8 @@ FcConfigAppFontAddDir (FcConfig	    *config,
 	set = FcFontSetCreate ();
 	if (!set)
 	{
-	    FcStrSetDestroy (dirs);
-	    return FcFalse;
+	    ret = FcFalse;
+	    goto bail;
 	}
 	FcConfigSetFonts (config, set, FcSetApplication);
     }
@@ -2259,12 +2264,10 @@ FcConfigAppFontAddDir (FcConfig	    *config,
     FcStrSetAddFilename (dirs, dir);
 
     if (!FcConfigAddDirList (config, FcSetApplication, dirs))
-    {
-	FcStrSetDestroy (dirs);
-	return FcFalse;
-    }
+	ret = FcFalse;
+bail:
     FcStrSetDestroy (dirs);
-    return FcTrue;
+    return ret;
 }
 
 void
-- 
2.3.3

From fc7e1a9497919c88d790d9395eb01cd7d5121507 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 12 Dec 2014 21:42:35 -0800
Subject: [PATCH] Fix buffer overflow in copying PS name

As reported on the mailing list by Tanel Liiv.  Found using American Fuzzy Lop.
---
 src/fcfreetype.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index aca2f70..da66741 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1556,7 +1556,8 @@ FcFreeTypeQueryFace (const FT_Face  face,
     }
     else
     {
-	strcpy (psname, tmp);
+	strncpy (psname, tmp, 255);
+	psname[255] = 0;
     }
     if (!FcPatternAddString (pat, FC_POSTSCRIPT_NAME, (const FcChar8 *)psname))
 	goto bail1;
-- 
2.3.3

From dbc7c4a2cfe1ba6c537957b3b68b625403ca99fd Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sun, 14 Dec 2014 13:39:41 -0800
Subject: [PATCH] Add FC_COLOR

Only adds "color" to pattern if FreeType version supports color.

Based on patch from Jungshik Shin.
---
 doc/fontconfig-devel.sgml | 1 +
 fontconfig/fontconfig.h   | 1 +
 src/fcfreetype.c          | 6 ++++++
 src/fcmatch.c             | 1 +
 src/fcobjs.h              | 1 +
 5 files changed, 10 insertions(+)

diff --git a/doc/fontconfig-devel.sgml b/doc/fontconfig-devel.sgml
index 2b1122f..9f3613a 100644
--- a/doc/fontconfig-devel.sgml
+++ b/doc/fontconfig-devel.sgml
@@ -176,6 +176,7 @@ convenience for the application's rendering mechanism.
     scalable       FC_SCALABLE            Bool    Whether glyphs can be scaled
     scale          FC_SCALE               Double  Scale factor for point->pixel
                                                   conversions
+    color          FC_COLOR               Bool    Whether any glyphs have color
     dpi            FC_DPI                 Double  Target dots per inch
     rgba           FC_RGBA                Int     unknown, rgb, bgr, vrgb,
                                                   vbgr, none - subpixel geometry
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index afc917c..85cdd6d 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -94,6 +94,7 @@ typedef int		FcBool;
 #define FC_RASTERIZER	    "rasterizer"	/* String (deprecated) */
 #define FC_OUTLINE	    "outline"		/* Bool */
 #define FC_SCALABLE	    "scalable"		/* Bool */
+#define FC_COLOR	    "color"		/* Bool */
 #define FC_SCALE	    "scale"		/* double */
 #define FC_DPI		    "dpi"		/* double */
 #define FC_RGBA		    "rgba"		/* Int */
diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index da66741..2575a72 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1285,6 +1285,12 @@ FcFreeTypeQueryFace (const FT_Face  face,
 			   (face->face_flags & FT_FACE_FLAG_SCALABLE) != 0))
 	goto bail1;
 
+#ifdef FT_FACE_FLAG_COLOR
+    if (!FcPatternAddBool (pat, FC_COLOR,
+			   (face->face_flags & FT_FACE_FLAG_COLOR) != 0))
+	goto bail1;
+#endif
+
 
     /*
      * Get the OS/2 table
diff --git a/src/fcmatch.c b/src/fcmatch.c
index 25081e2..46d08bc 100644
--- a/src/fcmatch.c
+++ b/src/fcmatch.c
@@ -284,6 +284,7 @@ typedef enum _FcMatcherPriority {
     PRI1(FILE),
     PRI1(FONTFORMAT),
     PRI1(SCALABLE),
+    PRI1(COLOR),
     PRI1(FOUNDRY),
     PRI1(CHARSET),
     PRI_FAMILY_STRONG,
diff --git a/src/fcobjs.h b/src/fcobjs.h
index bfdf4b5..573fa61 100644
--- a/src/fcobjs.h
+++ b/src/fcobjs.h
@@ -68,4 +68,5 @@ FC_OBJECT (FONT_FEATURES,	FcTypeString,	NULL)
 FC_OBJECT (PRGNAME,		FcTypeString,	NULL)
 FC_OBJECT (HASH,		FcTypeString,	NULL)	/* deprecated */
 FC_OBJECT (POSTSCRIPT_NAME,	FcTypeString,	FcComparePostScript)
+FC_OBJECT (COLOR,		FcTypeBool,	FcCompareBool)
 /* ^-------------- Add new objects here. */
-- 
2.3.3

From 66db69a6d991945f96feb1da683a2e04ea396842 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Sun, 14 Dec 2014 13:55:53 -0800
Subject: [PATCH] Treat color fonts as scalable

All color fonts are designed to be scaled, even if they only have
bitmap strikes.  Client is responsible to scale the bitmaps.  This
is in constrast to non-color strikes...

Clients can still use FC_OUTLINE to distinguish bitmap vs outline
fonts.  Previously FC_OUTLINE and FC_SCALABLE always had the same
value.  Now FC_SCALABLE is set to (FC_OUTLINE || FC_COLOR).

Fixes:
https://bugs.freedesktop.org/show_bug.cgi?id=87122
---
 src/fcfreetype.c | 27 ++++++++++++++++++---------
 1 file changed, 18 insertions(+), 9 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 2575a72..81ebda7 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1277,20 +1277,29 @@ FcFreeTypeQueryFace (const FT_Face  face,
     if (!pat)
 	goto bail0;
 
-    if (!FcPatternAddBool (pat, FC_OUTLINE,
-			   (face->face_flags & FT_FACE_FLAG_SCALABLE) != 0))
-	goto bail1;
+    {
+	int has_outline = !!(face->face_flags & FT_FACE_FLAG_SCALABLE);
+	int has_color = 0;
 
-    if (!FcPatternAddBool (pat, FC_SCALABLE,
-			   (face->face_flags & FT_FACE_FLAG_SCALABLE) != 0))
-	goto bail1;
+#ifdef FT_FACE_FLAG_COLOR
+	has_color = !!(face->face_flags & FT_FACE_FLAG_COLOR);
+#endif
+
+	if (!FcPatternAddBool (pat, FC_OUTLINE, has_outline))
+	    goto bail1;
 
 #ifdef FT_FACE_FLAG_COLOR
-    if (!FcPatternAddBool (pat, FC_COLOR,
-			   (face->face_flags & FT_FACE_FLAG_COLOR) != 0))
-	goto bail1;
+	if (!FcPatternAddBool (pat, FC_COLOR, has_color))
+	    goto bail1;
 #endif
 
+	/* All color fonts are designed to be scaled, even if they only have
+	 * bitmap strikes.  Client is responsible to scale the bitmaps.  This
+	 * is in constrast to non-color strikes... */
+	if (!FcPatternAddBool (pat, FC_SCALABLE, has_outline || has_color))
+	    goto bail1;
+    }
+
 
     /*
      * Get the OS/2 table
-- 
2.3.3

From af5864419441e12f1951c7cfd0a742b6316934cc Mon Sep 17 00:00:00 2001
From: Nick Alcock <nick.alcock@oracle.com>
Date: Sat, 13 Dec 2014 18:21:16 +0000
Subject: [PATCH] Generate documentation for FcWeight* functions.

The SGML for these functions exists, and they are named as manpages,
but because they are not mentioned in fontconfig-devel.sgml, no
documentation is ever generated, and installation under --enable-docs
fails.

(The documentation I have written in fontconfig-devel.sgml is boilerplate
so I can get the manpages generated. It's probably wrong.)
---
 doc/fontconfig-devel.sgml | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/doc/fontconfig-devel.sgml b/doc/fontconfig-devel.sgml
index 9f3613a..7410ef0 100644
--- a/doc/fontconfig-devel.sgml
+++ b/doc/fontconfig-devel.sgml
@@ -20,6 +20,7 @@
 <!ENTITY fcstring SYSTEM "fcstring.sgml">
 <!ENTITY fcstrset SYSTEM "fcstrset.sgml">
 <!ENTITY fcvalue SYSTEM "fcvalue.sgml">
+<!ENTITY fcweight SYSTEM "fcweight.sgml">
 <!ENTITY version SYSTEM "version.sgml">
 ]>
 <!--
@@ -537,6 +538,12 @@ Provides for application-specified symbolic constants for font names.
     </para>
     &fcconstant;
   </sect2>
+  <sect2><title>FcWeight</title>
+    <para>
+Maps weights to and from OpenType weights.
+    </para>
+  &fcweight;
+  </sect2>
   <sect2><title>FcBlanks</title>
     <para>
 An FcBlanks object holds a list of Unicode chars which are expected to
-- 
2.3.3

From db64c71408636e2d0ac3c39682ac1b6c8f317ac4 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 16 Dec 2014 20:43:02 +0900
Subject: [PATCH] fc-cache: make a fail if no fonts processed on a given path

---
 fc-cache/fc-cache.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/fc-cache/fc-cache.c b/fc-cache/fc-cache.c
index 406ac6a..e85c9fc 100644
--- a/fc-cache/fc-cache.c
+++ b/fc-cache/fc-cache.c
@@ -126,7 +126,7 @@ scanDirs (FcStrList *list, FcConfig *config, FcBool force, FcBool really_force,
     FcStrList	    *sublist;
     FcCache	    *cache;
     struct stat	    statb;
-    FcBool	    was_valid;
+    FcBool	    was_valid, was_processed = FcFalse;
     int		    i;
     const FcChar8   *sysroot = FcConfigGetSysRoot (config);
 
@@ -175,6 +175,7 @@ scanDirs (FcStrList *list, FcConfig *config, FcBool force, FcBool really_force,
 	    fprintf (stderr, "\"%s\": not a directory, skipping\n", dir);
 	    continue;
 	}
+	was_processed = FcTrue;
 
 	if (really_force)
 	    FcDirCacheUnlink (dir, config);
@@ -256,6 +257,8 @@ scanDirs (FcStrList *list, FcConfig *config, FcBool force, FcBool really_force,
 	else
 	    FcDirCacheUnload (cache);
     }
+    if (!was_processed)
+	ret++;
     return ret;
 }
 
-- 
2.3.3

From 456937cd15568c7f1a633445dee44ae8e2ed395f Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 24 Dec 2014 18:53:41 +0900
Subject: [PATCH] fc-cache: Add an option to raise an error if no fonts found

and get back the behavior.
---
 fc-cache/fc-cache.c    | 26 +++++++++++++++++---------
 fc-cache/fc-cache.sgml | 31 ++++++++++++++++++++++++++++++-
 2 files changed, 47 insertions(+), 10 deletions(-)

diff --git a/fc-cache/fc-cache.c b/fc-cache/fc-cache.c
index e85c9fc..18cd6c5 100644
--- a/fc-cache/fc-cache.c
+++ b/fc-cache/fc-cache.c
@@ -65,6 +65,7 @@
 #define _GNU_SOURCE
 #include <getopt.h>
 const struct option longopts[] = {
+    {"error-on-no-fonts", 0, 0, 'E'},
     {"force", 0, 0, 'f'},
     {"really-force", 0, 0, 'r'},
     {"sysroot", required_argument, 0, 'y'},
@@ -86,16 +87,17 @@ usage (char *program, int error)
 {
     FILE *file = error ? stderr : stdout;
 #if HAVE_GETOPT_LONG
-    fprintf (file, "usage: %s [-frsvVh] [-y SYSROOT] [--force|--really-force] [--sysroot=SYSROOT] [--system-only] [--verbose] [--version] [--help] [dirs]\n",
+    fprintf (file, "usage: %s [-EfrsvVh] [-y SYSROOT] [--error-on-no-fonts] [--force|--really-force] [--sysroot=SYSROOT] [--system-only] [--verbose] [--version] [--help] [dirs]\n",
 	     program);
 #else
-    fprintf (file, "usage: %s [-frsvVh] [-y SYSROOT] [dirs]\n",
+    fprintf (file, "usage: %s [-EfrsvVh] [-y SYSROOT] [dirs]\n",
 	     program);
 #endif
     fprintf (file, "Build font information caches in [dirs]\n"
 	     "(all directories in font configuration by default).\n");
     fprintf (file, "\n");
 #if HAVE_GETOPT_LONG
+    fprintf (file, "  -E, --error-on-no-fonts  raise an error if no fonts in a directory\n");
     fprintf (file, "  -f, --force              scan directories with apparently valid caches\n");
     fprintf (file, "  -r, --really-force       erase all existing caches, then rescan\n");
     fprintf (file, "  -s, --system-only        scan system-wide directories only\n");
@@ -104,6 +106,8 @@ usage (char *program, int error)
     fprintf (file, "  -V, --version            display font config version and exit\n");
     fprintf (file, "  -h, --help               display this help and exit\n");
 #else
+    fprintf (file, "  -E         (error-on-no-fonts)\n");
+    fprintf (file, "                       raise an error if no fonts in a directory\n");
     fprintf (file, "  -f         (force)   scan directories with apparently valid caches\n");
     fprintf (file, "  -r,   (really force) erase all existing caches, then rescan\n");
     fprintf (file, "  -s         (system)  scan system-wide directories only\n");
@@ -118,7 +122,7 @@ usage (char *program, int error)
 static FcStrSet *processed_dirs;
 
 static int
-scanDirs (FcStrList *list, FcConfig *config, FcBool force, FcBool really_force, FcBool verbose, FcBool recursive, int *changed, FcStrSet *updateDirs)
+scanDirs (FcStrList *list, FcConfig *config, FcBool force, FcBool really_force, FcBool verbose, FcBool recursive, FcBool error_on_no_fonts, int *changed, FcStrSet *updateDirs)
 {
     int		    ret = 0;
     const FcChar8   *dir;
@@ -251,13 +255,13 @@ scanDirs (FcStrList *list, FcConfig *config, FcBool force, FcBool really_force,
 		continue;
 	    }
 	    FcStrSetAdd (processed_dirs, dir);
-	    ret += scanDirs (sublist, config, force, really_force, verbose, recursive, changed, updateDirs);
+	    ret += scanDirs (sublist, config, force, really_force, verbose, recursive, error_on_no_fonts, changed, updateDirs);
 	    FcStrListDone (sublist);
 	}
 	else
 	    FcDirCacheUnload (cache);
     }
-    if (!was_processed)
+    if (error_on_no_fonts && !was_processed)
 	ret++;
     return ret;
 }
@@ -292,6 +296,7 @@ main (int argc, char **argv)
     FcBool	force = FcFalse;
     FcBool	really_force = FcFalse;
     FcBool	systemOnly = FcFalse;
+    FcBool	error_on_no_fonts = FcFalse;
     FcConfig	*config;
     FcChar8     *sysroot = NULL;
     int		i;
@@ -301,12 +306,15 @@ main (int argc, char **argv)
     int		c;
 
 #if HAVE_GETOPT_LONG
-    while ((c = getopt_long (argc, argv, "frsy:Vvh", longopts, NULL)) != -1)
+    while ((c = getopt_long (argc, argv, "Efrsy:Vvh", longopts, NULL)) != -1)
 #else
-    while ((c = getopt (argc, argv, "frsy:Vvh")) != -1)
+    while ((c = getopt (argc, argv, "Efrsy:Vvh")) != -1)
 #endif
     {
 	switch (c) {
+	case 'E':
+	    error_on_no_fonts = FcTrue;
+	    break;
 	case 'r':
 	    really_force = FcTrue;
 	    /* fall through */
@@ -387,13 +395,13 @@ main (int argc, char **argv)
 
     updateDirs = FcStrSetCreate ();
     changed = 0;
-    ret = scanDirs (list, config, force, really_force, verbose, FcTrue, &changed, updateDirs);
+    ret = scanDirs (list, config, force, really_force, verbose, FcTrue, error_on_no_fonts, &changed, updateDirs);
     /* Update the directory cache again to avoid the race condition as much as possible */
     FcStrListDone (list);
     list = FcStrListCreate (updateDirs);
     if (list)
     {
-	ret += scanDirs (list, config, FcTrue, FcFalse, verbose, FcFalse, &changed, NULL);
+	ret += scanDirs (list, config, FcTrue, FcFalse, verbose, FcFalse, error_on_no_fonts, &changed, NULL);
 	FcStrListDone (list);
     }
     FcStrSetDestroy (updateDirs);
diff --git a/fc-cache/fc-cache.sgml b/fc-cache/fc-cache.sgml
index 3740be7..7e5159b 100644
--- a/fc-cache/fc-cache.sgml
+++ b/fc-cache/fc-cache.sgml
@@ -63,9 +63,14 @@ manpage.1: manpage.sgml
     <cmdsynopsis>
       <command>&dhpackage;</command>
 
-      <arg><option>-frsvVh</option></arg>
+      <arg><option>-EfrsvVh</option></arg>
+      <arg><option>--error-on-no-fonts</option></arg>
       <arg><option>--force</option></arg>
       <arg><option>--really-force</option></arg>
+      <group>
+	<arg><option>-y</option> <option><replaceable>dir</replaceable></option></arg>
+	<arg><option>--sysroot</option> <option><replaceable>dir</replaceable></option></arg>
+      </group>
       <arg><option>--system-only</option></arg>
       <arg><option>--verbose</option></arg>
       <arg><option>--version</option></arg>
@@ -103,6 +108,16 @@ manpage.1: manpage.sgml
 
     <variablelist>
       <varlistentry>
+	<term><option>-E</option>
+	  <option>--error-on-no-fonts</option>
+	</term>
+	<listitem>
+	  <para>Raise an error if there are no fonts in
+	    <option><replaceable>dir</replaceable></option> or directories
+	    in the configuration if not given.</para>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
         <term><option>-f</option>
           <option>--force</option>
         </term>
@@ -137,6 +152,15 @@ manpage.1: manpage.sgml
         </listitem>
       </varlistentry>
       <varlistentry>
+	<term><option>-y</option>
+	  <option>-sysroot</option>
+	  <option><replaceable>dir</replaceable></option>
+	</term>
+	<listitem>
+	  <para>Prepend <option><replaceable>dir</replaceable></option> to all paths for scanning.</para>
+	</listitem>
+      </varlistentry>
+      <varlistentry>
         <term><option>-h</option>
           <option>--help</option>
         </term>
@@ -163,6 +187,11 @@ manpage.1: manpage.sgml
   </refsect1>
 
   <refsect1>
+    <title>RETURN CODES</title>
+    <para><command>fc-cache</command> returns zero if the caches successfully generated. otherwise non-zero.</para>
+  </refsect1>
+  
+  <refsect1>
     <title>FILES</title>
     <variablelist>
       <varlistentry>
-- 
2.3.3

From 365809938e901e603d2fe93363545e1c1afc1816 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 25 Dec 2014 13:11:21 +0900
Subject: [PATCH] Bump the cache version to 5

FcPattern isn't compatible to the older.
---
 fontconfig/fontconfig.h | 2 +-
 src/fcint.h             | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index 85cdd6d..c571e28 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -66,7 +66,7 @@ typedef int		FcBool;
  * it means multiple copies of the font information.
  */
 
-#define FC_CACHE_VERSION    "4"
+#define FC_CACHE_VERSION    "5"
 
 #define FcTrue		1
 #define FcFalse		0
diff --git a/src/fcint.h b/src/fcint.h
index 45dfc6e..80205c9 100644
--- a/src/fcint.h
+++ b/src/fcint.h
@@ -470,7 +470,7 @@ typedef struct _FcCaseFold {
 
 #define FC_CACHE_MAGIC_MMAP	    0xFC02FC04
 #define FC_CACHE_MAGIC_ALLOC	    0xFC02FC05
-#define FC_CACHE_CONTENT_VERSION    4
+#define FC_CACHE_CONTENT_VERSION    5
 
 struct _FcAtomic {
     FcChar8	*file;		/* original file name */
-- 
2.3.3

From 4420b27c074821a1d1f9d6ebe822a610176a417d Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 25 Dec 2014 13:48:57 +0900
Subject: [PATCH] Fix a typo

missing a terminator caused a document generation fail.
---
 doc/fcrange.fncs | 1 +
 1 file changed, 1 insertion(+)

diff --git a/doc/fcrange.fncs b/doc/fcrange.fncs
index 4181b80..ba76f65 100644
--- a/doc/fcrange.fncs
+++ b/doc/fcrange.fncs
@@ -72,3 +72,4 @@ all memory associated with it.
 @DESC@
 Returns in <parameter>begin</parameter> and <parameter>end</parameter> as the range.
 @SINCE@		2.11.91
+@@
-- 
2.3.3

From fff4086e1587f94c267055ff5c3b48df1f1055f7 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 25 Dec 2014 13:49:25 +0900
Subject: [PATCH] Bump version to 2.11.91

---
 README                  | 80 +++++++++++++++++++++++++++++++++++++++++++++++--
 configure.ac            |  2 +-
 fontconfig/fontconfig.h |  2 +-
 3 files changed, 80 insertions(+), 4 deletions(-)

diff --git a/README b/README
index 8b34edc..73a5f50 100644
--- a/README
+++ b/README
@@ -1,12 +1,88 @@
                               Fontconfig
              Font configuration and customization library
-                            Version 2.11.1
-                              2014-03-24
+                      Version 2.11.91 (2.12 RC1)
+                              2014-12-25
 
 
 Check INSTALL for compilation and installation instructions.
 Report bugs to https://bugs.freedesktop.org in the fontconfig module.
 
+2.11.91 (2.12 RC1)
+
+Akira TAGOH (28):
+      Bug 71287 - size specific design selection support in OS/2 table version 5
+      Fix a build issue with freetype <2.5.1
+      Fix missing docs
+      Fix a typo
+      Fix fc-cache fail with -r
+      Rebase ja.orth against Joyo kanji characters
+      Allow the modification on FcTypeVoid with FcTypeLangSet and FcTypeCharSet
+      Workaround another race condition issue
+      Read the config files and fonts on the sysroot when --sysroot is given to fc-cache
+      Fix a segfault
+      Update CaseFolding.txt to Unicode 7.0
+      Don't read/write from/to the XDG dirs if the home directory is disabled
+      Rework for 5004e8e01f5de30ad01904e57ea0eda006ab3a0c
+      Fix a crash when no sysroot is given and failed to load the default fonts.conf
+      Fix a gcc warning
+      Don't add duplicate lang
+      fallback to the another method to lock when link() failed
+      Increase the refcount in FcConfigSetCurrent()
+      Fix the memory leak in fc-cat
+      Note FcConfigSetCurrent() increases the refcount in document
+      Add FcRangeGetDouble()
+      Revert "Bug 73291 - poppler does not show fl ligature"
+      Update aliases for new URW fonts
+      Returns False if no fonts found
+      fc-cache: make a fail if no fonts processed on a given path
+      fc-cache: Add an option to raise an error if no fonts found
+      Bump the cache version to 5
+      Fix a typo
+
+Behdad Esfahbod (39):
+      Remove unused code
+      Simplify hash code
+      Further simplify hash code
+      Rewrite hashing to use FT_Stream directly
+      Allow passing NULL for file to FcFreeTypeQueryFace()
+      [ko.orth] Remove U+3164 HANGUL FILLER
+      Deprecate FC_HASH and don't compute it
+      Remove unused FcHash code now that FC_HASH is deprecated
+      Update list of blanks to Unicode 6.3.0
+      Update blanks to Unicode 7.0
+      Change charset parse/unparse format to be human readable
+      Minor
+      Fix charset unparse after recent changes
+      Comments
+      Remove HASH from matching priorities
+      Fixup previous commit
+      Update mingw32 MemoryBarrier from HarfBuzz
+      More mingw32 MemoryBarrier() fixup
+      Symlinks fix for DESTDIR
+      Revert "Symlinks fix for DESTDIR"
+      Call FcInitDebug from FcFreeTypeQueryFace
+      Decode MacRoman encoding in name table without iconv
+      Ouch, fix buffer
+      Use lang=und instead of lang=xx for "undetermined"
+      Remove unused regex code
+      Improve / cleanup namelang matching
+      Add FC_WEIGHT_DEMILIGHT
+      Change DemiLight from 65 to 55
+      Linearly interpolate weight values
+      Export recently added API
+      Remove unneeded FcPublic
+      Fix assertion failure
+      If OS/2 table says weight is 1 to 9, multiply by 100
+      Trebuchet MS is a sans-serif font, not serif
+      Fix previous commit
+      Revert "[fcmatch] When matching, reserve score 0 for when elements don't exist"
+      Fix buffer overflow in copying PS name
+      Add FC_COLOR
+      Treat color fonts as scalable
+
+Nick Alcock (1):
+      Generate documentation for FcWeight* functions.
+
 2.11.1
 
 Akira TAGOH (31):
diff --git a/configure.ac b/configure.ac
index a366853..4c6d848 100644
--- a/configure.ac
+++ b/configure.ac
@@ -33,7 +33,7 @@ dnl This is the package version number, not the shared library
 dnl version.  This same version number must appear in fontconfig/fontconfig.h
 dnl Yes, it is a pain to synchronize version numbers.  Unfortunately, it's
 dnl not possible to extract the version number here from fontconfig.h
-AC_INIT([fontconfig], [2.11.1], [https://bugs.freedesktop.org/enter_bug.cgi?product=fontconfig])
+AC_INIT([fontconfig], [2.11.91], [https://bugs.freedesktop.org/enter_bug.cgi?product=fontconfig])
 AM_INIT_AUTOMAKE([1.11 parallel-tests dist-bzip2])
 m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])
 
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index c571e28..2908598 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -52,7 +52,7 @@ typedef int		FcBool;
 
 #define FC_MAJOR	2
 #define FC_MINOR	11
-#define FC_REVISION	1
+#define FC_REVISION	91
 
 #define FC_VERSION	((FC_MAJOR * 10000) + (FC_MINOR * 100) + (FC_REVISION))
 
-- 
2.3.3

From 4c60fabf6617a8954e46bdaeccc95667375fa159 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 6 Jan 2015 16:37:18 +0900
Subject: [PATCH] Add missing docs

---
 doc/fontconfig-devel.sgml | 5 +++++
 doc/fontconfig-user.sgml  | 7 +++++++
 2 files changed, 12 insertions(+)

diff --git a/doc/fontconfig-devel.sgml b/doc/fontconfig-devel.sgml
index 7410ef0..0fa4605 100644
--- a/doc/fontconfig-devel.sgml
+++ b/doc/fontconfig-devel.sgml
@@ -191,8 +191,13 @@ convenience for the application's rendering mechanism.
     fontversion    FC_FONTVERSION         Int     Version number of the font
     capability     FC_CAPABILITY          String  List of layout capabilities in
                                                   the font
+    fontformat     FC_FONTFORMAT          String  String name of the font format
     embolden       FC_EMBOLDEN            Bool    Rasterizer should
                                                   synthetically embolden the font
+    embeddedbitmap FC_EMBEDDED_BITMAP     Bool    Use the embedded bitmap instead
+                                                  of the outline
+    decorative     FC_DECORATIVE          Bool    Whether the style is a decorative
+                                                  variant
     fontfeatures   FC_FONT_FEATURES       String  List of extra feature tags in
                                                   OpenType to be enabled
     namelang       FC_NAMELANG            String  Language name to be used for the
diff --git a/doc/fontconfig-user.sgml b/doc/fontconfig-user.sgml
index 482b453..decd620 100644
--- a/doc/fontconfig-user.sgml
+++ b/doc/fontconfig-user.sgml
@@ -119,6 +119,7 @@ convenience for the applications' rendering mechanism.
   rasterizer      String  Which rasterizer is in use (deprecated)
   outline         Bool    Whether the glyphs are outlines
   scalable        Bool    Whether glyphs can be scaled
+  color           Bool    Whether any glyphs have color
   scale           Double  Scale factor for point->pixel conversions
   dpi             Double  Target dots per inch
   rgba            Int     unknown, rgb, bgr, vrgb, vbgr,
@@ -130,9 +131,15 @@ convenience for the applications' rendering mechanism.
                           font supports
   fontversion     Int     Version number of the font
   capability      String  List of layout capabilities in the font
+  fontformat      String  String name of the font format
   embolden        Bool    Rasterizer should synthetically embolden the font
+  embeddedbitmap  Bool    Use the embedded bitmap instead of the outline
+  decorative      Bool    Whether the style is a decorative variant
   fontfeatures    String  List of the feature tags in OpenType to be enabled
+  namelang        String  Language name to be used for the default value of
+                          familylang, stylelang, and fullnamelang
   prgname         String  String  Name of the running program
+  postscriptname  String  Font family name in PostScript
     </programlisting>
   </refsect2>
   <refsect2>
-- 
2.3.3

From 4d739d13f4f58e11c62006e4f70776a945094ea4 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 13 Jan 2015 12:40:40 +0900
Subject: [PATCH] Bump version to 2.11.92

---
 README                  | 9 +++++++--
 configure.ac            | 2 +-
 fontconfig/fontconfig.h | 2 +-
 3 files changed, 9 insertions(+), 4 deletions(-)

diff --git a/README b/README
index 73a5f50..6ac1644 100644
--- a/README
+++ b/README
@@ -1,12 +1,17 @@
                               Fontconfig
              Font configuration and customization library
-                      Version 2.11.91 (2.12 RC1)
-                              2014-12-25
+                      Version 2.11.92 (2.12 RC2)
+                              2015-01-13
 
 
 Check INSTALL for compilation and installation instructions.
 Report bugs to https://bugs.freedesktop.org in the fontconfig module.
 
+2.11.92 (2.12 RC2)
+
+Akira TAGOH (1):
+      Add missing docs
+
 2.11.91 (2.12 RC1)
 
 Akira TAGOH (28):
diff --git a/configure.ac b/configure.ac
index 4c6d848..457dc2c 100644
--- a/configure.ac
+++ b/configure.ac
@@ -33,7 +33,7 @@ dnl This is the package version number, not the shared library
 dnl version.  This same version number must appear in fontconfig/fontconfig.h
 dnl Yes, it is a pain to synchronize version numbers.  Unfortunately, it's
 dnl not possible to extract the version number here from fontconfig.h
-AC_INIT([fontconfig], [2.11.91], [https://bugs.freedesktop.org/enter_bug.cgi?product=fontconfig])
+AC_INIT([fontconfig], [2.11.92], [https://bugs.freedesktop.org/enter_bug.cgi?product=fontconfig])
 AM_INIT_AUTOMAKE([1.11 parallel-tests dist-bzip2])
 m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])
 
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index 2908598..600ed68 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -52,7 +52,7 @@ typedef int		FcBool;
 
 #define FC_MAJOR	2
 #define FC_MINOR	11
-#define FC_REVISION	91
+#define FC_REVISION	92
 
 #define FC_VERSION	((FC_MAJOR * 10000) + (FC_MINOR * 100) + (FC_REVISION))
 
-- 
2.3.3

From 694368667a15341ea30b37a36e9540e6b1492680 Mon Sep 17 00:00:00 2001
From: Alan Coopersmith <alan.coopersmith@oracle.com>
Date: Fri, 16 Jan 2015 09:35:22 -0800
Subject: [PATCH] Fix configure to work with Solaris Studio compilers

Passing -Werror in the scandir() checks caused Studio cc to report
"Unrecognized option errors", confusing configure into thinking that
scandir() was not available.   Use Studio equivalent flags instead.

Leaves -Werror as the default for all other compilers, including
unknown ones, to flag to them that they need to update their flags
as well if -Werror is not correct for them.

Signed-off-by: Alan Coopersmith <alan.coopersmith@oracle.com>
---
 configure.ac | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/configure.ac b/configure.ac
index 457dc2c..9011f37 100644
--- a/configure.ac
+++ b/configure.ac
@@ -103,11 +103,22 @@ if test "$os_win32" = "yes"; then
 fi
 AM_CONDITIONAL(MS_LIB_AVAILABLE, test x$ms_librarian = xyes)
 
+AC_CHECK_DECL([__SUNPRO_C], [SUNCC="yes"], [SUNCC="no"])
 WARN_CFLAGS=""
+WERROR_CFLAGS="-Werror"
+WARNING_CPP_DIRECTIVE="no"
 if test "x$GCC" = "xyes"; then
 	WARN_CFLAGS="-Wall -Wpointer-arith -Wstrict-prototypes \
 	-Wmissing-prototypes -Wmissing-declarations \
 	-Wnested-externs -fno-strict-aliasing"
+	WARNING_CPP_DIRECTIVE="yes"
+elif test "x$SUNCC" = "xyes"; then
+	WARN_CFLAGS="-v -fd"
+	WERROR_CFLAGS="-errtags \
+	-errwarn=%all,no%E_OLD_STYLE_FUNC_DEF,no%E_STATEMENT_NOT_REACHED"
+	WARNING_CPP_DIRECTIVE="yes"
+fi
+if test "x$WARNING_CPP_DIRECTIVE" = "xyes"; then
 	AC_DEFINE_UNQUOTED(HAVE_WARNING_CPP_DIRECTIVE,1,
 	[Can use #warning in C files])
 fi
@@ -159,7 +170,7 @@ AC_DEFINE_UNQUOTED([HAVE_POSIX_FADVISE], [$fc_func_posix_fadvise], [Define to 1
 if test "$os_win32" = "no"; then
 	AC_MSG_CHECKING([for scandir])
 	fc_saved_CFLAGS="$CFLAGS"
-	CFLAGS="$CFLAGS $WARN_CFLAGS -Werror"
+	CFLAGS="$CFLAGS $WARN_CFLAGS $WERROR_CFLAGS"
 	AC_TRY_COMPILE([
 		#include <dirent.h>
 		int main(void);
-- 
2.3.3

From 78ed920e2be4dca04ff64ba98cf6935fc40cc758 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 19 Jan 2015 19:48:50 +0900
Subject: [PATCH] Fix a typo in docs

---
 doc/fontconfig-user.sgml | 2 +-
 fc-cache/fc-cache.sgml   | 2 +-
 fc-cat/fc-cat.sgml       | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/doc/fontconfig-user.sgml b/doc/fontconfig-user.sgml
index decd620..ac9d807 100644
--- a/doc/fontconfig-user.sgml
+++ b/doc/fontconfig-user.sgml
@@ -321,7 +321,7 @@ the configuration file, the directory that can be accessed first in the list
 will be used to store the cache files.  If it starts with '~', it refers to
 a directory in the users home directory.  If 'prefix' is set to "xdg", the value in the XDG_CACHE_HOME environment variable will be added as the path prefix. please see XDG Base Directory Specification for more details.
 The default directory is ``$XDG_CACHE_HOME/fontconfig'' and it contains the cache files
-named ``<literal>&lt;hash value&gt;</literal>-<literal>&lt;architecture&gt;</literal>.cache-<literal>&lt;version</literal>'',
+named ``<literal>&lt;hash value&gt;</literal>-<literal>&lt;architecture&gt;</literal>.cache-<literal>&lt;version&gt;</literal>'',
 where <literal>&lt;version&gt;</literal> is the font configureation file
 version number (currently 3).
   </para></refsect2>
diff --git a/fc-cache/fc-cache.sgml b/fc-cache/fc-cache.sgml
index 7e5159b..5ae0107 100644
--- a/fc-cache/fc-cache.sgml
+++ b/fc-cache/fc-cache.sgml
@@ -195,7 +195,7 @@ manpage.1: manpage.sgml
     <title>FILES</title>
     <variablelist>
       <varlistentry>
-        <term><filename><replaceable>%cachdir%</replaceable>/*-<replaceable>%arch%</replaceable>.cache-2</filename></term>
+        <term><filename><replaceable>%cachedir%</replaceable>/*-<replaceable>%arch%</replaceable>.cache-%version%</filename></term>
 	<listitem>
 	  <para>These files are generated by <command>&dhpackage;</command>
             and contain maps from file names to font properties. They are
diff --git a/fc-cat/fc-cat.sgml b/fc-cat/fc-cat.sgml
index ce4736d..a513254 100644
--- a/fc-cat/fc-cat.sgml
+++ b/fc-cat/fc-cat.sgml
@@ -70,7 +70,7 @@ manpage.1: manpage.sgml
       <arg><option>--help</option></arg>
       <sbr>
       <group rep="repeat">
-          <arg><option><replaceable>fonts-cache-2-files</replaceable></option></arg>
+          <arg><option><replaceable>fonts-cache-%version%-files</replaceable></option></arg>
           <arg><option><replaceable>dirs</replaceable></option></arg>
       </group>
       
-- 
2.3.3

From eb5e89f817a78e8f6fbb0d8a1b48c510f1b898b1 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 20 Jan 2015 20:34:47 +0900
Subject: [PATCH] Add pkg.m4 to git

---
 m4/pkg.m4 | 214 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 214 insertions(+)
 create mode 100644 m4/pkg.m4

diff --git a/m4/pkg.m4 b/m4/pkg.m4
new file mode 100644
index 0000000..c5b26b5
--- /dev/null
+++ b/m4/pkg.m4
@@ -0,0 +1,214 @@
+# pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-
+# serial 1 (pkg-config-0.24)
+# 
+# Copyright © 2004 Scott James Remnant <scott@netsplit.com>.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# PKG_PROG_PKG_CONFIG([MIN-VERSION])
+# ----------------------------------
+AC_DEFUN([PKG_PROG_PKG_CONFIG],
+[m4_pattern_forbid([^_?PKG_[A-Z_]+$])
+m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
+m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
+AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
+AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
+AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])
+
+if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
+	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
+fi
+if test -n "$PKG_CONFIG"; then
+	_pkg_min_version=m4_default([$1], [0.9.0])
+	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
+	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
+		AC_MSG_RESULT([yes])
+	else
+		AC_MSG_RESULT([no])
+		PKG_CONFIG=""
+	fi
+fi[]dnl
+])# PKG_PROG_PKG_CONFIG
+
+# PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+#
+# Check to see whether a particular set of modules exists.  Similar
+# to PKG_CHECK_MODULES(), but does not set variables or print errors.
+#
+# Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+# only at the first occurence in configure.ac, so if the first place
+# it's called might be skipped (such as if it is within an "if", you
+# have to call PKG_CHECK_EXISTS manually
+# --------------------------------------------------------------
+AC_DEFUN([PKG_CHECK_EXISTS],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+if test -n "$PKG_CONFIG" && \
+    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
+  m4_default([$2], [:])
+m4_ifvaln([$3], [else
+  $3])dnl
+fi])
+
+# _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])
+# ---------------------------------------------
+m4_define([_PKG_CONFIG],
+[if test -n "$$1"; then
+    pkg_cv_[]$1="$$1"
+ elif test -n "$PKG_CONFIG"; then
+    PKG_CHECK_EXISTS([$3],
+                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 "$3" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes ],
+		     [pkg_failed=yes])
+ else
+    pkg_failed=untried
+fi[]dnl
+])# _PKG_CONFIG
+
+# _PKG_SHORT_ERRORS_SUPPORTED
+# -----------------------------
+AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi[]dnl
+])# _PKG_SHORT_ERRORS_SUPPORTED
+
+
+# PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
+# [ACTION-IF-NOT-FOUND])
+#
+#
+# Note that if there is a possibility the first call to
+# PKG_CHECK_MODULES might not happen, you should be sure to include an
+# explicit call to PKG_PROG_PKG_CONFIG in your configure.ac
+#
+#
+# --------------------------------------------------------------
+AC_DEFUN([PKG_CHECK_MODULES],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
+AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl
+
+pkg_failed=no
+AC_MSG_CHECKING([for $1])
+
+_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
+_PKG_CONFIG([$1][_LIBS], [libs], [$2])
+
+m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
+and $1[]_LIBS to avoid the need to call pkg-config.
+See the pkg-config man page for more details.])
+
+if test $pkg_failed = yes; then
+   	AC_MSG_RESULT([no])
+        _PKG_SHORT_ERRORS_SUPPORTED
+        if test $_pkg_short_errors_supported = yes; then
+	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
+        else 
+	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD
+
+	m4_default([$4], [AC_MSG_ERROR(
+[Package requirements ($2) were not met:
+
+$$1_PKG_ERRORS
+
+Consider adjusting the PKG_CONFIG_PATH environment variable if you
+installed software in a non-standard prefix.
+
+_PKG_TEXT])[]dnl
+        ])
+elif test $pkg_failed = untried; then
+     	AC_MSG_RESULT([no])
+	m4_default([$4], [AC_MSG_FAILURE(
+[The pkg-config script could not be found or is too old.  Make sure it
+is in your PATH or set the PKG_CONFIG environment variable to the full
+path to pkg-config.
+
+_PKG_TEXT
+
+To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
+        ])
+else
+	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
+	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
+        AC_MSG_RESULT([yes])
+	$3
+fi[]dnl
+])# PKG_CHECK_MODULES
+
+
+# PKG_INSTALLDIR(DIRECTORY)
+# -------------------------
+# Substitutes the variable pkgconfigdir as the location where a module
+# should install pkg-config .pc files. By default the directory is
+# $libdir/pkgconfig, but the default can be changed by passing
+# DIRECTORY. The user can override through the --with-pkgconfigdir
+# parameter.
+AC_DEFUN([PKG_INSTALLDIR],
+[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
+m4_pushdef([pkg_description],
+    [pkg-config installation directory @<:@]pkg_default[@:>@])
+AC_ARG_WITH([pkgconfigdir],
+    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
+    [with_pkgconfigdir=]pkg_default)
+AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
+m4_popdef([pkg_default])
+m4_popdef([pkg_description])
+]) dnl PKG_INSTALLDIR
+
+
+# PKG_NOARCH_INSTALLDIR(DIRECTORY)
+# -------------------------
+# Substitutes the variable noarch_pkgconfigdir as the location where a
+# module should install arch-independent pkg-config .pc files. By
+# default the directory is $datadir/pkgconfig, but the default can be
+# changed by passing DIRECTORY. The user can override through the
+# --with-noarch-pkgconfigdir parameter.
+AC_DEFUN([PKG_NOARCH_INSTALLDIR],
+[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
+m4_pushdef([pkg_description],
+    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
+AC_ARG_WITH([noarch-pkgconfigdir],
+    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
+    [with_noarch_pkgconfigdir=]pkg_default)
+AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
+m4_popdef([pkg_default])
+m4_popdef([pkg_description])
+]) dnl PKG_NOARCH_INSTALLDIR
+
+
+# PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,
+# [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+# -------------------------------------------
+# Retrieves the value of the pkg-config variable for the given module.
+AC_DEFUN([PKG_CHECK_VAR],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl
+
+_PKG_CONFIG([$1], [variable="][$3]["], [$2])
+AS_VAR_COPY([$1], [pkg_cv_][$1])
+
+AS_VAR_IF([$1], [""], [$5], [$4])dnl
+])# PKG_CHECK_VAR
-- 
2.3.3

From d6d5adeb7940c0d0beb86489c2a1c2ce59e5c044 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 21 Jan 2015 14:13:36 -0800
Subject: [PATCH] Fix symbol cmap handling

A while back we removed Apple Roman encoding support.  This broke
symbol fonts (Wingdings, etc) because those fonts come with two
cmaps:

  1) platform=1,encoding=0, aka Apple Roman, which maps identity,
  2) platform=3,encoding=0, aka MS Symbol font

Now, the reason the Apple Roman removal "broke" these fonts is
obvious, and for the better: these fonts were mapping ASCII and
other Latin chars to symbols.

The reason the fonts didn't work anymore, however, is that we were
mishandling the MS symbol-font cmaps.  In their modern incarnation
they are like regular non-symbol-font cmap that map PUA codepoints
to symbols.  We want to expose those as such.  Hence, this change
just removes the special-handling for that.

Now, the reason this confusion happened, if I was to guess, is either
that FreeType docs are wrong saying that FT_ENCODING_MS_SYMBOL is
the "Microsoft Symbol encoding, used to encode mathematical symbols":

  http://www.kostis.net/charsets/symbol.htm

or maybe it started that way, but turned into also mapping MS symbol-
font cmaps, which is a completely different thing.  At any rate, I
don't know if there are any fonts that use this thing these days, but
the code here didn't seem to produce charset for any font.  By now I'm
convinced that this change is the Right Thing to do.  The MS Symbol
thing was called AdobeSymbol in our code by the way.

This fixes the much-reported bug that windings, etc are not usable
with recent fontconfig:
https://bugs.freedesktop.org/show_bug.cgi?id=58641

Now I see PUA mappings reported for Wingdings.

This also fixes:
Bug 48947 - Drop the non-Unicode cmap support gradually
https://bugs.freedesktop.org/show_bug.cgi?id=48947
since the AdobeSymbol was the last non-Unicode cmap we were
trying to parse (very incorrectly).

Lots of code around this change can be simplified.  I'll push those
out (including removing the table itself) in subsequent changes.
---
 src/fcfreetype.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index 81ebda7..f42004b 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -2206,7 +2206,7 @@ static const FcCharMap AdobeSymbol = {
 
 static const FcFontDecode fcFontDecoders[] = {
     { ft_encoding_unicode,	0,		(1 << 21) - 1 },
-    { ft_encoding_symbol,	&AdobeSymbol,	(1 << 16) - 1 },
+    { ft_encoding_symbol,	0,		(1 << 16) - 1 },
 };
 
 #define NUM_DECODE  (int) (sizeof (fcFontDecoders) / sizeof (fcFontDecoders[0]))
-- 
2.3.3

From ed0d705e2221adbfb21de357c1a82b7a2a5c3641 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 10 Feb 2015 19:32:13 +0900
Subject: [PATCH] Fix a build fail on some non-POSIX platforms

Use own scandir function. according to this change,
we don't need -Werror things in configure anymore.
---
 configure.ac | 35 --------------------------
 src/fcstat.c | 80 ++++++++++++++++++++++++++++++++++++++++++++++++++++++------
 2 files changed, 72 insertions(+), 43 deletions(-)

diff --git a/configure.ac b/configure.ac
index 9011f37..1e704cd 100644
--- a/configure.ac
+++ b/configure.ac
@@ -105,7 +105,6 @@ AM_CONDITIONAL(MS_LIB_AVAILABLE, test x$ms_librarian = xyes)
 
 AC_CHECK_DECL([__SUNPRO_C], [SUNCC="yes"], [SUNCC="no"])
 WARN_CFLAGS=""
-WERROR_CFLAGS="-Werror"
 WARNING_CPP_DIRECTIVE="no"
 if test "x$GCC" = "xyes"; then
 	WARN_CFLAGS="-Wall -Wpointer-arith -Wstrict-prototypes \
@@ -114,8 +113,6 @@ if test "x$GCC" = "xyes"; then
 	WARNING_CPP_DIRECTIVE="yes"
 elif test "x$SUNCC" = "xyes"; then
 	WARN_CFLAGS="-v -fd"
-	WERROR_CFLAGS="-errtags \
-	-errwarn=%all,no%E_OLD_STYLE_FUNC_DEF,no%E_STATEMENT_NOT_REACHED"
 	WARNING_CPP_DIRECTIVE="yes"
 fi
 if test "x$WARNING_CPP_DIRECTIVE" = "xyes"; then
@@ -167,38 +164,6 @@ dnl AC_CHECK_FUNCS doesn't check for header files.
 dnl posix_fadvise() may be not available in older libc.
 AC_CHECK_SYMBOL([posix_fadvise], [fcntl.h], [fc_func_posix_fadvise=1], [fc_func_posix_fadvise=0])
 AC_DEFINE_UNQUOTED([HAVE_POSIX_FADVISE], [$fc_func_posix_fadvise], [Define to 1 if you have the 'posix_fadvise' function.])
-if test "$os_win32" = "no"; then
-	AC_MSG_CHECKING([for scandir])
-	fc_saved_CFLAGS="$CFLAGS"
-	CFLAGS="$CFLAGS $WARN_CFLAGS $WERROR_CFLAGS"
-	AC_TRY_COMPILE([
-		#include <dirent.h>
-		int main(void);
-	], [
-		int (* comp) (const struct dirent **, const struct dirent **) = 0;
-		struct dirent **d;
-		return scandir(".", &d, 0, comp) >= 0;
-	], [
-		AC_MSG_RESULT([yes])
-		AC_DEFINE([HAVE_SCANDIR], [1], [Define to 1 if you have the 'scandir' function.])
-	], [
-		AC_TRY_COMPILE([
-			#include <dirent.h>
-			int main(void);
-		], [
-			int (* comp) (const void *, const void *) = 0;
-			struct dirent **d;
-			return scandir(".", &d, 0, comp) >= 0;
-		], [
-			AC_MSG_RESULT([yes])
-			AC_DEFINE([HAVE_SCANDIR_VOID_P], [1], [Define to 1 if you have the 'scandir' function with int (* compar)(const void *, const void *)])
-		],[
-			AC_MSG_ERROR([
-*** No scandir function available.])
-		])
-	])
-fi
-CFLAGS="$fc_saved_CFLAGS"
 
 #
 if test "x$ac_cv_func_fstatvfs" = "xyes"; then
diff --git a/src/fcstat.c b/src/fcstat.c
index bbae102..354362f 100644
--- a/src/fcstat.c
+++ b/src/fcstat.c
@@ -42,6 +42,7 @@
 #ifdef HAVE_SYS_MOUNT_H
 #include <sys/mount.h>
 #endif
+#include <errno.h>
 
 #ifdef _WIN32
 #ifdef __GNUC__
@@ -164,21 +165,84 @@ FcDirChecksumScandirFilter(const struct dirent *entry)
 }
 #endif
 
-#ifdef HAVE_SCANDIR
 static int
 FcDirChecksumScandirSorter(const struct dirent **lhs, const struct dirent **rhs)
 {
     return strcmp((*lhs)->d_name, (*rhs)->d_name);
 }
-#elif HAVE_SCANDIR_VOID_P
-static int
-FcDirChecksumScandirSorter(const void *a, const void *b)
+
+static void
+free_dirent (struct dirent **p)
 {
-    const struct dirent *lhs = a, *rhs = b;
+    struct dirent **x;
+
+    for (x = p; *x != NULL; x++)
+	free (*x);
 
-    return strcmp(lhs->d_name, rhs->d_name);
+    free (p);
+}
+
+int
+FcScandir (const char		*dirp,
+	   struct dirent	***namelist,
+	   int (*filter) (const struct dirent *),
+	   int (*compar) (const struct dirent **, const struct dirent **));
+
+int
+FcScandir (const char		*dirp,
+	   struct dirent	***namelist,
+	   int (*filter) (const struct dirent *),
+	   int (*compar) (const struct dirent **, const struct dirent **))
+{
+    DIR *d;
+    struct dirent *dent, *p, **dlist, **dlp;
+    size_t lsize = 128, n = 0;
+
+    d = opendir (dirp);
+    if (!d)
+	return -1;
+
+    dlist = (struct dirent **) malloc (sizeof (struct dirent *) * lsize);
+    if (!dlist)
+    {
+	closedir (d);
+	errno = ENOMEM;
+
+	return -1;
+    }
+    *dlist = NULL;
+    while ((dent = readdir (d)))
+    {
+	if ((filter) (dent))
+	{
+	    p = (struct dirent *) malloc (sizeof (struct dirent));
+	    memcpy (p, dent, sizeof (struct dirent));
+	    if (n >= lsize)
+	    {
+		lsize += 128;
+		dlp = (struct dirent **) realloc (dlist, sizeof (struct dirent *) * lsize);
+		if (!dlp)
+		{
+		    free_dirent (dlist);
+		    closedir (d);
+		    errno = ENOMEM;
+
+		    return -1;
+		}
+		dlist = dlp;
+	    }
+	    dlist[n++] = p;
+	    dlist[n] = NULL;
+	}
+    }
+    closedir (d);
+
+    qsort (dlist, n, sizeof (struct dirent *), (int (*) (const void *, const void *))compar);
+
+    *namelist = dlist;
+
+    return n;
 }
-#endif
 
 static int
 FcDirChecksum (const FcChar8 *dir, time_t *checksum)
@@ -191,7 +255,7 @@ FcDirChecksum (const FcChar8 *dir, time_t *checksum)
 
     Adler32Init (&ctx);
 
-    n = scandir ((const char *)dir, &files,
+    n = FcScandir ((const char *)dir, &files,
 #ifdef HAVE_STRUCT_DIRENT_D_TYPE
 		 &FcDirChecksumScandirFilter,
 #else
-- 
2.3.3

From f43c58189bb667e65630c37f33a58d39d7c550f6 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 24 Feb 2015 15:01:14 +0900
Subject: [PATCH] ifdef'd the unnecessary code for win32

---
 src/fcxml.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/fcxml.c b/src/fcxml.c
index 29dd4d6..cdb14b6 100644
--- a/src/fcxml.c
+++ b/src/fcxml.c
@@ -2249,7 +2249,9 @@ FcParseInclude (FcConfigParse *parse)
     FcChar8	    *s;
     const FcChar8   *attr;
     FcBool	    ignore_missing = FcFalse;
+#ifndef _WIN32
     FcBool	    deprecated = FcFalse;
+#endif
     FcChar8	    *prefix = NULL, *p;
     static FcChar8  *userdir = NULL;
     static FcChar8  *userconf = NULL;
@@ -2263,9 +2265,11 @@ FcParseInclude (FcConfigParse *parse)
     attr = FcConfigGetAttribute (parse, "ignore_missing");
     if (attr && FcConfigLexBool (parse, (FcChar8 *) attr) == FcTrue)
 	ignore_missing = FcTrue;
+#ifndef _WIN32
     attr = FcConfigGetAttribute (parse, "deprecated");
     if (attr && FcConfigLexBool (parse, (FcChar8 *) attr) == FcTrue)
         deprecated = FcTrue;
+#endif
     attr = FcConfigGetAttribute (parse, "prefix");
     if (attr && FcStrCmp (attr, (const FcChar8 *)"xdg") == 0)
     {
-- 
2.3.3

From 45018e6979198b92b732b4b5e29671b2fe499bd8 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 24 Feb 2015 15:25:16 +0900
Subject: [PATCH] Fix pointer cast warning on win32

---
 src/fclist.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fclist.c b/src/fclist.c
index 6ad297c..d7e8fc0 100644
--- a/src/fclist.c
+++ b/src/fclist.c
@@ -270,7 +270,7 @@ FcListValueHash (FcValue    *value)
     case FcTypeCharSet:
 	return FcCharSetCount (v.u.c);
     case FcTypeFTFace:
-	return (long) v.u.f;
+	return (intptr_t) v.u.f;
     case FcTypeLangSet:
 	return FcLangSetHash (v.u.l);
     case FcTypeRange:
-- 
2.3.3

From dd427253cc73d8786bbf436ec4d026f370ab0812 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Wed, 25 Feb 2015 17:36:50 +0900
Subject: [PATCH] filter can be null

---
 src/fcstat.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fcstat.c b/src/fcstat.c
index 354362f..47b5884 100644
--- a/src/fcstat.c
+++ b/src/fcstat.c
@@ -213,7 +213,7 @@ FcScandir (const char		*dirp,
     *dlist = NULL;
     while ((dent = readdir (d)))
     {
-	if ((filter) (dent))
+	if (!filter || (filter) (dent))
 	{
 	    p = (struct dirent *) malloc (sizeof (struct dirent));
 	    memcpy (p, dent, sizeof (struct dirent));
-- 
2.3.3

From 8809d1b73b9c162ee0fecd314e2a80b287309954 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 26 Feb 2015 14:08:20 +0900
Subject: [PATCH] Copy the real size of struct dirent

In some platforms, d_name is defined as the flexible array member.
We may need to compute the real size for that case.
---
 configure.ac |  1 +
 src/fcstat.c | 11 +++++++++--
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/configure.ac b/configure.ac
index 1e704cd..9141d3d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -680,6 +680,7 @@ dnl Figure out what cache format suffix to use for this architecture
 AC_C_BIGENDIAN
 AC_CHECK_SIZEOF([void *])
 AC_CHECK_ALIGNOF([double])
+AC_CHECK_ALIGNOF([void *])
 
 dnl include the header file for workaround of miscalculating size on autoconf
 dnl particularly for fat binaries
diff --git a/src/fcstat.c b/src/fcstat.c
index 47b5884..d2eb258 100644
--- a/src/fcstat.c
+++ b/src/fcstat.c
@@ -215,8 +215,15 @@ FcScandir (const char		*dirp,
     {
 	if (!filter || (filter) (dent))
 	{
-	    p = (struct dirent *) malloc (sizeof (struct dirent));
-	    memcpy (p, dent, sizeof (struct dirent));
+	    size_t dentlen = sizeof (struct dirent);
+
+	    if (sizeof (struct dirent) == FcPtrToOffset (dent, dent->d_name))
+	    {
+		dentlen += strlen (dent->d_name) + 1;
+		dentlen = ((dentlen + ALIGNOF_VOID_P - 1) & ~(ALIGNOF_VOID_P - 1));
+	    }
+	    p = (struct dirent *) malloc (dentlen);
+	    memcpy (p, dent, dentlen);
 	    if (n >= lsize)
 	    {
 		lsize += 128;
-- 
2.3.3

From 1add10bfbc6f0667284f58cb388ae02f695b4a57 Mon Sep 17 00:00:00 2001
From: Michael Haubenwallner <michael.haubenwallner@ssi-schaefer.com>
Date: Thu, 26 Feb 2015 12:23:27 +0100
Subject: [PATCH] Ensure config.h is included first, bug#89336.

config.h may define ABI-specific macros, especially for AIX,
so has to be included before any system header - via fcint.h.

https://bugs.freedesktop.org/show_bug.cgi?id=89336
---
 src/fcarch.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/fcarch.c b/src/fcarch.c
index 398f4bb..4a921c0 100644
--- a/src/fcarch.c
+++ b/src/fcarch.c
@@ -21,10 +21,9 @@
  * PERFORMANCE OF THIS SOFTWARE.
  */
 
-#include <stdio.h>
-
 #include "fcint.h"
 #include "fcarch.h"
+#include <stdio.h>
 
 FC_ASSERT_STATIC (1 == sizeof (char));
 FC_ASSERT_STATIC (2 == sizeof (FcChar16));
-- 
2.3.3

From 97cf7ec4d740c9b3ac7c29388224f5e0c226a120 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Fri, 27 Feb 2015 12:04:44 +0900
Subject: [PATCH] Rework again to copy the struct dirent

Assuming that d_name is the last member of struct dirent.
In POSIX, the maximum length of d_name is defined as NAME_MAX
or FILENAME_MAX though, that assumption may be wrong on some
platforms where defines d_name as the flexible array member
and allocate the minimum memory to store d_name.

Patch from Raimund Steger
---
 src/fcstat.c | 9 ++-------
 1 file changed, 2 insertions(+), 7 deletions(-)

diff --git a/src/fcstat.c b/src/fcstat.c
index d2eb258..d444bf9 100644
--- a/src/fcstat.c
+++ b/src/fcstat.c
@@ -215,13 +215,8 @@ FcScandir (const char		*dirp,
     {
 	if (!filter || (filter) (dent))
 	{
-	    size_t dentlen = sizeof (struct dirent);
-
-	    if (sizeof (struct dirent) == FcPtrToOffset (dent, dent->d_name))
-	    {
-		dentlen += strlen (dent->d_name) + 1;
-		dentlen = ((dentlen + ALIGNOF_VOID_P - 1) & ~(ALIGNOF_VOID_P - 1));
-	    }
+	    size_t dentlen = FcPtrToOffset (dent, dent->d_name) + strlen (dent->d_name) + 1;
+	    dentlen = ((dentlen + ALIGNOF_VOID_P - 1) & ~(ALIGNOF_VOID_P - 1));
 	    p = (struct dirent *) malloc (dentlen);
 	    memcpy (p, dent, dentlen);
 	    if (n >= lsize)
-- 
2.3.3

From d6a5cc665a1d7e91332944353e92c83ad114368c Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Fri, 27 Feb 2015 14:17:26 +0900
Subject: [PATCH] Hardcode the blanks in the library

https://bugs.freedesktop.org/show_bug.cgi?id=79956
---
 Makefile.am               |   2 +-
 configure.ac              |   2 +
 fc-blanks/Makefile.am     |  40 +++++++++++++++
 fc-blanks/fc-blanks.py    | 125 ++++++++++++++++++++++++++++++++++++++++++++++
 fc-blanks/fcblanks.tmpl.h |  25 ++++++++++
 fonts.conf.in             |  68 -------------------------
 src/fcblanks.c            |   7 +++
 src/fccfg.c               |   3 +-
 8 files changed, 202 insertions(+), 70 deletions(-)
 create mode 100644 fc-blanks/Makefile.am
 create mode 100755 fc-blanks/fc-blanks.py
 create mode 100644 fc-blanks/fcblanks.tmpl.h

diff --git a/Makefile.am b/Makefile.am
index 2b949e4..2b4a5b8 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -21,7 +21,7 @@
 #  TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 #  PERFORMANCE OF THIS SOFTWARE.
 
-SUBDIRS=fontconfig fc-case fc-lang fc-glyphname src \
+SUBDIRS=fontconfig fc-blanks fc-case fc-lang fc-glyphname src \
 	fc-cache fc-cat fc-list fc-match fc-pattern fc-query fc-scan \
 	fc-validate conf.d test
 if ENABLE_DOCS
diff --git a/configure.ac b/configure.ac
index 9141d3d..8f0150e 100644
--- a/configure.ac
+++ b/configure.ac
@@ -53,6 +53,7 @@ m4_ifdef([PKG_INSTALLDIR], [PKG_INSTALLDIR], AC_SUBST([pkgconfigdir], ${libdir}/
 
 AM_MISSING_PROG([GIT], [git])
 AM_MISSING_PROG([GPERF], [gperf])
+AM_PATH_PYTHON
 
 AC_MSG_CHECKING([for RM macro])
 _predefined_rm=`make -p -f /dev/null 2>/dev/null|grep '^RM ='|sed -e 's/^RM = //'`
@@ -697,6 +698,7 @@ Makefile
 fontconfig/Makefile
 fc-lang/Makefile
 fc-glyphname/Makefile
+fc-blanks/Makefile
 fc-case/Makefile
 src/Makefile
 conf.d/Makefile
diff --git a/fc-blanks/Makefile.am b/fc-blanks/Makefile.am
new file mode 100644
index 0000000..f9c2486
--- /dev/null
+++ b/fc-blanks/Makefile.am
@@ -0,0 +1,40 @@
+# -*- encoding: utf-8 -*-
+#
+# Copyright © 2003  Keith Packard
+#
+# Permission to use, copy, modify, distribute, and sell this software and its
+# documentation for any purpose is hereby granted without fee, provided that
+# the above copyright notice appear in all copies and that both that
+# copyright notice and this permission notice appear in supporting
+# documentation, and that the name of the author(s) not be used in
+# advertising or publicity pertaining to distribution of the software without
+# specific, written prior permission.  The authors make no
+# representations about the suitability of this software for any purpose.  It
+# is provided "as is" without express or implied warranty.
+#
+# THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
+# INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
+# EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR
+# CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
+# DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
+# TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+# PERFORMANCE OF THIS SOFTWARE.
+
+NULL =
+BLANKSPY = fc-blanks.py
+BLANKS_H = fcblanks.h
+TMPL = fcblanks.tmpl.h
+noinst_SCRIPTS = $(BLANKSPY)
+noinst_HEADERS = $(BLANKS_H)
+
+$(BLANKS_H): $(BLANKSPY) $(TMPL)
+	$(AM_V_GEN) $(PYTHON) $(BLANKSPY) < $(TMPL) > $(BLANKS_H).tmp && \
+	mv $(BLANKS_H).tmp $(BLANKS_H) || ($(RM) $(BLANKS_H).tmp && false)
+
+EXTRA_DIST = 		\
+	$(BLANKS_H)	\
+	$(TMPL)		\
+	$(NULL)
+DISTCLEANFILES = $(BLANKS_H)
+
+-include $(top_srcdir)/git.mk
diff --git a/fc-blanks/fc-blanks.py b/fc-blanks/fc-blanks.py
new file mode 100755
index 0000000..fb01614
--- /dev/null
+++ b/fc-blanks/fc-blanks.py
@@ -0,0 +1,125 @@
+#! /usr/bin/python
+
+import urllib2
+import sys
+from lxml import html
+
+fp = urllib2.urlopen('http://unicode.org/cldr/utility/list-unicodeset.jsp?a=[%3AGC%3DZs%3A][%3ADI%3A]&abb=on&ucd=on&esc=on&g')
+data = fp.read()
+fp.close()
+
+dom = html.fromstring(data)
+x = dom.xpath('/html/body/form/p/text()')
+p = x[1]
+if p[0] == '[' and p[-1] == ']':
+    p = p.replace('[', '').replace(']', '')
+else:
+    sys.exit(1)
+fescape = False
+funicode = False
+frange = False
+fprocess = False
+v = 0
+vbegin = 0
+vend = 0
+n = 0
+l = []
+
+def insert(db, begin, end):
+    db.append([begin, end])
+
+for i in p:
+    if i == '\\':
+        if n > 0:
+            if frange == True and funicode == True:
+                vend = v
+                insert(l, vbegin, vend)
+                fprocess = True
+            elif funicode == True:
+                vbegin = v
+                vend = v
+                insert(l, vbegin, vend)
+                fprocess = True
+        funicode = False
+        fescape = True
+    elif i.lower() == 'u' and fescape == True:
+        funicode = True
+    elif i >= '0' and i <= '9' or i.lower() >= 'a' and i.lower() <= 'f':
+        if funicode == True:
+            v <<= 4
+            v += int(i, 16)
+        else:
+            raise RuntimeError, "Unable to parse Unicode"
+    elif i == ' ':
+        if frange == True and funicode == True:
+            vend = v
+            insert(l, vbegin, vend)
+            fprocess = True
+        elif funicode == True:
+            vbegin = v
+            vend = v
+            insert(l, vbegin, vend)
+            fprocess = True
+        fescape = False
+        funicode = False
+        frange = False
+    elif i == '-':
+        vbegin = v
+        v = 0
+        fescape = False
+        funicode = False
+        frange = True
+    else:
+        raise RuntimeError, "Unable to parse Unicode: %s" % i
+
+    if fprocess == True:
+        vbegin = 0
+        vend = 0
+        v = 0
+        fprocess = False
+        funicode = False
+        frange = False
+    n += 1
+
+if frange == True and funicode == True:
+    vend = v
+    insert(l, vbegin, vend)
+elif funicode == True:
+    vbegin = vend = v
+    insert(l, vbegin, vend)
+
+# somewhat missing 0x0020 in the list of code from Unicode Utilities
+insert(l, 0x0020, 0x0020)
+ncode = 0
+for i in l:
+    ncode += (i[1] - i[0] + 1)
+
+a = int(x[0].split(' ')[0].replace(',', ''))
+if a != ncode:
+    sys.stderr.write("Unexpected the amount of code points: %d (expected %d)\n" % (ncode, a))
+    sys.exit(1)
+insert(l, 0x2800, 0x2800)
+
+while True:
+    s = sys.stdin.readline().rstrip()
+    if s == "@@@":
+        break
+    print s
+
+print "static FcChar32 _fcBlanks[%s] = {" % (ncode + 1)
+k = 0
+for i in sorted(l, key=lambda(a): a[0]):
+    for j in range(i[0], i[1] + 1):
+        if k != 0:
+            print ","
+        print "    0x%04x" % j,
+        k += 1
+
+print "};"
+print '''
+static FcBlanks fcBlanks = {
+    %s,
+    -1,
+    _fcBlanks
+};
+''' % (ncode + 1)
diff --git a/fc-blanks/fcblanks.tmpl.h b/fc-blanks/fcblanks.tmpl.h
new file mode 100644
index 0000000..2bcaa21
--- /dev/null
+++ b/fc-blanks/fcblanks.tmpl.h
@@ -0,0 +1,25 @@
+/*
+ * fontconfig/fc-blanks/fcblanks.tmpl.h
+ *
+ * Copyright © 2003 Keith Packard
+ *
+ * Permission to use, copy, modify, distribute, and sell this software and its
+ * documentation for any purpose is hereby granted without fee, provided that
+ * the above copyright notice appear in all copies and that both that
+ * copyright notice and this permission notice appear in supporting
+ * documentation, and that the name of the author(s) not be used in
+ * advertising or publicity pertaining to distribution of the software without
+ * specific, written prior permission.  The authors make no
+ * representations about the suitability of this software for any purpose.  It
+ * is provided "as is" without express or implied warranty.
+ *
+ * THE AUTHOR(S) DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
+ * INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO
+ * EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY SPECIAL, INDIRECT OR
+ * CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,
+ * DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
+ * TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
+ * PERFORMANCE OF THIS SOFTWARE.
+ */
+
+@@@
diff --git a/fonts.conf.in b/fonts.conf.in
index f63ada1..7c16a70 100644
--- a/fonts.conf.in
+++ b/fonts.conf.in
@@ -79,74 +79,6 @@
 
 	<config>
 <!--
-  These are the default Unicode chars that are expected to be blank
-  in fonts.  All other blank chars are assumed to be broken and
-  won't appear in the resulting charsets
- -->
-		<blank>
-			<int>0x0020</int>	<!-- SPACE -->
-			<int>0x00A0</int>	<!-- NO-BREAK SPACE -->
-			<int>0x00AD</int>	<!-- SOFT HYPHEN -->
-			<int>0x034F</int>	<!-- COMBINING GRAPHEME JOINER -->
-			<int>0x061C</int>	<!-- ARABIC LETTER MARK -->
-			<int>0x115F</int>	<!-- HANGUL CHOSEONG FILLER -->
-			<int>0x1160</int>	<!-- HANGUL JUNGSEONG FILLER -->
-			<int>0x1680</int>	<!-- OGHAM SPACE MARK -->
-			<int>0x17B4</int>	<!-- KHMER VOWEL INHERENT AQ -->
-			<int>0x17B5</int>	<!-- KHMER VOWEL INHERENT AA -->
-			<int>0x180B</int>	<!-- MONGOLIAN FREE VARIATION SELECTOR ONE -->
-			<int>0x180C</int>	<!-- MONGOLIAN FREE VARIATION SELECTOR TWO -->
-			<int>0x180D</int>	<!-- MONGOLIAN FREE VARIATION SELECTOR THREE -->
-			<int>0x180E</int>	<!-- MONGOLIAN VOWEL SEPARATOR -->
-			<int>0x2000</int>	<!-- EN QUAD -->
-			<int>0x2001</int>	<!-- EM QUAD -->
-			<int>0x2002</int>	<!-- EN SPACE -->
-			<int>0x2003</int>	<!-- EM SPACE -->
-			<int>0x2004</int>	<!-- THREE-PER-EM SPACE -->
-			<int>0x2005</int>	<!-- FOUR-PER-EM SPACE -->
-			<int>0x2006</int>	<!-- SIX-PER-EM SPACE -->
-			<int>0x2007</int>	<!-- FIGURE SPACE -->
-			<int>0x2008</int>	<!-- PUNCTUATION SPACE -->
-			<int>0x2009</int>	<!-- THIN SPACE -->
-			<int>0x200A</int>	<!-- HAIR SPACE -->
-			<int>0x200B</int>	<!-- ZERO WIDTH SPACE -->
-			<int>0x200C</int>	<!-- ZERO WIDTH NON-JOINER -->
-			<int>0x200D</int>	<!-- ZERO WIDTH JOINER -->
-			<int>0x200E</int>	<!-- LEFT-TO-RIGHT MARK -->
-			<int>0x200F</int>	<!-- RIGHT-TO-LEFT MARK -->
-			<int>0x202A</int>	<!-- LEFT-TO-RIGHT EMBEDDING -->
-			<int>0x202B</int>	<!-- RIGHT-TO-LEFT EMBEDDING -->
-			<int>0x202C</int>	<!-- POP DIRECTIONAL FORMATTING -->
-			<int>0x202D</int>	<!-- LEFT-TO-RIGHT OVERRIDE -->
-			<int>0x202E</int>	<!-- RIGHT-TO-LEFT OVERRIDE -->
-			<int>0x202F</int>	<!-- NARROW NO-BREAK SPACE -->
-			<int>0x205F</int>	<!-- MEDIUM MATHEMATICAL SPACE -->
-			<int>0x2060</int>	<!-- WORD JOINER -->
-			<int>0x2061</int>	<!-- FUNCTION APPLICATION -->
-			<int>0x2062</int>	<!-- INVISIBLE TIMES -->
-			<int>0x2063</int>	<!-- INVISIBLE SEPARATOR -->
-			<int>0x2064</int>	<!-- INVISIBLE PLUS -->
-			<int>0x2066</int>	<!-- LEFT-TO-RIGHT ISOLATE -->
-			<int>0x2067</int>	<!-- RIGHT-TO-LEFT ISOLATE -->
-			<int>0x2068</int>	<!-- FIRST STRONG ISOLATE -->
-			<int>0x2069</int>	<!-- POP DIRECTIONAL ISOLATE -->
-			<int>0x206A</int>	<!-- INHIBIT SYMMETRIC SWAPPING -->
-			<int>0x206B</int>	<!-- ACTIVATE SYMMETRIC SWAPPING -->
-			<int>0x206C</int>	<!-- INHIBIT ARABIC FORM SHAPING -->
-			<int>0x206D</int>	<!-- ACTIVATE ARABIC FORM SHAPING -->
-			<int>0x206E</int>	<!-- NATIONAL DIGIT SHAPES -->
-			<int>0x206F</int>	<!-- NOMINAL DIGIT SHAPES -->
-			<int>0x2800</int>	<!-- BRAILLE PATTERN BLANK -->
-			<int>0x3000</int>	<!-- IDEOGRAPHIC SPACE -->
-			<int>0x3164</int>	<!-- HANGUL FILLER -->
-			<int>0xFEFF</int>	<!-- ZERO WIDTH NO-BREAK SPACE -->
-			<int>0xFFA0</int>	<!-- HALFWIDTH HANGUL FILLER -->
-			<int>0x1BCA0</int>	<!-- SHORTHAND FORMAT LETTER OVERLAP -->
-			<int>0x1BCA1</int>	<!-- SHORTHAND FORMAT CONTINUING OVERLAP -->
-			<int>0x1BCA2</int>	<!-- SHORTHAND FORMAT DOWN STEP -->
-			<int>0x1BCA3</int>	<!-- SHORTHAND FORMAT UP STEP -->
-		</blank>
-<!--
   Rescan configuration every 30 seconds when FcFontSetList is called
  -->
 		<rescan>
diff --git a/src/fcblanks.c b/src/fcblanks.c
index 46698bc..49f520b 100644
--- a/src/fcblanks.c
+++ b/src/fcblanks.c
@@ -41,6 +41,8 @@ FcBlanksCreate (void)
 void
 FcBlanksDestroy (FcBlanks *b)
 {
+    if (b->sblank == -1)
+	return;
     if (b->blanks)
 	free (b->blanks);
     free (b);
@@ -56,6 +58,11 @@ FcBlanksAdd (FcBlanks *b, FcChar32 ucs4)
 	if (b->blanks[sblank] == ucs4)
 	    return FcTrue;
 
+    if (b->sblank == -1)
+    {
+	fprintf (stderr, "Unable to update the static FcBlanks: 0x%04x\n", ucs4);
+	return FcTrue;
+    }
     if (b->nblank == b->sblank)
     {
 	sblank = b->sblank + 32;
diff --git a/src/fccfg.c b/src/fccfg.c
index b27ab0b..e2f7ea8 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -27,6 +27,7 @@
 #include "fcint.h"
 #include <dirent.h>
 #include <sys/types.h>
+#include "../fc-blanks/fcblanks.h"
 
 #if defined (_WIN32) && !defined (R_OK)
 #define R_OK 4
@@ -109,7 +110,7 @@ FcConfigCreate (void)
     if (!config->cacheDirs)
 	goto bail8;
 
-    config->blanks = 0;
+    config->blanks = &fcBlanks;
 
     config->substPattern = 0;
     config->substFont = 0;
-- 
2.3.3

From a9d4dba7492e060f9d225307c58d79bc50b16cd3 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Fri, 27 Feb 2015 15:48:54 +0900
Subject: [PATCH] Update the script to recognize the escaped space

---
 fc-blanks/fc-blanks.py | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/fc-blanks/fc-blanks.py b/fc-blanks/fc-blanks.py
index fb01614..a2f0b95 100755
--- a/fc-blanks/fc-blanks.py
+++ b/fc-blanks/fc-blanks.py
@@ -44,13 +44,20 @@ for i in p:
         fescape = True
     elif i.lower() == 'u' and fescape == True:
         funicode = True
+        fescape = False
     elif i >= '0' and i <= '9' or i.lower() >= 'a' and i.lower() <= 'f':
+        if fescape == True:
+            raise RuntimeError, "Unexpected escape code"
         if funicode == True:
             v <<= 4
             v += int(i, 16)
         else:
             raise RuntimeError, "Unable to parse Unicode"
     elif i == ' ':
+        if fescape == True:
+            funicode = True
+            fescape = False
+            v = 0x20
         if frange == True and funicode == True:
             vend = v
             insert(l, vbegin, vend)
@@ -60,13 +67,13 @@ for i in p:
             vend = v
             insert(l, vbegin, vend)
             fprocess = True
-        fescape = False
         funicode = False
         frange = False
     elif i == '-':
+        if fescape == True:
+            raise RuntimeError, "Unexpected escape code"
         vbegin = v
         v = 0
-        fescape = False
         funicode = False
         frange = True
     else:
@@ -88,8 +95,6 @@ elif funicode == True:
     vbegin = vend = v
     insert(l, vbegin, vend)
 
-# somewhat missing 0x0020 in the list of code from Unicode Utilities
-insert(l, 0x0020, 0x0020)
 ncode = 0
 for i in l:
     ncode += (i[1] - i[0] + 1)
@@ -98,6 +103,8 @@ a = int(x[0].split(' ')[0].replace(',', ''))
 if a != ncode:
     sys.stderr.write("Unexpected the amount of code points: %d (expected %d)\n" % (ncode, a))
     sys.exit(1)
+
+# exception; BRAILLE PATTERN BLANK
 insert(l, 0x2800, 0x2800)
 
 while True:
-- 
2.3.3

From 724664e3fd056b864576f8e100a8de5c0e93a725 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 2 Mar 2015 11:34:53 +0900
Subject: [PATCH] Fix a build issue when $(srcdir) != $(builddir)

---
 fc-blanks/Makefile.am | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/fc-blanks/Makefile.am b/fc-blanks/Makefile.am
index f9c2486..5b97000 100644
--- a/fc-blanks/Makefile.am
+++ b/fc-blanks/Makefile.am
@@ -27,8 +27,8 @@ TMPL = fcblanks.tmpl.h
 noinst_SCRIPTS = $(BLANKSPY)
 noinst_HEADERS = $(BLANKS_H)
 
-$(BLANKS_H): $(BLANKSPY) $(TMPL)
-	$(AM_V_GEN) $(PYTHON) $(BLANKSPY) < $(TMPL) > $(BLANKS_H).tmp && \
+$(BLANKS_H): $(TMPL) $(BLANKSPY)
+	$(AM_V_GEN) $(PYTHON) $(srcdir)/$(BLANKSPY) < $< > $(BLANKS_H).tmp && \
 	mv $(BLANKS_H).tmp $(BLANKS_H) || ($(RM) $(BLANKS_H).tmp && false)
 
 EXTRA_DIST = 		\
-- 
2.3.3

From f18f2f88f287a2438d2bf9b27773cb14606cbb11 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 9 Feb 2015 16:45:43 +0900
Subject: [PATCH] Don't add FC_LANG when it has "und"

to avoid the situation to find the better fallback font.

https://code.google.com/p/chromium/issues/detail?id=392724 has
more words to explain the details.

https://bugs.freedesktop.org/show_bug.cgi?id=81185
---
 src/fccfg.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/fccfg.c b/src/fccfg.c
index e2f7ea8..b92270b 100644
--- a/src/fccfg.c
+++ b/src/fccfg.c
@@ -1546,7 +1546,9 @@ FcConfigSubstituteWithPat (FcConfig    *config,
 	    FcStrList *l = FcStrListCreate (strs);
 	    FcChar8 *lang;
 	    FcValue v;
+	    FcLangSet *lsund = FcLangSetCreate ();
 
+	    FcLangSetAdd (lsund, (const FcChar8 *)"und");
 	    FcStrSetDestroy (strs);
 	    while (l && (lang = FcStrListNext (l)))
 	    {
@@ -1570,10 +1572,16 @@ FcConfigSubstituteWithPat (FcConfig    *config,
 			    FcLangSetDestroy (ls);
 			    if (b)
 				goto bail_lang;
+			    if (FcLangSetContains (vv.u.l, lsund))
+				goto bail_lang;
 			}
 			else
+			{
 			    if (FcStrCmpIgnoreCase (vv.u.s, lang) == 0)
 				goto bail_lang;
+			    if (FcStrCmpIgnoreCase (vv.u.s, (const FcChar8 *)"und") == 0)
+				goto bail_lang;
+			}
 		    }
 		}
 		v.type = FcTypeString;
@@ -1583,6 +1591,7 @@ FcConfigSubstituteWithPat (FcConfig    *config,
 	    }
 	bail_lang:
 	    FcStrListDone (l);
+	    FcLangSetDestroy (lsund);
 	}
 	if (FcPatternObjectGet (p, FC_PRGNAME_OBJECT, 0, &v) == FcResultNoMatch)
 	{
-- 
2.3.3

From 2f311c562d87c0bf95d27709e82afd196c2bff28 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Tue, 3 Mar 2015 11:30:12 +0900
Subject: [PATCH] Fix the array allocation

---
 src/fcstat.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fcstat.c b/src/fcstat.c
index d444bf9..1734fa4 100644
--- a/src/fcstat.c
+++ b/src/fcstat.c
@@ -219,7 +219,7 @@ FcScandir (const char		*dirp,
 	    dentlen = ((dentlen + ALIGNOF_VOID_P - 1) & ~(ALIGNOF_VOID_P - 1));
 	    p = (struct dirent *) malloc (dentlen);
 	    memcpy (p, dent, dentlen);
-	    if (n >= lsize)
+	    if ((n + 1) >= lsize)
 	    {
 		lsize += 128;
 		dlp = (struct dirent **) realloc (dlist, sizeof (struct dirent *) * lsize);
-- 
2.3.3

From 9c99baba66d335738318dc7cacef64fafb699ebf Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 21 Jan 2015 14:32:51 -0800
Subject: [PATCH] Remove dead code after previous commit

---
 src/fcfreetype.c | 339 +------------------------------------------------------
 1 file changed, 3 insertions(+), 336 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index f42004b..e8ab02e 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1986,227 +1986,13 @@ bail:
 #warning "No FT_Get_Next_Char: Please install freetype version 2.1.0 or newer"
 #endif
 
-typedef struct _FcCharEnt {
-    FcChar16	    bmp;
-    unsigned char   encode;
-} FcCharEnt;
-
-struct _FcCharMap {
-    const FcCharEnt *ent;
-    int		    nent;
-};
-
 typedef struct _FcFontDecode {
     FT_Encoding	    encoding;
-    const FcCharMap *map;
-    FcChar32	    max;
 } FcFontDecode;
 
-static const FcCharEnt AdobeSymbolEnt[] = {
-    { 0x0020, 0x20 }, /* SPACE	# space */
-    { 0x0021, 0x21 }, /* EXCLAMATION MARK	# exclam */
-    { 0x0023, 0x23 }, /* NUMBER SIGN	# numbersign */
-    { 0x0025, 0x25 }, /* PERCENT SIGN	# percent */
-    { 0x0026, 0x26 }, /* AMPERSAND	# ampersand */
-    { 0x0028, 0x28 }, /* LEFT PARENTHESIS	# parenleft */
-    { 0x0029, 0x29 }, /* RIGHT PARENTHESIS	# parenright */
-    { 0x002B, 0x2B }, /* PLUS SIGN	# plus */
-    { 0x002C, 0x2C }, /* COMMA	# comma */
-    { 0x002E, 0x2E }, /* FULL STOP	# period */
-    { 0x002F, 0x2F }, /* SOLIDUS	# slash */
-    { 0x0030, 0x30 }, /* DIGIT ZERO	# zero */
-    { 0x0031, 0x31 }, /* DIGIT ONE	# one */
-    { 0x0032, 0x32 }, /* DIGIT TWO	# two */
-    { 0x0033, 0x33 }, /* DIGIT THREE	# three */
-    { 0x0034, 0x34 }, /* DIGIT FOUR	# four */
-    { 0x0035, 0x35 }, /* DIGIT FIVE	# five */
-    { 0x0036, 0x36 }, /* DIGIT SIX	# six */
-    { 0x0037, 0x37 }, /* DIGIT SEVEN	# seven */
-    { 0x0038, 0x38 }, /* DIGIT EIGHT	# eight */
-    { 0x0039, 0x39 }, /* DIGIT NINE	# nine */
-    { 0x003A, 0x3A }, /* COLON	# colon */
-    { 0x003B, 0x3B }, /* SEMICOLON	# semicolon */
-    { 0x003C, 0x3C }, /* LESS-THAN SIGN	# less */
-    { 0x003D, 0x3D }, /* EQUALS SIGN	# equal */
-    { 0x003E, 0x3E }, /* GREATER-THAN SIGN	# greater */
-    { 0x003F, 0x3F }, /* QUESTION MARK	# question */
-    { 0x005B, 0x5B }, /* LEFT SQUARE BRACKET	# bracketleft */
-    { 0x005D, 0x5D }, /* RIGHT SQUARE BRACKET	# bracketright */
-    { 0x005F, 0x5F }, /* LOW LINE	# underscore */
-    { 0x007B, 0x7B }, /* LEFT CURLY BRACKET	# braceleft */
-    { 0x007C, 0x7C }, /* VERTICAL LINE	# bar */
-    { 0x007D, 0x7D }, /* RIGHT CURLY BRACKET	# braceright */
-    { 0x00A0, 0x20 }, /* NO-BREAK SPACE	# space */
-    { 0x00AC, 0xD8 }, /* NOT SIGN	# logicalnot */
-    { 0x00B0, 0xB0 }, /* DEGREE SIGN	# degree */
-    { 0x00B1, 0xB1 }, /* PLUS-MINUS SIGN	# plusminus */
-    { 0x00B5, 0x6D }, /* MICRO SIGN	# mu */
-    { 0x00D7, 0xB4 }, /* MULTIPLICATION SIGN	# multiply */
-    { 0x00F7, 0xB8 }, /* DIVISION SIGN	# divide */
-    { 0x0192, 0xA6 }, /* LATIN SMALL LETTER F WITH HOOK	# florin */
-    { 0x0391, 0x41 }, /* GREEK CAPITAL LETTER ALPHA	# Alpha */
-    { 0x0392, 0x42 }, /* GREEK CAPITAL LETTER BETA	# Beta */
-    { 0x0393, 0x47 }, /* GREEK CAPITAL LETTER GAMMA	# Gamma */
-    { 0x0394, 0x44 }, /* GREEK CAPITAL LETTER DELTA	# Delta */
-    { 0x0395, 0x45 }, /* GREEK CAPITAL LETTER EPSILON	# Epsilon */
-    { 0x0396, 0x5A }, /* GREEK CAPITAL LETTER ZETA	# Zeta */
-    { 0x0397, 0x48 }, /* GREEK CAPITAL LETTER ETA	# Eta */
-    { 0x0398, 0x51 }, /* GREEK CAPITAL LETTER THETA	# Theta */
-    { 0x0399, 0x49 }, /* GREEK CAPITAL LETTER IOTA	# Iota */
-    { 0x039A, 0x4B }, /* GREEK CAPITAL LETTER KAPPA	# Kappa */
-    { 0x039B, 0x4C }, /* GREEK CAPITAL LETTER LAMDA	# Lambda */
-    { 0x039C, 0x4D }, /* GREEK CAPITAL LETTER MU	# Mu */
-    { 0x039D, 0x4E }, /* GREEK CAPITAL LETTER NU	# Nu */
-    { 0x039E, 0x58 }, /* GREEK CAPITAL LETTER XI	# Xi */
-    { 0x039F, 0x4F }, /* GREEK CAPITAL LETTER OMICRON	# Omicron */
-    { 0x03A0, 0x50 }, /* GREEK CAPITAL LETTER PI	# Pi */
-    { 0x03A1, 0x52 }, /* GREEK CAPITAL LETTER RHO	# Rho */
-    { 0x03A3, 0x53 }, /* GREEK CAPITAL LETTER SIGMA	# Sigma */
-    { 0x03A4, 0x54 }, /* GREEK CAPITAL LETTER TAU	# Tau */
-    { 0x03A5, 0x55 }, /* GREEK CAPITAL LETTER UPSILON	# Upsilon */
-    { 0x03A6, 0x46 }, /* GREEK CAPITAL LETTER PHI	# Phi */
-    { 0x03A7, 0x43 }, /* GREEK CAPITAL LETTER CHI	# Chi */
-    { 0x03A8, 0x59 }, /* GREEK CAPITAL LETTER PSI	# Psi */
-    { 0x03A9, 0x57 }, /* GREEK CAPITAL LETTER OMEGA	# Omega */
-    { 0x03B1, 0x61 }, /* GREEK SMALL LETTER ALPHA	# alpha */
-    { 0x03B2, 0x62 }, /* GREEK SMALL LETTER BETA	# beta */
-    { 0x03B3, 0x67 }, /* GREEK SMALL LETTER GAMMA	# gamma */
-    { 0x03B4, 0x64 }, /* GREEK SMALL LETTER DELTA	# delta */
-    { 0x03B5, 0x65 }, /* GREEK SMALL LETTER EPSILON	# epsilon */
-    { 0x03B6, 0x7A }, /* GREEK SMALL LETTER ZETA	# zeta */
-    { 0x03B7, 0x68 }, /* GREEK SMALL LETTER ETA	# eta */
-    { 0x03B8, 0x71 }, /* GREEK SMALL LETTER THETA	# theta */
-    { 0x03B9, 0x69 }, /* GREEK SMALL LETTER IOTA	# iota */
-    { 0x03BA, 0x6B }, /* GREEK SMALL LETTER KAPPA	# kappa */
-    { 0x03BB, 0x6C }, /* GREEK SMALL LETTER LAMDA	# lambda */
-    { 0x03BC, 0x6D }, /* GREEK SMALL LETTER MU	# mu */
-    { 0x03BD, 0x6E }, /* GREEK SMALL LETTER NU	# nu */
-    { 0x03BE, 0x78 }, /* GREEK SMALL LETTER XI	# xi */
-    { 0x03BF, 0x6F }, /* GREEK SMALL LETTER OMICRON	# omicron */
-    { 0x03C0, 0x70 }, /* GREEK SMALL LETTER PI	# pi */
-    { 0x03C1, 0x72 }, /* GREEK SMALL LETTER RHO	# rho */
-    { 0x03C2, 0x56 }, /* GREEK SMALL LETTER FINAL SIGMA	# sigma1 */
-    { 0x03C3, 0x73 }, /* GREEK SMALL LETTER SIGMA	# sigma */
-    { 0x03C4, 0x74 }, /* GREEK SMALL LETTER TAU	# tau */
-    { 0x03C5, 0x75 }, /* GREEK SMALL LETTER UPSILON	# upsilon */
-    { 0x03C6, 0x66 }, /* GREEK SMALL LETTER PHI	# phi */
-    { 0x03C7, 0x63 }, /* GREEK SMALL LETTER CHI	# chi */
-    { 0x03C8, 0x79 }, /* GREEK SMALL LETTER PSI	# psi */
-    { 0x03C9, 0x77 }, /* GREEK SMALL LETTER OMEGA	# omega */
-    { 0x03D1, 0x4A }, /* GREEK THETA SYMBOL	# theta1 */
-    { 0x03D2, 0xA1 }, /* GREEK UPSILON WITH HOOK SYMBOL	# Upsilon1 */
-    { 0x03D5, 0x6A }, /* GREEK PHI SYMBOL	# phi1 */
-    { 0x03D6, 0x76 }, /* GREEK PI SYMBOL	# omega1 */
-    { 0x2022, 0xB7 }, /* BULLET	# bullet */
-    { 0x2026, 0xBC }, /* HORIZONTAL ELLIPSIS	# ellipsis */
-    { 0x2032, 0xA2 }, /* PRIME	# minute */
-    { 0x2033, 0xB2 }, /* DOUBLE PRIME	# second */
-    { 0x2044, 0xA4 }, /* FRACTION SLASH	# fraction */
-    { 0x20AC, 0xA0 }, /* EURO SIGN	# Euro */
-    { 0x2111, 0xC1 }, /* BLACK-LETTER CAPITAL I	# Ifraktur */
-    { 0x2118, 0xC3 }, /* SCRIPT CAPITAL P	# weierstrass */
-    { 0x211C, 0xC2 }, /* BLACK-LETTER CAPITAL R	# Rfraktur */
-    { 0x2126, 0x57 }, /* OHM SIGN	# Omega */
-    { 0x2135, 0xC0 }, /* ALEF SYMBOL	# aleph */
-    { 0x2190, 0xAC }, /* LEFTWARDS ARROW	# arrowleft */
-    { 0x2191, 0xAD }, /* UPWARDS ARROW	# arrowup */
-    { 0x2192, 0xAE }, /* RIGHTWARDS ARROW	# arrowright */
-    { 0x2193, 0xAF }, /* DOWNWARDS ARROW	# arrowdown */
-    { 0x2194, 0xAB }, /* LEFT RIGHT ARROW	# arrowboth */
-    { 0x21B5, 0xBF }, /* DOWNWARDS ARROW WITH CORNER LEFTWARDS	# carriagereturn */
-    { 0x21D0, 0xDC }, /* LEFTWARDS DOUBLE ARROW	# arrowdblleft */
-    { 0x21D1, 0xDD }, /* UPWARDS DOUBLE ARROW	# arrowdblup */
-    { 0x21D2, 0xDE }, /* RIGHTWARDS DOUBLE ARROW	# arrowdblright */
-    { 0x21D3, 0xDF }, /* DOWNWARDS DOUBLE ARROW	# arrowdbldown */
-    { 0x21D4, 0xDB }, /* LEFT RIGHT DOUBLE ARROW	# arrowdblboth */
-    { 0x2200, 0x22 }, /* FOR ALL	# universal */
-    { 0x2202, 0xB6 }, /* PARTIAL DIFFERENTIAL	# partialdiff */
-    { 0x2203, 0x24 }, /* THERE EXISTS	# existential */
-    { 0x2205, 0xC6 }, /* EMPTY SET	# emptyset */
-    { 0x2206, 0x44 }, /* INCREMENT	# Delta */
-    { 0x2207, 0xD1 }, /* NABLA	# gradient */
-    { 0x2208, 0xCE }, /* ELEMENT OF	# element */
-    { 0x2209, 0xCF }, /* NOT AN ELEMENT OF	# notelement */
-    { 0x220B, 0x27 }, /* CONTAINS AS MEMBER	# suchthat */
-    { 0x220F, 0xD5 }, /* N-ARY PRODUCT	# product */
-    { 0x2211, 0xE5 }, /* N-ARY SUMMATION	# summation */
-    { 0x2212, 0x2D }, /* MINUS SIGN	# minus */
-    { 0x2215, 0xA4 }, /* DIVISION SLASH	# fraction */
-    { 0x2217, 0x2A }, /* ASTERISK OPERATOR	# asteriskmath */
-    { 0x221A, 0xD6 }, /* SQUARE ROOT	# radical */
-    { 0x221D, 0xB5 }, /* PROPORTIONAL TO	# proportional */
-    { 0x221E, 0xA5 }, /* INFINITY	# infinity */
-    { 0x2220, 0xD0 }, /* ANGLE	# angle */
-    { 0x2227, 0xD9 }, /* LOGICAL AND	# logicaland */
-    { 0x2228, 0xDA }, /* LOGICAL OR	# logicalor */
-    { 0x2229, 0xC7 }, /* INTERSECTION	# intersection */
-    { 0x222A, 0xC8 }, /* UNION	# union */
-    { 0x222B, 0xF2 }, /* INTEGRAL	# integral */
-    { 0x2234, 0x5C }, /* THEREFORE	# therefore */
-    { 0x223C, 0x7E }, /* TILDE OPERATOR	# similar */
-    { 0x2245, 0x40 }, /* APPROXIMATELY EQUAL TO	# congruent */
-    { 0x2248, 0xBB }, /* ALMOST EQUAL TO	# approxequal */
-    { 0x2260, 0xB9 }, /* NOT EQUAL TO	# notequal */
-    { 0x2261, 0xBA }, /* IDENTICAL TO	# equivalence */
-    { 0x2264, 0xA3 }, /* LESS-THAN OR EQUAL TO	# lessequal */
-    { 0x2265, 0xB3 }, /* GREATER-THAN OR EQUAL TO	# greaterequal */
-    { 0x2282, 0xCC }, /* SUBSET OF	# propersubset */
-    { 0x2283, 0xC9 }, /* SUPERSET OF	# propersuperset */
-    { 0x2284, 0xCB }, /* NOT A SUBSET OF	# notsubset */
-    { 0x2286, 0xCD }, /* SUBSET OF OR EQUAL TO	# reflexsubset */
-    { 0x2287, 0xCA }, /* SUPERSET OF OR EQUAL TO	# reflexsuperset */
-    { 0x2295, 0xC5 }, /* CIRCLED PLUS	# circleplus */
-    { 0x2297, 0xC4 }, /* CIRCLED TIMES	# circlemultiply */
-    { 0x22A5, 0x5E }, /* UP TACK	# perpendicular */
-    { 0x22C5, 0xD7 }, /* DOT OPERATOR	# dotmath */
-    { 0x2320, 0xF3 }, /* TOP HALF INTEGRAL	# integraltp */
-    { 0x2321, 0xF5 }, /* BOTTOM HALF INTEGRAL	# integralbt */
-    { 0x2329, 0xE1 }, /* LEFT-POINTING ANGLE BRACKET	# angleleft */
-    { 0x232A, 0xF1 }, /* RIGHT-POINTING ANGLE BRACKET	# angleright */
-    { 0x25CA, 0xE0 }, /* LOZENGE	# lozenge */
-    { 0x2660, 0xAA }, /* BLACK SPADE SUIT	# spade */
-    { 0x2663, 0xA7 }, /* BLACK CLUB SUIT	# club */
-    { 0x2665, 0xA9 }, /* BLACK HEART SUIT	# heart */
-    { 0x2666, 0xA8 }, /* BLACK DIAMOND SUIT	# diamond */
-    { 0xF6D9, 0xD3 }, /* COPYRIGHT SIGN SERIF	# copyrightserif (CUS) */
-    { 0xF6DA, 0xD2 }, /* REGISTERED SIGN SERIF	# registerserif (CUS) */
-    { 0xF6DB, 0xD4 }, /* TRADE MARK SIGN SERIF	# trademarkserif (CUS) */
-    { 0xF8E5, 0x60 }, /* RADICAL EXTENDER	# radicalex (CUS) */
-    { 0xF8E6, 0xBD }, /* VERTICAL ARROW EXTENDER	# arrowvertex (CUS) */
-    { 0xF8E7, 0xBE }, /* HORIZONTAL ARROW EXTENDER	# arrowhorizex (CUS) */
-    { 0xF8E8, 0xE2 }, /* REGISTERED SIGN SANS SERIF	# registersans (CUS) */
-    { 0xF8E9, 0xE3 }, /* COPYRIGHT SIGN SANS SERIF	# copyrightsans (CUS) */
-    { 0xF8EA, 0xE4 }, /* TRADE MARK SIGN SANS SERIF	# trademarksans (CUS) */
-    { 0xF8EB, 0xE6 }, /* LEFT PAREN TOP	# parenlefttp (CUS) */
-    { 0xF8EC, 0xE7 }, /* LEFT PAREN EXTENDER	# parenleftex (CUS) */
-    { 0xF8ED, 0xE8 }, /* LEFT PAREN BOTTOM	# parenleftbt (CUS) */
-    { 0xF8EE, 0xE9 }, /* LEFT SQUARE BRACKET TOP	# bracketlefttp (CUS) */
-    { 0xF8EF, 0xEA }, /* LEFT SQUARE BRACKET EXTENDER	# bracketleftex (CUS) */
-    { 0xF8F0, 0xEB }, /* LEFT SQUARE BRACKET BOTTOM	# bracketleftbt (CUS) */
-    { 0xF8F1, 0xEC }, /* LEFT CURLY BRACKET TOP	# bracelefttp (CUS) */
-    { 0xF8F2, 0xED }, /* LEFT CURLY BRACKET MID	# braceleftmid (CUS) */
-    { 0xF8F3, 0xEE }, /* LEFT CURLY BRACKET BOTTOM	# braceleftbt (CUS) */
-    { 0xF8F4, 0xEF }, /* CURLY BRACKET EXTENDER	# braceex (CUS) */
-    { 0xF8F5, 0xF4 }, /* INTEGRAL EXTENDER	# integralex (CUS) */
-    { 0xF8F6, 0xF6 }, /* RIGHT PAREN TOP	# parenrighttp (CUS) */
-    { 0xF8F7, 0xF7 }, /* RIGHT PAREN EXTENDER	# parenrightex (CUS) */
-    { 0xF8F8, 0xF8 }, /* RIGHT PAREN BOTTOM	# parenrightbt (CUS) */
-    { 0xF8F9, 0xF9 }, /* RIGHT SQUARE BRACKET TOP	# bracketrighttp (CUS) */
-    { 0xF8FA, 0xFA }, /* RIGHT SQUARE BRACKET EXTENDER	# bracketrightex (CUS) */
-    { 0xF8FB, 0xFB }, /* RIGHT SQUARE BRACKET BOTTOM	# bracketrightbt (CUS) */
-    { 0xF8FC, 0xFC }, /* RIGHT CURLY BRACKET TOP	# bracerighttp (CUS) */
-    { 0xF8FD, 0xFD }, /* RIGHT CURLY BRACKET MID	# bracerightmid (CUS) */
-    { 0xF8FE, 0xFE }, /* RIGHT CURLY BRACKET BOTTOM	# bracerightbt (CUS) */
-};
-
-static const FcCharMap AdobeSymbol = {
-    AdobeSymbolEnt,
-    sizeof (AdobeSymbolEnt) / sizeof (AdobeSymbolEnt[0]),
-};
-
 static const FcFontDecode fcFontDecoders[] = {
-    { ft_encoding_unicode,	0,		(1 << 21) - 1 },
-    { ft_encoding_symbol,	0,		(1 << 16) - 1 },
+    { ft_encoding_unicode },
+    { ft_encoding_symbol },
 };
 
 #define NUM_DECODE  (int) (sizeof (fcFontDecoders) / sizeof (fcFontDecoders[0]))
@@ -2215,54 +2001,6 @@ static const FcChar32	prefer_unicode[] = {
     0x20ac,	/* EURO SIGN */
 };
 
-#define NUM_PREFER_UNICODE  (int) (sizeof (prefer_unicode) / sizeof (prefer_unicode[0]))
-
-FcChar32
-FcFreeTypeUcs4ToPrivate (FcChar32 ucs4, const FcCharMap *map)
-{
-    int		low, high, mid;
-    FcChar16	bmp;
-
-    low = 0;
-    high = map->nent - 1;
-    if (ucs4 < map->ent[low].bmp || map->ent[high].bmp < ucs4)
-	return ~0;
-    while (low <= high)
-    {
-	mid = (high + low) >> 1;
-	bmp = map->ent[mid].bmp;
-	if (ucs4 == bmp)
-	    return (FT_ULong) map->ent[mid].encode;
-	if (ucs4 < bmp)
-	    high = mid - 1;
-	else
-	    low = mid + 1;
-    }
-    return ~0;
-}
-
-FcChar32
-FcFreeTypePrivateToUcs4 (FcChar32 private, const FcCharMap *map)
-{
-    int	    i;
-
-    for (i = 0; i < map->nent; i++)
-	if (map->ent[i].encode == private)
-	    return (FcChar32) map->ent[i].bmp;
-    return ~0;
-}
-
-const FcCharMap *
-FcFreeTypeGetPrivateMap (FT_Encoding encoding)
-{
-    int	i;
-
-    for (i = 0; i < NUM_DECODE; i++)
-	if (fcFontDecoders[i].encoding == encoding)
-	    return fcFontDecoders[i].map;
-    return 0;
-}
-
 #include "../fc-glyphname/fcglyphname.h"
 
 static FcChar32
@@ -2390,8 +2128,6 @@ FcFreeTypeCharIndex (FT_Face face, FcChar32 ucs4)
 {
     int		    initial, offset, decode;
     FT_UInt	    glyphindex;
-    FcChar32	    charcode;
-    int		    p;
 
     initial = 0;
 
@@ -2409,12 +2145,6 @@ FcFreeTypeCharIndex (FT_Face face, FcChar32 ucs4)
 	if (initial == NUM_DECODE)
 	    initial = 0;
     }
-    for (p = 0; p < NUM_PREFER_UNICODE; p++)
-	if (ucs4 == prefer_unicode[p])
-	{
-	    initial = 0;
-	    break;
-	}
     /*
      * Check each encoding for the glyph, starting with the current one
      */
@@ -2424,15 +2154,7 @@ FcFreeTypeCharIndex (FT_Face face, FcChar32 ucs4)
 	if (!face->charmap || face->charmap->encoding != fcFontDecoders[decode].encoding)
 	    if (FT_Select_Charmap (face, fcFontDecoders[decode].encoding) != 0)
 		continue;
-	if (fcFontDecoders[decode].map)
-	{
-	    charcode = FcFreeTypeUcs4ToPrivate (ucs4, fcFontDecoders[decode].map);
-	    if (charcode == ~0U)
-		continue;
-	}
-	else
-	    charcode = ucs4;
-	glyphindex = FT_Get_Char_Index (face, (FT_ULong) charcode);
+	glyphindex = FT_Get_Char_Index (face, (FT_ULong) ucs4);
 	if (glyphindex)
 	    return glyphindex;
     }
@@ -2525,9 +2247,7 @@ FcFreeTypeCharSetAndSpacingForSize (FT_Face face, FcBlanks *blanks, int *spacing
 #endif
     FcCharSet	    *fcs;
     FcCharLeaf	    *leaf;
-    const FcCharMap *map;
     int		    o;
-    int		    i;
     FT_UInt	    glyph;
     FT_Pos	    advance, advance_one = 0, advance_two = 0;
     FcBool	    has_advance = FcFalse, fixed_advance = FcTrue, dual_advance = FcFalse;
@@ -2552,60 +2272,7 @@ FcFreeTypeCharSetAndSpacingForSize (FT_Face face, FcBlanks *blanks, int *spacing
     {
 	if (FT_Select_Charmap (face, fcFontDecoders[o].encoding) != 0)
 	    continue;
-	map = fcFontDecoders[o].map;
-	if (map)
-	{
-	    /*
-	     * Non-Unicode tables are easy; there's a list of all possible
-	     * characters
-	     */
-	    for (i = 0; i < map->nent; i++)
-	    {
-		ucs4 = map->ent[i].bmp;
-		glyph = FT_Get_Char_Index (face, map->ent[i].encode);
-		if (glyph &&
-		    FcFreeTypeCheckGlyph (face, ucs4, glyph, blanks, &advance, using_strike))
-		{
-		    /*
-		     * ignore glyphs with zero advance. They’re
-		     * combining characters, and while their behaviour
-		     * isn’t well defined for monospaced applications in
-		     * Unicode, there are many fonts which include
-		     * zero-width combining characters in otherwise
-		     * monospaced fonts.
-		     */
-		    if (advance)
-		    {
-			if (!has_advance)
-			{
-			    has_advance = FcTrue;
-			    advance_one = advance;
-			}
-			else if (!APPROXIMATELY_EQUAL (advance, advance_one))
-			{
-			    if (fixed_advance)
-			    {
-				dual_advance = FcTrue;
-				fixed_advance = FcFalse;
-				advance_two = advance;
-			    }
-			    else if (!APPROXIMATELY_EQUAL (advance, advance_two))
-				dual_advance = FcFalse;
-			}
-		    }
 
-		    leaf = FcCharSetFindLeafCreate (fcs, ucs4);
-		    if (!leaf)
-			goto bail1;
-		    leaf->map[(ucs4 & 0xff) >> 5] |= (1 << (ucs4 & 0x1f));
-#ifdef CHECK
-		    if (ucs4 > font_max)
-			font_max = ucs4;
-#endif
-		}
-	    }
-	}
-	else
 	{
             page = ~0;
             leaf = NULL;
-- 
2.3.3

From d997d7c770cd6a36159090fd0b8720a3dc426707 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 21 Jan 2015 14:35:03 -0800
Subject: [PATCH] Simplify some more

---
 src/fcfreetype.c | 20 ++++++++------------
 1 file changed, 8 insertions(+), 12 deletions(-)

diff --git a/src/fcfreetype.c b/src/fcfreetype.c
index e8ab02e..50ff348 100644
--- a/src/fcfreetype.c
+++ b/src/fcfreetype.c
@@ -1986,16 +1986,12 @@ bail:
 #warning "No FT_Get_Next_Char: Please install freetype version 2.1.0 or newer"
 #endif
 
-typedef struct _FcFontDecode {
-    FT_Encoding	    encoding;
-} FcFontDecode;
-
-static const FcFontDecode fcFontDecoders[] = {
-    { ft_encoding_unicode },
-    { ft_encoding_symbol },
+static const FT_Encoding fcFontEncodings[] = {
+    FT_ENCODING_UNICODE,
+    FT_ENCODING_MS_SYMBOL
 };
 
-#define NUM_DECODE  (int) (sizeof (fcFontDecoders) / sizeof (fcFontDecoders[0]))
+#define NUM_DECODE  (int) (sizeof (fcFontEncodings) / sizeof (fcFontEncodings[0]))
 
 static const FcChar32	prefer_unicode[] = {
     0x20ac,	/* EURO SIGN */
@@ -2140,7 +2136,7 @@ FcFreeTypeCharIndex (FT_Face face, FcChar32 ucs4)
     if (face->charmap)
     {
 	for (; initial < NUM_DECODE; initial++)
-	    if (fcFontDecoders[initial].encoding == face->charmap->encoding)
+	    if (fcFontEncodings[initial] == face->charmap->encoding)
 		break;
 	if (initial == NUM_DECODE)
 	    initial = 0;
@@ -2151,8 +2147,8 @@ FcFreeTypeCharIndex (FT_Face face, FcChar32 ucs4)
     for (offset = 0; offset < NUM_DECODE; offset++)
     {
 	decode = (initial + offset) % NUM_DECODE;
-	if (!face->charmap || face->charmap->encoding != fcFontDecoders[decode].encoding)
-	    if (FT_Select_Charmap (face, fcFontDecoders[decode].encoding) != 0)
+	if (!face->charmap || face->charmap->encoding != fcFontEncodings[decode])
+	    if (FT_Select_Charmap (face, fcFontEncodings[decode]) != 0)
 		continue;
 	glyphindex = FT_Get_Char_Index (face, (FT_ULong) ucs4);
 	if (glyphindex)
@@ -2270,7 +2266,7 @@ FcFreeTypeCharSetAndSpacingForSize (FT_Face face, FcBlanks *blanks, int *spacing
 #endif
     for (o = 0; o < NUM_DECODE; o++)
     {
-	if (FT_Select_Charmap (face, fcFontDecoders[o].encoding) != 0)
+	if (FT_Select_Charmap (face, fcFontEncodings[o]) != 0)
 	    continue;
 
 	{
-- 
2.3.3

From 96a3f6879c13577cc9edd867b3f89b0cba469073 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Thu, 5 Mar 2015 17:52:04 +0900
Subject: [PATCH] Improve the performance on searching blanks

After the change of d6a5cc665a1d7e91332944353e92c83ad114368c
we have a lot of code points in FcBlanks. doing the linear search
on the array isn't comfortable anymore.
So re-implementing FcBlanksIsMember() to use the binary search.

Figuring out how much improved after this change depends on
how many fonts proceed with fc-cache say though, it's about 20 times
faster here on testing. which sounds good enough for
improvement.
---
 src/fcblanks.c | 21 ++++++++++++++++++---
 1 file changed, 18 insertions(+), 3 deletions(-)

diff --git a/src/fcblanks.c b/src/fcblanks.c
index 49f520b..f163a8f 100644
--- a/src/fcblanks.c
+++ b/src/fcblanks.c
@@ -82,11 +82,26 @@ FcBlanksAdd (FcBlanks *b, FcChar32 ucs4)
 FcBool
 FcBlanksIsMember (FcBlanks *b, FcChar32 ucs4)
 {
-    int	i;
+    int lower = 0, higher = b->nblank, middle;
 
-    for (i = 0; i < b->nblank; i++)
-	if (b->blanks[i] == ucs4)
+    if (b->nblank == 0 ||
+	b->blanks[0] > ucs4 ||
+	b->blanks[b->nblank - 1] < ucs4)
+	return FcFalse;
+    while (1)
+    {
+	middle = (lower + higher) / 2;
+	if (b->blanks[middle] == ucs4)
 	    return FcTrue;
+	if (middle == lower ||
+	    middle == higher)
+	    break;
+	if (b->blanks[middle] < ucs4)
+	    lower = middle + 1;
+	else
+	    higher = middle - 1;
+    }
+
     return FcFalse;
 }
 #define __fcblanks__
-- 
2.3.3

From ed74a58ccc245bacd907cd91e0f3df64e427c163 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Fri, 6 Mar 2015 11:05:23 +0900
Subject: [PATCH] Fix a segfault when OOM happened.

Reported by Matt Breedlove
---
 src/fcinit.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/fcinit.c b/src/fcinit.c
index db62c21..6134ed4 100644
--- a/src/fcinit.c
+++ b/src/fcinit.c
@@ -209,6 +209,8 @@ FcInitBringUptoDate (void)
     FcConfig	*config = FcConfigGetCurrent ();
     time_t	now;
 
+    if (!config)
+	return FcFalse;
     /*
      * rescanInterval == 0 disables automatic up to date
      */
-- 
2.3.3

From 484834c186dee281bcd13067d7b7bce1322b4e0b Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Fri, 6 Mar 2015 11:15:26 +0900
Subject: [PATCH] Fix a bug in the previous change forFcBlanksIsMember()

---
 src/fcblanks.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/fcblanks.c b/src/fcblanks.c
index f163a8f..9ac0d5b 100644
--- a/src/fcblanks.c
+++ b/src/fcblanks.c
@@ -93,8 +93,7 @@ FcBlanksIsMember (FcBlanks *b, FcChar32 ucs4)
 	middle = (lower + higher) / 2;
 	if (b->blanks[middle] == ucs4)
 	    return FcTrue;
-	if (middle == lower ||
-	    middle == higher)
+	if (lower == higher)
 	    break;
 	if (b->blanks[middle] < ucs4)
 	    lower = middle + 1;
-- 
2.3.3

From f5b1e0ab97daa0e08af8d667cabb700bb73da568 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 9 Mar 2015 12:18:03 +0900
Subject: [PATCH] Fix an infinite loop in FcBlanksIsMember()

---
 src/fcblanks.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/fcblanks.c b/src/fcblanks.c
index 9ac0d5b..5132a51 100644
--- a/src/fcblanks.c
+++ b/src/fcblanks.c
@@ -93,7 +93,7 @@ FcBlanksIsMember (FcBlanks *b, FcChar32 ucs4)
 	middle = (lower + higher) / 2;
 	if (b->blanks[middle] == ucs4)
 	    return FcTrue;
-	if (lower == higher)
+	if (lower >= higher)
 	    break;
 	if (b->blanks[middle] < ucs4)
 	    lower = middle + 1;
-- 
2.3.3

From b75d809d1298b791f39596170950597bcfe98dd6 Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 9 Mar 2015 12:22:30 +0900
Subject: [PATCH] Fix a trivial bug for dist

---
 fc-blanks/Makefile.am | 1 +
 1 file changed, 1 insertion(+)

diff --git a/fc-blanks/Makefile.am b/fc-blanks/Makefile.am
index 5b97000..e9de1fe 100644
--- a/fc-blanks/Makefile.am
+++ b/fc-blanks/Makefile.am
@@ -32,6 +32,7 @@ $(BLANKS_H): $(TMPL) $(BLANKSPY)
 	mv $(BLANKS_H).tmp $(BLANKS_H) || ($(RM) $(BLANKS_H).tmp && false)
 
 EXTRA_DIST = 		\
+	$(BLANKSPY)	\
 	$(BLANKS_H)	\
 	$(TMPL)		\
 	$(NULL)
-- 
2.3.3

From 69ff6b6e260584e383c38b1b7034ddcbb23d214f Mon Sep 17 00:00:00 2001
From: Akira TAGOH <akira@tagoh.org>
Date: Mon, 9 Mar 2015 12:22:40 +0900
Subject: [PATCH] Bump version to 2.11.93

---
 README                  | 37 +++++++++++++++++++++++++++++++++++--
 configure.ac            |  6 +++---
 fontconfig/fontconfig.h |  2 +-
 3 files changed, 39 insertions(+), 6 deletions(-)

diff --git a/README b/README
index 6ac1644..4a4dc30 100644
--- a/README
+++ b/README
@@ -1,12 +1,45 @@
                               Fontconfig
              Font configuration and customization library
-                      Version 2.11.92 (2.12 RC2)
-                              2015-01-13
+                      Version 2.11.93 (2.12 RC3)
+                              2015-03-09
 
 
 Check INSTALL for compilation and installation instructions.
 Report bugs to https://bugs.freedesktop.org in the fontconfig module.
 
+2.11.93 (2.12 RC3)
+
+Akira TAGOH (18):
+      Fix a typo in docs
+      Add pkg.m4 to git
+      Fix a build fail on some non-POSIX platforms
+      ifdef'd the unnecessary code for win32
+      Fix pointer cast warning on win32
+      filter can be null
+      Copy the real size of struct dirent
+      Rework again to copy the struct dirent
+      Hardcode the blanks in the library
+      Update the script to recognize the escaped space
+      Fix a build issue when $(srcdir) != $(builddir)
+      Don't add FC_LANG when it has "und"
+      Fix the array allocation
+      Improve the performance on searching blanks
+      Fix a segfault when OOM happened.
+      Fix a bug in the previous change forFcBlanksIsMember()
+      Fix an infinite loop in FcBlanksIsMember()
+      Fix a trivial bug for dist
+
+Alan Coopersmith (1):
+      Fix configure to work with Solaris Studio compilers
+
+Behdad Esfahbod (3):
+      Fix symbol cmap handling
+      Remove dead code after previous commit
+      Simplify some more
+
+Michael Haubenwallner (1):
+      Ensure config.h is included first, bug#89336.
+
 2.11.92 (2.12 RC2)
 
 Akira TAGOH (1):
diff --git a/configure.ac b/configure.ac
index 8f0150e..bb98804 100644
--- a/configure.ac
+++ b/configure.ac
@@ -33,7 +33,7 @@ dnl This is the package version number, not the shared library
 dnl version.  This same version number must appear in fontconfig/fontconfig.h
 dnl Yes, it is a pain to synchronize version numbers.  Unfortunately, it's
 dnl not possible to extract the version number here from fontconfig.h
-AC_INIT([fontconfig], [2.11.92], [https://bugs.freedesktop.org/enter_bug.cgi?product=fontconfig])
+AC_INIT([fontconfig], [2.11.93], [https://bugs.freedesktop.org/enter_bug.cgi?product=fontconfig])
 AM_INIT_AUTOMAKE([1.11 parallel-tests dist-bzip2])
 m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])
 
@@ -73,11 +73,11 @@ dnl libtool versioning
 dnl bump revision when fixing bugs
 dnl bump current and age, reset revision to zero when adding APIs
 dnl bump current, leave age, reset revision to zero when changing/removing APIS
-LIBT_CURRENT=9
+LIBT_CURRENT=10
 LIBT_REVISION=0
 AC_SUBST(LIBT_CURRENT)
 AC_SUBST(LIBT_REVISION)
-LIBT_AGE=8
+LIBT_AGE=9
 
 LIBT_VERSION_INFO="$LIBT_CURRENT:$LIBT_REVISION:$LIBT_AGE"
 AC_SUBST(LIBT_VERSION_INFO)
diff --git a/fontconfig/fontconfig.h b/fontconfig/fontconfig.h
index 600ed68..b14c961 100644
--- a/fontconfig/fontconfig.h
+++ b/fontconfig/fontconfig.h
@@ -52,7 +52,7 @@ typedef int		FcBool;
 
 #define FC_MAJOR	2
 #define FC_MINOR	11
-#define FC_REVISION	92
+#define FC_REVISION	93
 
 #define FC_VERSION	((FC_MAJOR * 10000) + (FC_MINOR * 100) + (FC_REVISION))
 
-- 
2.3.3

